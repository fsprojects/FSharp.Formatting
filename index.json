[{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/index.html","title":"API Reference","content":"MarkdownPatterns \nMarkdownPatterns \nMarkdownRange \nParamKeys \nApiDocAttribute \nApiDocCollection \nApiDocComment \nApiDocEntity \nApiDocEntityInfo \nApiDocHtml \nApiDocInput \nApiDocMember \nApiDocMemberKind \nApiDocModel \nApiDocNamespace \nApiDocType \nApiDocs \nApiDocsSearchIndexEntry \nAttribute \nDocComment \nMember \nMemberKind \nModule \nModuleInfo \nType \nTypeInfo \nCLikeFormat \nCPlusPlusFormat \nCSharpFormat \nCodeFormat \nFSharpFormat \nHaskellFormat \nHtmlFormat \nJavaScriptFormat \nMshFormat \nPaketFormat \nPhpFormat \nSourceFormat \nSyntaxHighlighter \nTsqlFormat \nTypeScriptFormat \nVisualBasicFormat \nCodeFormat \nCodeFormatAgent \nErrorKind \nFormattedContent \nFormattedSnippet \nLine \nSnippet \nSourceError \nTokenKind \nTokenSpan \nTokenSpans \nToolTipSpan \nToolTipSpans \nLiterate \nLiterateCodeOptions \nLiterateCodeVisibility \nLiterateDocument \nLiterateParagraph \nLiterateParagraphOptions \nLiterateSource \nOutputKind \nFsiEmbedKind \nFsiEvaluationFailedInfo \nFsiEvaluationResult \nFsiEvaluator \nFsiEvaluatorConfig \nIFsiEvaluationResult \nIFsiEvaluator \nMarkdown \nMarkdownColumnAlignment \nMarkdownDocument \nMarkdownEmbedParagraphs \nMarkdownEmbedSpans \nMarkdownListKind \nMarkdownParagraph \nMarkdownParagraphs \nMarkdownParseOptions \nMarkdownSpan \nMarkdownSpans \nMarkdownTableRow \nMarkdownRange \nParamKey \nParameters \nParagraphLeafInfo \nParagraphNestedInfo \nParagraphSpansInfo \nSpanLeafInfo \nSpanNodeInfo"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-markdownpatterns.html","title":"MarkdownPatterns","content":"MarkdownPatterns \n<p class='summary'>\n Provides active patterns for extracting `LiterateParagraph` values from\n Markdown documents.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns.html","title":"MarkdownPatterns","content":"MarkdownPatterns \n<p class='summary'>\n This module provides an easy way of processing Markdown documents.\n It lets you decompose documents into leafs and nodes with nested paragraphs.\n</p> \nMarkdownPatterns.ParagraphLeafInfo \nParagraphLeafInfo \nMarkdownPatterns.ParagraphNestedInfo \nParagraphNestedInfo \nMarkdownPatterns.ParagraphSpansInfo \nParagraphSpansInfo \nMarkdownPatterns.SpanLeafInfo \nSpanLeafInfo \nMarkdownPatterns.SpanNodeInfo \nSpanNodeInfo \nMarkdownPatterns.SpanLeaf \nSpanLeaf \nMarkdownPatterns.SpanNode \nSpanNode \nMarkdownPatterns.ParagraphSpans \nParagraphSpans \nMarkdownPatterns.ParagraphLeaf \nParagraphLeaf \nMarkdownPatterns.ParagraphNested \nParagraphNested"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns.html#SpanLeaf","title":"MarkdownPatterns.SpanLeaf","content":"MarkdownPatterns.SpanLeaf \nSpanLeaf \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns.html#SpanNode","title":"MarkdownPatterns.SpanNode","content":"MarkdownPatterns.SpanNode \nSpanNode \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns.html#ParagraphSpans","title":"MarkdownPatterns.ParagraphSpans","content":"MarkdownPatterns.ParagraphSpans \nParagraphSpans \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns.html#ParagraphLeaf","title":"MarkdownPatterns.ParagraphLeaf","content":"MarkdownPatterns.ParagraphLeaf \nParagraphLeaf \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns.html#ParagraphNested","title":"MarkdownPatterns.ParagraphNested","content":"MarkdownPatterns.ParagraphNested \nParagraphNested \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrangemodule.html","title":"MarkdownRange","content":"MarkdownRange \n \nMarkdownRange.zero \nzero \nMarkdownRange.mergeRanges \nmergeRanges"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrangemodule.html#zero","title":"MarkdownRange.zero","content":"MarkdownRange.zero \nzero \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrangemodule.html#mergeRanges","title":"MarkdownRange.mergeRanges","content":"MarkdownRange.mergeRanges \nmergeRanges \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html","title":"ParamKeys","content":"ParamKeys \n<p class='summary'>\n Defines the parameter keys known to FSharp.Formatting processing code\n</p> \nParamKeys.root \nroot \nParamKeys.( fsdocs-authors ) \n( fsdocs-authors ) \nParamKeys.( fsdocs-repository-link ) \n( fsdocs-repository-link ) \nParamKeys.( fsdocs-list-of-namespaces ) \n( fsdocs-list-of-namespaces ) \nParamKeys.( fsdocs-list-of-documents ) \n( fsdocs-list-of-documents ) \nParamKeys.( fsdocs-collection-name ) \n( fsdocs-collection-name ) \nParamKeys.( fsdocs-content ) \n( fsdocs-content ) \nParamKeys.( fsdocs-tooltips ) \n( fsdocs-tooltips ) \nParamKeys.( fsdocs-page-title ) \n( fsdocs-page-title ) \nParamKeys.( fsdocs-page-source ) \n( fsdocs-page-source ) \nParamKeys.( fsdocs-repository-commit ) \n( fsdocs-repository-commit ) \nParamKeys.( fsdocs-copyright ) \n( fsdocs-copyright ) \nParamKeys.( fsdocs-license-link ) \n( fsdocs-license-link ) \nParamKeys.( fsdocs-logo-link ) \n( fsdocs-logo-link ) \nParamKeys.( fsdocs-logo-src ) \n( fsdocs-logo-src ) \nParamKeys.( fsdocs-navbar-position ) \n( fsdocs-navbar-position ) \nParamKeys.( fsdocs-collection-name-link ) \n( fsdocs-collection-name-link ) \nParamKeys.( fsdocs-repository-branch ) \n( fsdocs-repository-branch ) \nParamKeys.( fsdocs-repository-type ) \n( fsdocs-repository-type ) \nParamKeys.( fsdocs-package-license-expression ) \n( fsdocs-package-license-expression ) \nParamKeys.( fsdocs-package-project-url ) \n( fsdocs-package-project-url ) \nParamKeys.( fsdocs-release-notes-link ) \n( fsdocs-release-notes-link ) \nParamKeys.( fsdocs-package-tags ) \n( fsdocs-package-tags ) \nParamKeys.( fsdocs-package-version ) \n( fsdocs-package-version ) \nParamKeys.( fsdocs-package-icon-url ) \n( fsdocs-package-icon-url )"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#root","title":"ParamKeys.root","content":"ParamKeys.root \nroot \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-authors )","title":"ParamKeys.( fsdocs-authors )","content":"ParamKeys.( fsdocs-authors ) \n( fsdocs-authors ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-repository-link )","title":"ParamKeys.( fsdocs-repository-link )","content":"ParamKeys.( fsdocs-repository-link ) \n( fsdocs-repository-link ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-list-of-namespaces )","title":"ParamKeys.( fsdocs-list-of-namespaces )","content":"ParamKeys.( fsdocs-list-of-namespaces ) \n( fsdocs-list-of-namespaces ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-list-of-documents )","title":"ParamKeys.( fsdocs-list-of-documents )","content":"ParamKeys.( fsdocs-list-of-documents ) \n( fsdocs-list-of-documents ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-collection-name )","title":"ParamKeys.( fsdocs-collection-name )","content":"ParamKeys.( fsdocs-collection-name ) \n( fsdocs-collection-name ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-content )","title":"ParamKeys.( fsdocs-content )","content":"ParamKeys.( fsdocs-content ) \n( fsdocs-content ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-tooltips )","title":"ParamKeys.( fsdocs-tooltips )","content":"ParamKeys.( fsdocs-tooltips ) \n( fsdocs-tooltips ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-page-title )","title":"ParamKeys.( fsdocs-page-title )","content":"ParamKeys.( fsdocs-page-title ) \n( fsdocs-page-title ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-page-source )","title":"ParamKeys.( fsdocs-page-source )","content":"ParamKeys.( fsdocs-page-source ) \n( fsdocs-page-source ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-repository-commit )","title":"ParamKeys.( fsdocs-repository-commit )","content":"ParamKeys.( fsdocs-repository-commit ) \n( fsdocs-repository-commit ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-copyright )","title":"ParamKeys.( fsdocs-copyright )","content":"ParamKeys.( fsdocs-copyright ) \n( fsdocs-copyright ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-license-link )","title":"ParamKeys.( fsdocs-license-link )","content":"ParamKeys.( fsdocs-license-link ) \n( fsdocs-license-link ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-logo-link )","title":"ParamKeys.( fsdocs-logo-link )","content":"ParamKeys.( fsdocs-logo-link ) \n( fsdocs-logo-link ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-logo-src )","title":"ParamKeys.( fsdocs-logo-src )","content":"ParamKeys.( fsdocs-logo-src ) \n( fsdocs-logo-src ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-navbar-position )","title":"ParamKeys.( fsdocs-navbar-position )","content":"ParamKeys.( fsdocs-navbar-position ) \n( fsdocs-navbar-position ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-collection-name-link )","title":"ParamKeys.( fsdocs-collection-name-link )","content":"ParamKeys.( fsdocs-collection-name-link ) \n( fsdocs-collection-name-link ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-repository-branch )","title":"ParamKeys.( fsdocs-repository-branch )","content":"ParamKeys.( fsdocs-repository-branch ) \n( fsdocs-repository-branch ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-repository-type )","title":"ParamKeys.( fsdocs-repository-type )","content":"ParamKeys.( fsdocs-repository-type ) \n( fsdocs-repository-type ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-package-license-expression )","title":"ParamKeys.( fsdocs-package-license-expression )","content":"ParamKeys.( fsdocs-package-license-expression ) \n( fsdocs-package-license-expression ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-package-project-url )","title":"ParamKeys.( fsdocs-package-project-url )","content":"ParamKeys.( fsdocs-package-project-url ) \n( fsdocs-package-project-url ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-release-notes-link )","title":"ParamKeys.( fsdocs-release-notes-link )","content":"ParamKeys.( fsdocs-release-notes-link ) \n( fsdocs-release-notes-link ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-package-tags )","title":"ParamKeys.( fsdocs-package-tags )","content":"ParamKeys.( fsdocs-package-tags ) \n( fsdocs-package-tags ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-package-version )","title":"ParamKeys.( fsdocs-package-version )","content":"ParamKeys.( fsdocs-package-version ) \n( fsdocs-package-version ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#( fsdocs-package-icon-url )","title":"ParamKeys.( fsdocs-package-icon-url )","content":"ParamKeys.( fsdocs-package-icon-url ) \n( fsdocs-package-icon-url ) \n<p class='summary'>\n A parameter key known to FSharp.Formatting\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html","title":"ApiDocAttribute","content":"ApiDocAttribute \n<p class='summary'>\n Represents a custom attribute attached to source code\n</p> \nApiDocAttribute.( .ctor ) \n( .ctor ) \nApiDocAttribute.Format \nFormat \nApiDocAttribute.FormatFullName \nFormatFullName \nApiDocAttribute.FormatFullNameLongForm \nFormatFullNameLongForm \nApiDocAttribute.FormatLongForm \nFormatLongForm \nApiDocAttribute.ObsoleteMessage \nObsoleteMessage \nApiDocAttribute.NamedConstructorArguments \nNamedConstructorArguments \nApiDocAttribute.Name \nName \nApiDocAttribute.IsRequireQualifiedAccessAttribute \nIsRequireQualifiedAccessAttribute \nApiDocAttribute.IsObsoleteAttribute \nIsObsoleteAttribute \nApiDocAttribute.IsCustomOperationAttribute \nIsCustomOperationAttribute \nApiDocAttribute.FullName \nFullName \nApiDocAttribute.CustomOperationName \nCustomOperationName \nApiDocAttribute.ConstructorArguments \nConstructorArguments"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#( .ctor )","title":"ApiDocAttribute.( .ctor )","content":"ApiDocAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#Format","title":"ApiDocAttribute.Format","content":"ApiDocAttribute.Format \nFormat \n<p class='summary'>\n Formats the attribute using the Name. Removes the \"Attribute\"-suffix. E.g Obsolete\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#FormatFullName","title":"ApiDocAttribute.FormatFullName","content":"ApiDocAttribute.FormatFullName \nFormatFullName \n<p class='summary'>\n Formats the attribute using the FullName. Removes the \"Attribute\"-suffix. E.g System.Obsolete\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#FormatFullNameLongForm","title":"ApiDocAttribute.FormatFullNameLongForm","content":"ApiDocAttribute.FormatFullNameLongForm \nFormatFullNameLongForm \n<p class='summary'>\n Formats the attribute using the FullName. Keeps the \"Attribute\"-suffix. E.g System.ObsoleteAttribute\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#FormatLongForm","title":"ApiDocAttribute.FormatLongForm","content":"ApiDocAttribute.FormatLongForm \nFormatLongForm \n<p class='summary'>\n Formats the attribute using the Name. Keeps the \"Attribute\"-suffix. E.g ObsoleteAttribute\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#ObsoleteMessage","title":"ApiDocAttribute.ObsoleteMessage","content":"ApiDocAttribute.ObsoleteMessage \nObsoleteMessage \n<p class='summary'>\n Returns the obsolete message, when this attribute is the System.ObsoleteAttribute. When its not or no message was specified, an empty string is returned\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#NamedConstructorArguments","title":"ApiDocAttribute.NamedConstructorArguments","content":"ApiDocAttribute.NamedConstructorArguments \nNamedConstructorArguments \n<p class='summary'>\n The named arguments for the attribute\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#Name","title":"ApiDocAttribute.Name","content":"ApiDocAttribute.Name \nName \n<p class='summary'>\n The name of the attribute\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#IsRequireQualifiedAccessAttribute","title":"ApiDocAttribute.IsRequireQualifiedAccessAttribute","content":"ApiDocAttribute.IsRequireQualifiedAccessAttribute \nIsRequireQualifiedAccessAttribute \n<p class='summary'>\n Gets a value indicating whether this attribute is RequireQualifiedAccessAttribute\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#IsObsoleteAttribute","title":"ApiDocAttribute.IsObsoleteAttribute","content":"ApiDocAttribute.IsObsoleteAttribute \nIsObsoleteAttribute \n<p class='summary'>\n Gets a value indicating whether this attribute is System.ObsoleteAttribute\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#IsCustomOperationAttribute","title":"ApiDocAttribute.IsCustomOperationAttribute","content":"ApiDocAttribute.IsCustomOperationAttribute \nIsCustomOperationAttribute \n<p class='summary'>\n Gets a value indicating whether this attribute the CustomOperationAttribute\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#FullName","title":"ApiDocAttribute.FullName","content":"ApiDocAttribute.FullName \nFullName \n<p class='summary'>\n The qualified name of the attribute\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#CustomOperationName","title":"ApiDocAttribute.CustomOperationName","content":"ApiDocAttribute.CustomOperationName \nCustomOperationName \n<p class='summary'>\n Returns the custom operation name, when this attribute is the CustomOperationAttribute. When its not an empty string is returned\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#ConstructorArguments","title":"ApiDocAttribute.ConstructorArguments","content":"ApiDocAttribute.ConstructorArguments \nConstructorArguments \n<p class='summary'>\n The arguments to the constructor for the attribute\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccollection.html","title":"ApiDocCollection","content":"ApiDocCollection \n<p class='summary'>\n Represents a group of assemblies integrated with its associated documentation\n</p> \nApiDocCollection.( .ctor ) \n( .ctor ) \nApiDocCollection.Namespaces \nNamespaces \nApiDocCollection.CollectionName \nCollectionName \nApiDocCollection.Assemblies \nAssemblies"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccollection.html#( .ctor )","title":"ApiDocCollection.( .ctor )","content":"ApiDocCollection.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccollection.html#Namespaces","title":"ApiDocCollection.Namespaces","content":"ApiDocCollection.Namespaces \nNamespaces \n<p class='summary'>\n All namespaces in the collection\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccollection.html#CollectionName","title":"ApiDocCollection.CollectionName","content":"ApiDocCollection.CollectionName \nCollectionName \n<p class='summary'>\n Name of the collection\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccollection.html#Assemblies","title":"ApiDocCollection.Assemblies","content":"ApiDocCollection.Assemblies \nAssemblies \n<p class='summary'>\n All assemblies in the collection\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html","title":"ApiDocComment","content":"ApiDocComment \n<p class='summary'>\n Represents a documentation comment attached to source code\n</p> \nApiDocComment.( .ctor ) \n( .ctor ) \nApiDocComment.SummaryHtml \nSummaryHtml \nApiDocComment.Sections \nSections \nApiDocComment.RawData \nRawData \nApiDocComment.DescriptionHtml \nDescriptionHtml"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#( .ctor )","title":"ApiDocComment.( .ctor )","content":"ApiDocComment.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#SummaryHtml","title":"ApiDocComment.SummaryHtml","content":"ApiDocComment.SummaryHtml \nSummaryHtml \n<p class='summary'>\n The summary for the comment\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#Sections","title":"ApiDocComment.Sections","content":"ApiDocComment.Sections \nSections \n<p class='summary'>\n The parsed sections of the comment\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#RawData","title":"ApiDocComment.RawData","content":"ApiDocComment.RawData \nRawData \n<p class='summary'>\n The raw data of the comment\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#DescriptionHtml","title":"ApiDocComment.DescriptionHtml","content":"ApiDocComment.DescriptionHtml \nDescriptionHtml \n<p class='summary'>\n The full html for the full description\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html","title":"ApiDocEntity","content":"ApiDocEntity \n<p class='summary'>\n Represents a type definition integrated with its associated documentation\n</p> \nApiDocEntity.( .ctor ) \n( .ctor ) \nApiDocEntity.OutputFile \nOutputFile \nApiDocEntity.Url \nUrl \nApiDocEntity.ValuesAndFuncs \nValuesAndFuncs \nApiDocEntity.UrlBaseName \nUrlBaseName \nApiDocEntity.UnionCases \nUnionCases \nApiDocEntity.TypeExtensions \nTypeExtensions \nApiDocEntity.Symbol \nSymbol \nApiDocEntity.StaticParameters \nStaticParameters \nApiDocEntity.StaticMembers \nStaticMembers \nApiDocEntity.RequiresQualifiedAccess \nRequiresQualifiedAccess \nApiDocEntity.RecordFields \nRecordFields \nApiDocEntity.Parameters \nParameters \nApiDocEntity.ObsoleteMessage \nObsoleteMessage \nApiDocEntity.NestedEntities \nNestedEntities \nApiDocEntity.Name \nName \nApiDocEntity.IsTypeDefinition \nIsTypeDefinition \nApiDocEntity.IsObsolete \nIsObsolete \nApiDocEntity.InstanceMembers \nInstanceMembers \nApiDocEntity.DelegateSignature \nDelegateSignature \nApiDocEntity.Constructors \nConstructors \nApiDocEntity.Comment \nComment \nApiDocEntity.Category \nCategory \nApiDocEntity.BaseType \nBaseType \nApiDocEntity.Attributes \nAttributes \nApiDocEntity.Assembly \nAssembly \nApiDocEntity.AllMembers \nAllMembers \nApiDocEntity.AllInterfaces \nAllInterfaces \nApiDocEntity.ActivePatterns \nActivePatterns \nApiDocEntity.AbbreviatedType \nAbbreviatedType"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#( .ctor )","title":"ApiDocEntity.( .ctor )","content":"ApiDocEntity.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#OutputFile","title":"ApiDocEntity.OutputFile","content":"ApiDocEntity.OutputFile \nOutputFile \n<p class='summary'>\n The name of the file generated for this entity\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Url","title":"ApiDocEntity.Url","content":"ApiDocEntity.Url \nUrl \n<p class='summary'>\n The URL of the best link for the entity relative to \"reference\" directory (without the http://site.io/reference)\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#ValuesAndFuncs","title":"ApiDocEntity.ValuesAndFuncs","content":"ApiDocEntity.ValuesAndFuncs \nValuesAndFuncs \n<p class='summary'>\n Values and functions of the module\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#UrlBaseName","title":"ApiDocEntity.UrlBaseName","content":"ApiDocEntity.UrlBaseName \nUrlBaseName \n<p class='summary'>\n The URL base name of the primary documentation for the entity  (without the http://site.io/reference)\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#UnionCases","title":"ApiDocEntity.UnionCases","content":"ApiDocEntity.UnionCases \nUnionCases \n<p class='summary'>\n The cases of a union type\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#TypeExtensions","title":"ApiDocEntity.TypeExtensions","content":"ApiDocEntity.TypeExtensions \nTypeExtensions \n<p class='summary'>\n Type extensions of the module\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Symbol","title":"ApiDocEntity.Symbol","content":"ApiDocEntity.Symbol \nSymbol \n<p class='summary'>\n The F# compiler symbol for the type definition\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#StaticParameters","title":"ApiDocEntity.StaticParameters","content":"ApiDocEntity.StaticParameters \nStaticParameters \n<p class='summary'>\n Static parameters\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#StaticMembers","title":"ApiDocEntity.StaticMembers","content":"ApiDocEntity.StaticMembers \nStaticMembers \n<p class='summary'>\n The static members of the type\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#RequiresQualifiedAccess","title":"ApiDocEntity.RequiresQualifiedAccess","content":"ApiDocEntity.RequiresQualifiedAccess \nRequiresQualifiedAccess \n<p class='summary'>\n Does the module have the RequiresQualifiedAccess attribute\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#RecordFields","title":"ApiDocEntity.RecordFields","content":"ApiDocEntity.RecordFields \nRecordFields \n<p class='summary'>\n The fields of a record type\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Parameters","title":"ApiDocEntity.Parameters","content":"ApiDocEntity.Parameters \nParameters \n<p class='summary'>\n The substitution parameters active for generating thist content\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#ObsoleteMessage","title":"ApiDocEntity.ObsoleteMessage","content":"ApiDocEntity.ObsoleteMessage \nObsoleteMessage \n<p class='summary'>\n Returns the obsolete message, when this member is obsolete. When its not or no message was specified, an empty string is returned\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#NestedEntities","title":"ApiDocEntity.NestedEntities","content":"ApiDocEntity.NestedEntities \nNestedEntities \n<p class='summary'>\n All nested modules and types\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Name","title":"ApiDocEntity.Name","content":"ApiDocEntity.Name \nName \n<p class='summary'>\n The name of the entity\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#IsTypeDefinition","title":"ApiDocEntity.IsTypeDefinition","content":"ApiDocEntity.IsTypeDefinition \nIsTypeDefinition \n<p class='summary'>\n Indicates if the entity is a type definition\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#IsObsolete","title":"ApiDocEntity.IsObsolete","content":"ApiDocEntity.IsObsolete \nIsObsolete \n<p class='summary'>\n Gets a value indicating whether this member is obsolete\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#InstanceMembers","title":"ApiDocEntity.InstanceMembers","content":"ApiDocEntity.InstanceMembers \nInstanceMembers \n<p class='summary'>\n The instance members of the type\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#DelegateSignature","title":"ApiDocEntity.DelegateSignature","content":"ApiDocEntity.DelegateSignature \nDelegateSignature \n<p class='summary'>\n If this is a delegate, then e formatted signature\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Constructors","title":"ApiDocEntity.Constructors","content":"ApiDocEntity.Constructors \nConstructors \n<p class='summary'>\n The constuctorsof the type\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Comment","title":"ApiDocEntity.Comment","content":"ApiDocEntity.Comment \nComment \n<p class='summary'>\n The attached comment\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Category","title":"ApiDocEntity.Category","content":"ApiDocEntity.Category \nCategory \n<p class='summary'>\n The category of the type\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#BaseType","title":"ApiDocEntity.BaseType","content":"ApiDocEntity.BaseType \nBaseType \n<p class='summary'>\n The base type of the type, formatted\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Attributes","title":"ApiDocEntity.Attributes","content":"ApiDocEntity.Attributes \nAttributes \n<p class='summary'>\n The declared attributes of the type\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Assembly","title":"ApiDocEntity.Assembly","content":"ApiDocEntity.Assembly \nAssembly \n<p class='summary'>\n The name of the type's assembly\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#AllMembers","title":"ApiDocEntity.AllMembers","content":"ApiDocEntity.AllMembers \nAllMembers \n<p class='summary'>\n All members of the type\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#AllInterfaces","title":"ApiDocEntity.AllInterfaces","content":"ApiDocEntity.AllInterfaces \nAllInterfaces \n<p class='summary'>\n All interfaces of the type, formatted\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#ActivePatterns","title":"ApiDocEntity.ActivePatterns","content":"ApiDocEntity.ActivePatterns \nActivePatterns \n<p class='summary'>\n Active patterns of the module\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#AbbreviatedType","title":"ApiDocEntity.AbbreviatedType","content":"ApiDocEntity.AbbreviatedType \nAbbreviatedType \n<p class='summary'>\n If this is a type abbreviation, then the abbreviated type\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentityinfo.html","title":"ApiDocEntityInfo","content":"ApiDocEntityInfo \n<p class='summary'>\n High-level information about a module definition\n</p> \nApiDocEntityInfo.( .ctor ) \n( .ctor ) \nApiDocEntityInfo.ParentModule \nParentModule \nApiDocEntityInfo.Namespace \nNamespace \nApiDocEntityInfo.Entity \nEntity \nApiDocEntityInfo.Collection \nCollection"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentityinfo.html#( .ctor )","title":"ApiDocEntityInfo.( .ctor )","content":"ApiDocEntityInfo.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentityinfo.html#ParentModule","title":"ApiDocEntityInfo.ParentModule","content":"ApiDocEntityInfo.ParentModule \nParentModule \n<p class='summary'>\n The parent module, if any.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentityinfo.html#Namespace","title":"ApiDocEntityInfo.Namespace","content":"ApiDocEntityInfo.Namespace \nNamespace \n<p class='summary'>\n The namespace the entity belongs to\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentityinfo.html#Entity","title":"ApiDocEntityInfo.Entity","content":"ApiDocEntityInfo.Entity \nEntity \n<p class='summary'>\n The actual entity\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentityinfo.html#Collection","title":"ApiDocEntityInfo.Collection","content":"ApiDocEntityInfo.Collection \nCollection \n<p class='summary'>\n The collection of assemblies the entity belongs to\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidochtml.html","title":"ApiDocHtml","content":"ApiDocHtml \n<p class='summary'>\n Represents some HTML formatted by model generation\n</p> \nApiDocHtml.( .ctor ) \n( .ctor ) \nApiDocHtml.HtmlText \nHtmlText"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidochtml.html#( .ctor )","title":"ApiDocHtml.( .ctor )","content":"ApiDocHtml.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidochtml.html#HtmlText","title":"ApiDocHtml.HtmlText","content":"ApiDocHtml.HtmlText \nHtmlText \n<p class='summary'>\n Get the HTML text of the HTML section\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html","title":"ApiDocInput","content":"ApiDocInput \n<p class='summary'>\n Represents an input assembly for API doc generation\n</p> \nApiDocInput.FromFile \nFromFile \nApiDocInput.Path \nPath \nApiDocInput.XmlFile \nXmlFile \nApiDocInput.SourceFolder \nSourceFolder \nApiDocInput.SourceRepo \nSourceRepo \nApiDocInput.Parameters \nParameters \nApiDocInput.MarkdownComments \nMarkdownComments \nApiDocInput.PublicOnly \nPublicOnly"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#FromFile","title":"ApiDocInput.FromFile","content":"ApiDocInput.FromFile \nFromFile \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#Path","title":"ApiDocInput.Path","content":"ApiDocInput.Path \nPath \n<p class='summary'>\n The path to the assembly\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#XmlFile","title":"ApiDocInput.XmlFile","content":"ApiDocInput.XmlFile \nXmlFile \n<p class='summary'>\n Override the default XML file (normally assumed to live alongside)\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#SourceFolder","title":"ApiDocInput.SourceFolder","content":"ApiDocInput.SourceFolder \nSourceFolder \n<p class='summary'>\n The compile-time source folder\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#SourceRepo","title":"ApiDocInput.SourceRepo","content":"ApiDocInput.SourceRepo \nSourceRepo \n<p class='summary'>\n The URL the the source repo where the source code lives\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#Parameters","title":"ApiDocInput.Parameters","content":"ApiDocInput.Parameters \nParameters \n<p class='summary'>\n The substitution parameters active for this input. If specified these\n are used instead of the overall parameters.  This allows different parameters (e.g.\n different authors) for each assembly in a collection.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#MarkdownComments","title":"ApiDocInput.MarkdownComments","content":"ApiDocInput.MarkdownComments \nMarkdownComments \n<p class='summary'>\n Whether the input uses markdown comments\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#PublicOnly","title":"ApiDocInput.PublicOnly","content":"ApiDocInput.PublicOnly \nPublicOnly \n<p class='summary'>\n Whether to generate only public things\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html","title":"ApiDocMember","content":"ApiDocMember \n<p class='summary'>\n Represents an method, property, constructor, function or value, record field, union case or static parameter\n integrated with its associated documentation. Includes extension members.\n</p> \nApiDocMember.( .ctor ) \n( .ctor ) \nApiDocMember.Url \nUrl \nApiDocMember.UsageTooltip \nUsageTooltip \nApiDocMember.UrlBaseName \nUrlBaseName \nApiDocMember.TypeArguments \nTypeArguments \nApiDocMember.Symbol \nSymbol \nApiDocMember.SourceLocation \nSourceLocation \nApiDocMember.ReturnTooltip \nReturnTooltip \nApiDocMember.ParameterTooltips \nParameterTooltips \nApiDocMember.ObsoleteMessage \nObsoleteMessage \nApiDocMember.Name \nName \nApiDocMember.Modifiers \nModifiers \nApiDocMember.Kind \nKind \nApiDocMember.IsRequireQualifiedAccessAttribute \nIsRequireQualifiedAccessAttribute \nApiDocMember.IsObsolete \nIsObsolete \nApiDocMember.IsCustomOperation \nIsCustomOperation \nApiDocMember.FormatTypeArguments \nFormatTypeArguments \nApiDocMember.FormatSourceLocation \nFormatSourceLocation \nApiDocMember.FormatModifiers \nFormatModifiers \nApiDocMember.FormatCompiledName \nFormatCompiledName \nApiDocMember.ExtendedType \nExtendedType \nApiDocMember.Details \nDetails \nApiDocMember.CustomOperationName \nCustomOperationName \nApiDocMember.CompiledName \nCompiledName \nApiDocMember.Comment \nComment \nApiDocMember.Category \nCategory \nApiDocMember.Attributes \nAttributes"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#( .ctor )","title":"ApiDocMember.( .ctor )","content":"ApiDocMember.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Url","title":"ApiDocMember.Url","content":"ApiDocMember.Url \nUrl \n<p class='summary'>\n The URL of the best link documentation for the item relative to \"reference\" directory (without the http://site.io/reference)\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#UsageTooltip","title":"ApiDocMember.UsageTooltip","content":"ApiDocMember.UsageTooltip \nUsageTooltip \n<p class='summary'>\n The usage section in a typical tooltip\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#UrlBaseName","title":"ApiDocMember.UrlBaseName","content":"ApiDocMember.UrlBaseName \nUrlBaseName \n<p class='summary'>\n The URL base name of the best link documentation for the item (without the http://site.io/reference)\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#TypeArguments","title":"ApiDocMember.TypeArguments","content":"ApiDocMember.TypeArguments \nTypeArguments \n<p class='summary'>\n The member's type arguments\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Symbol","title":"ApiDocMember.Symbol","content":"ApiDocMember.Symbol \nSymbol \n<p class='summary'>\n The symbol this member is related to\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#SourceLocation","title":"ApiDocMember.SourceLocation","content":"ApiDocMember.SourceLocation \nSourceLocation \n<p class='summary'>\n The member's source location, if any\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#ReturnTooltip","title":"ApiDocMember.ReturnTooltip","content":"ApiDocMember.ReturnTooltip \nReturnTooltip \n<p class='summary'>\n The return section in a typical tooltip\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#ParameterTooltips","title":"ApiDocMember.ParameterTooltips","content":"ApiDocMember.ParameterTooltips \nParameterTooltips \n<p class='summary'>\n The member's parameter sections in a typical tooltip\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#ObsoleteMessage","title":"ApiDocMember.ObsoleteMessage","content":"ApiDocMember.ObsoleteMessage \nObsoleteMessage \n<p class='summary'>\n Returns the obsolete message, when this member is obsolete. When its not or no message was specified, an empty string is returned\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Name","title":"ApiDocMember.Name","content":"ApiDocMember.Name \nName \n<p class='summary'>\n Name of the member\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Modifiers","title":"ApiDocMember.Modifiers","content":"ApiDocMember.Modifiers \nModifiers \n<p class='summary'>\n The member's modifiers\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Kind","title":"ApiDocMember.Kind","content":"ApiDocMember.Kind \nKind \n<p class='summary'>\n The kind of the member\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#IsRequireQualifiedAccessAttribute","title":"ApiDocMember.IsRequireQualifiedAccessAttribute","content":"ApiDocMember.IsRequireQualifiedAccessAttribute \nIsRequireQualifiedAccessAttribute \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#IsObsolete","title":"ApiDocMember.IsObsolete","content":"ApiDocMember.IsObsolete \nIsObsolete \n<p class='summary'>\n Gets a value indicating whether this member is obsolete\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#IsCustomOperation","title":"ApiDocMember.IsCustomOperation","content":"ApiDocMember.IsCustomOperation \nIsCustomOperation \n<p class='summary'>\n Gets a value indicating whether this member has CustomOperationAttribute\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#FormatTypeArguments","title":"ApiDocMember.FormatTypeArguments","content":"ApiDocMember.FormatTypeArguments \nFormatTypeArguments \n<p class='summary'>\n Formats type arguments\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#FormatSourceLocation","title":"ApiDocMember.FormatSourceLocation","content":"ApiDocMember.FormatSourceLocation \nFormatSourceLocation \n<p class='summary'>\n Formats source location\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#FormatModifiers","title":"ApiDocMember.FormatModifiers","content":"ApiDocMember.FormatModifiers \nFormatModifiers \n<p class='summary'>\n Formats modifiers\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#FormatCompiledName","title":"ApiDocMember.FormatCompiledName","content":"ApiDocMember.FormatCompiledName \nFormatCompiledName \n<p class='summary'>\n Formats the compiled name\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#ExtendedType","title":"ApiDocMember.ExtendedType","content":"ApiDocMember.ExtendedType \nExtendedType \n<p class='summary'>\n The type extended by an extension member, if any\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Details","title":"ApiDocMember.Details","content":"ApiDocMember.Details \nDetails \n<p class='summary'>\n The member's compiled name, if any\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#CustomOperationName","title":"ApiDocMember.CustomOperationName","content":"ApiDocMember.CustomOperationName \nCustomOperationName \n<p class='summary'>\n Returns the custom operation name, when this attribute is the CustomOperationAttribute. When its not an empty string is returned\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#CompiledName","title":"ApiDocMember.CompiledName","content":"ApiDocMember.CompiledName \nCompiledName \n<p class='summary'>\n The member's compiled name, if any\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Comment","title":"ApiDocMember.Comment","content":"ApiDocMember.Comment \nComment \n<p class='summary'>\n The attached comment\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Category","title":"ApiDocMember.Category","content":"ApiDocMember.Category \nCategory \n<p class='summary'>\n The category\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Attributes","title":"ApiDocMember.Attributes","content":"ApiDocMember.Attributes \nAttributes \n<p class='summary'>\n The declared attributes of the member\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html","title":"ApiDocMemberKind","content":"ApiDocMemberKind \n<p class='summary'>\n Represents the kind of member\n</p> \nApiDocMemberKind.ValueOrFunction \nValueOrFunction \nApiDocMemberKind.TypeExtension \nTypeExtension \nApiDocMemberKind.ActivePattern \nActivePattern \nApiDocMemberKind.Constructor \nConstructor \nApiDocMemberKind.InstanceMember \nInstanceMember \nApiDocMemberKind.StaticMember \nStaticMember \nApiDocMemberKind.UnionCase \nUnionCase \nApiDocMemberKind.RecordField \nRecordField \nApiDocMemberKind.StaticParameter \nStaticParameter"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#ValueOrFunction","title":"ApiDocMemberKind.ValueOrFunction","content":"ApiDocMemberKind.ValueOrFunction \nValueOrFunction \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#TypeExtension","title":"ApiDocMemberKind.TypeExtension","content":"ApiDocMemberKind.TypeExtension \nTypeExtension \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#ActivePattern","title":"ApiDocMemberKind.ActivePattern","content":"ApiDocMemberKind.ActivePattern \nActivePattern \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#Constructor","title":"ApiDocMemberKind.Constructor","content":"ApiDocMemberKind.Constructor \nConstructor \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#InstanceMember","title":"ApiDocMemberKind.InstanceMember","content":"ApiDocMemberKind.InstanceMember \nInstanceMember \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#StaticMember","title":"ApiDocMemberKind.StaticMember","content":"ApiDocMemberKind.StaticMember \nStaticMember \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#UnionCase","title":"ApiDocMemberKind.UnionCase","content":"ApiDocMemberKind.UnionCase \nUnionCase \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#RecordField","title":"ApiDocMemberKind.RecordField","content":"ApiDocMemberKind.RecordField \nRecordField \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#StaticParameter","title":"ApiDocMemberKind.StaticParameter","content":"ApiDocMemberKind.StaticParameter \nStaticParameter \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html","title":"ApiDocModel","content":"ApiDocModel \n<p class='summary'>\n Represents a set of assemblies integrated with their associated documentation\n</p> \nApiDocModel.IndexFileUrl \nIndexFileUrl \nApiDocModel.IndexOutputFile \nIndexOutputFile \nApiDocModel.Parameters \nParameters \nApiDocModel.Collection \nCollection \nApiDocModel.EntityInfos \nEntityInfos \nApiDocModel.Root \nRoot \nApiDocModel.Qualify \nQualify"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#IndexFileUrl","title":"ApiDocModel.IndexFileUrl","content":"ApiDocModel.IndexFileUrl \nIndexFileUrl \n<p class='summary'>\n URL of the 'index.html' for the reference documentation for the model\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#IndexOutputFile","title":"ApiDocModel.IndexOutputFile","content":"ApiDocModel.IndexOutputFile \nIndexOutputFile \n<p class='summary'>\n URL of the 'index.html' for the reference documentation for the model\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#Parameters","title":"ApiDocModel.Parameters","content":"ApiDocModel.Parameters \nParameters \n<p class='summary'>\n The parameters.  Different parameters can also be used for each specific input\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#Collection","title":"ApiDocModel.Collection","content":"ApiDocModel.Collection \nCollection \n<p class='summary'>\n The full list of all entities\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#EntityInfos","title":"ApiDocModel.EntityInfos","content":"ApiDocModel.EntityInfos \nEntityInfos \n<p class='summary'>\n The full list of all entities\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#Root","title":"ApiDocModel.Root","content":"ApiDocModel.Root \nRoot \n<p class='summary'>\n The root URL for the entire generation, normally '/'\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#Qualify","title":"ApiDocModel.Qualify","content":"ApiDocModel.Qualify \nQualify \n<p class='summary'>\n Indicates if each collection is being qualified by its collection name, e.g. 'reference/FSharp.Core'\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html","title":"ApiDocNamespace","content":"ApiDocNamespace \n<p class='summary'>\n Represents a namespace integrated with its associated documentation\n</p> \nApiDocNamespace.( .ctor ) \n( .ctor ) \nApiDocNamespace.OutputFile \nOutputFile \nApiDocNamespace.Url \nUrl \nApiDocNamespace.UrlHash \nUrlHash \nApiDocNamespace.UrlBaseName \nUrlBaseName \nApiDocNamespace.Parameters \nParameters \nApiDocNamespace.Name \nName \nApiDocNamespace.Entities \nEntities"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#( .ctor )","title":"ApiDocNamespace.( .ctor )","content":"ApiDocNamespace.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#OutputFile","title":"ApiDocNamespace.OutputFile","content":"ApiDocNamespace.OutputFile \nOutputFile \n<p class='summary'>\n The name of the file generated for this entity\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#Url","title":"ApiDocNamespace.Url","content":"ApiDocNamespace.Url \nUrl \n<p class='summary'>\n The URL of the best link documentation for the item (without the http://site.io/reference)\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#UrlHash","title":"ApiDocNamespace.UrlHash","content":"ApiDocNamespace.UrlHash \nUrlHash \n<p class='summary'>\n The hash label for the URL with the overall namespaces file\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#UrlBaseName","title":"ApiDocNamespace.UrlBaseName","content":"ApiDocNamespace.UrlBaseName \nUrlBaseName \n<p class='summary'>\n The base name for the generated file\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#Parameters","title":"ApiDocNamespace.Parameters","content":"ApiDocNamespace.Parameters \nParameters \n<p class='summary'>\n The substitution parameters active for generating thist content\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#Name","title":"ApiDocNamespace.Name","content":"ApiDocNamespace.Name \nName \n<p class='summary'>\n The name of the namespace\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#Entities","title":"ApiDocNamespace.Entities","content":"ApiDocNamespace.Entities \nEntities \n<p class='summary'>\n All modules in the namespace\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoctype.html","title":"ApiDocType","content":"ApiDocType \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocs.html","title":"ApiDocs","content":"ApiDocs \n<p class='summary'>\n This type exposes the functionality for producing documentation model from `dll` files with associated `xml` files\n generated by the F# or C# compiler. To generate documentation model, use one of the overloades of the `Generate` method.\n</p> \nApiDocs.GenerateHtml \nGenerateHtml \nApiDocs.GenerateHtmlPhased \nGenerateHtmlPhased \nApiDocs.GenerateModel \nGenerateModel \nApiDocs.SearchIndexEntriesForModel \nSearchIndexEntriesForModel"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocs.html#GenerateHtml","title":"ApiDocs.GenerateHtml","content":"ApiDocs.GenerateHtml \nGenerateHtml \n<p class='summary'>\n Generates default HTML pages for the assemblies specified by the `inputs` parameter\n\n  - `inputs` - the components to generate documentation for\n  - `output` - the output directory\n  - `collectionName` - the overall collection name\n  - `template` - the template to use for each documentation page\n  - `root` - The root url of the generated documentation within the website\n  - `qualify` - qualify the output set by collection name, e.g. `reference/FSharp.Core/...`\n  - `libDirs` - Use this to specify additional paths where referenced DLL files can be found when formatting code snippets inside Markdown comments\n  - `otherFlags` - Additional flags that are passed to the F# compiler to specify references explicitly etc.\n  - `urlRangeHighlight` - A function that can be used to override the default way of generating GitHub links\n\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocs.html#GenerateHtmlPhased","title":"ApiDocs.GenerateHtmlPhased","content":"ApiDocs.GenerateHtmlPhased \nGenerateHtmlPhased \n<p class='summary'>\n Like GenerateHtml but allows for intermediate phase to insert other global parameters\n and combine search index\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocs.html#GenerateModel","title":"ApiDocs.GenerateModel","content":"ApiDocs.GenerateModel \nGenerateModel \n<p class='summary'>\n Generates a documentation model for the assemblies specified by the `inputs` parameter\n\n  - `inputs` - the components to generate documentation for\n  - `parameters` - provides parameters for substitution in the templates\n  - `qualify` - qualify the output set by collection name, e.g. `reference/FSharp.Core/...`\n  - `sourceFolder` and `sourceRepo` - When specified, the documentation generator automatically\n    generates links to GitHub pages for each of the entity.\n  - `libDirs` - Use this to specify additional paths where referenced DLL files can be found when formatting code snippets inside Markdown comments\n  - `otherFlags` - Additional flags that are passed to the F# compiler (you can use this if you want to\n    specify references explicitly etc.)\n  - `urlRangeHighlight` - A function that can be used to override the default way of generating GitHub links\n\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocs.html#SearchIndexEntriesForModel","title":"ApiDocs.SearchIndexEntriesForModel","content":"ApiDocs.SearchIndexEntriesForModel \nSearchIndexEntriesForModel \n<p class='summary'>\n Generates the search index from the given documentation model\n\n  - `model` - the model for documentation\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocssearchindexentry.html","title":"ApiDocsSearchIndexEntry","content":"ApiDocsSearchIndexEntry \n<p class='summary'>\n Represents an entry suitable for constructing a Lunr index\n</p> \nApiDocsSearchIndexEntry.uri \nuri \nApiDocsSearchIndexEntry.title \ntitle \nApiDocsSearchIndexEntry.content \ncontent"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocssearchindexentry.html#uri","title":"ApiDocsSearchIndexEntry.uri","content":"ApiDocsSearchIndexEntry.uri \nuri \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocssearchindexentry.html#title","title":"ApiDocsSearchIndexEntry.title","content":"ApiDocsSearchIndexEntry.title \ntitle \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocssearchindexentry.html#content","title":"ApiDocsSearchIndexEntry.content","content":"ApiDocsSearchIndexEntry.content \ncontent \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-attribute.html","title":"Attribute","content":"Attribute \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-doccomment.html","title":"DocComment","content":"DocComment \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-member.html","title":"Member","content":"Member \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-memberkind.html","title":"MemberKind","content":"MemberKind \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-module.html","title":"Module","content":"Module \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-moduleinfo.html","title":"ModuleInfo","content":"ModuleInfo \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-type.html","title":"Type","content":"Type \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-typeinfo.html","title":"TypeInfo","content":"TypeInfo \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-clikeformat.html","title":"CLikeFormat","content":"CLikeFormat \n<p class='summary'>\n            Provides a base class for formatting languages similar to C.\n            </p> \nCLikeFormat..ctor \n.ctor \nCLikeFormat.CommentRegEx \nCommentRegEx \nCLikeFormat.StringRegEx \nStringRegEx"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-clikeformat.html#.ctor","title":"CLikeFormat..ctor","content":"CLikeFormat..ctor \n.ctor \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-clikeformat.html#CommentRegEx","title":"CLikeFormat.CommentRegEx","content":"CLikeFormat.CommentRegEx \nCommentRegEx \n<p class='summary'>\n            Regular expression string to match single line and multi-line \n            comments (// and /* */). \n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-clikeformat.html#StringRegEx","title":"CLikeFormat.StringRegEx","content":"CLikeFormat.StringRegEx \nStringRegEx \n<p class='summary'>\n            Regular expression string to match string and character literals. \n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-cplusplusformat.html","title":"CPlusPlusFormat","content":"CPlusPlusFormat \n<p class='summary'>\n            Generates color-coded HTML 4.01 from C++ source code.\n            </p> \nCPlusPlusFormat..ctor \n.ctor \nCPlusPlusFormat.Keywords \nKeywords \nCPlusPlusFormat.Preprocessors \nPreprocessors"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-cplusplusformat.html#.ctor","title":"CPlusPlusFormat..ctor","content":"CPlusPlusFormat..ctor \n.ctor \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-cplusplusformat.html#Keywords","title":"CPlusPlusFormat.Keywords","content":"CPlusPlusFormat.Keywords \nKeywords \n<p class='summary'>\n            The list of C++ keywords.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-cplusplusformat.html#Preprocessors","title":"CPlusPlusFormat.Preprocessors","content":"CPlusPlusFormat.Preprocessors \nPreprocessors \n<p class='summary'>\n            The list of C++ preprocessors.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-csharpformat.html","title":"CSharpFormat","content":"CSharpFormat \n<p class='summary'>\n            Generates color-coded HTML 4.01 from C# source code.\n            </p> \nCSharpFormat..ctor \n.ctor \nCSharpFormat.Keywords \nKeywords \nCSharpFormat.Preprocessors \nPreprocessors \nCSharpFormat.Operators \nOperators"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-csharpformat.html#.ctor","title":"CSharpFormat..ctor","content":"CSharpFormat..ctor \n.ctor \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-csharpformat.html#Keywords","title":"CSharpFormat.Keywords","content":"CSharpFormat.Keywords \nKeywords \n<p class='summary'>\n            The list of C# keywords.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-csharpformat.html#Preprocessors","title":"CSharpFormat.Preprocessors","content":"CSharpFormat.Preprocessors \nPreprocessors \n<p class='summary'>\n            The list of C# preprocessors.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-csharpformat.html#Operators","title":"CSharpFormat.Operators","content":"CSharpFormat.Operators \nOperators \n<p class='summary'>\n            TBD\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html","title":"CodeFormat","content":"CodeFormat \n<p class='summary'>\n            Provides a base class for formatting most programming languages.\n            </p> \nCodeFormat..ctor \n.ctor \nCodeFormat.Keywords \nKeywords \nCodeFormat.Operators \nOperators \nCodeFormat.Preprocessors \nPreprocessors \nCodeFormat.StringRegEx \nStringRegEx \nCodeFormat.CommentRegEx \nCommentRegEx \nCodeFormat.NumberRegEx \nNumberRegEx \nCodeFormat.CaseSensitive \nCaseSensitive"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#.ctor","title":"CodeFormat..ctor","content":"CodeFormat..ctor \n.ctor \n<p class='summary'></p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#Keywords","title":"CodeFormat.Keywords","content":"CodeFormat.Keywords \nKeywords \n<p class='summary'>\n            Must be overridden to provide a list of keywords defined in \n            each language.\n            </p><h4>Remarks</h4><p class='remarks'>\n            Keywords must be separated with spaces.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#Operators","title":"CodeFormat.Operators","content":"CodeFormat.Operators \nOperators \n<p class='summary'>\n            Must be overridden to provide a list of operators defined in \n            each language.\n            </p><h4>Remarks</h4><p class='remarks'>\n            Operators must be separated with spaces.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#Preprocessors","title":"CodeFormat.Preprocessors","content":"CodeFormat.Preprocessors \nPreprocessors \n<p class='summary'>\n            Can be overridden to provide a list of preprocessors defined in \n            each language.\n            </p><h4>Remarks</h4><p class='remarks'>\n            Preprocessors must be separated with spaces.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#StringRegEx","title":"CodeFormat.StringRegEx","content":"CodeFormat.StringRegEx \nStringRegEx \n<p class='summary'>\n            Must be overridden to provide a regular expression string\n            to match strings literals. \n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#CommentRegEx","title":"CodeFormat.CommentRegEx","content":"CodeFormat.CommentRegEx \nCommentRegEx \n<p class='summary'>\n            Must be overridden to provide a regular expression string\n            to match comments. \n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#NumberRegEx","title":"CodeFormat.NumberRegEx","content":"CodeFormat.NumberRegEx \nNumberRegEx \n<p class='summary'>\n            Can be overridden to provide a list of tokes to be recognized as numbers.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#CaseSensitive","title":"CodeFormat.CaseSensitive","content":"CodeFormat.CaseSensitive \nCaseSensitive \n<p class='summary'>\n            Determines if the language is case sensitive.\n            </p><h4>Remarks</h4><p class='remarks'>\n            A case-insensitive language formatter must override this \n            property to return false.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-fsharpformat.html","title":"FSharpFormat","content":"FSharpFormat \n<p class='summary'>\n            Generates color-coded HTML 4.01 from F# source code.\n            </p> \nFSharpFormat..ctor \n.ctor \nFSharpFormat.Operators \nOperators \nFSharpFormat.CommentRegEx \nCommentRegEx \nFSharpFormat.Keywords \nKeywords \nFSharpFormat.StringRegEx \nStringRegEx \nFSharpFormat.Preprocessors \nPreprocessors"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-fsharpformat.html#.ctor","title":"FSharpFormat..ctor","content":"FSharpFormat..ctor \n.ctor \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-fsharpformat.html#Operators","title":"FSharpFormat.Operators","content":"FSharpFormat.Operators \nOperators \n<p class='summary'>\n            TBD\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-fsharpformat.html#CommentRegEx","title":"FSharpFormat.CommentRegEx","content":"FSharpFormat.CommentRegEx \nCommentRegEx \n<p class='summary'>\n            Regular expression string to match single line and multi-line \n            comments (// and (* *)). \n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-fsharpformat.html#Keywords","title":"FSharpFormat.Keywords","content":"FSharpFormat.Keywords \nKeywords \n<p class='summary'>\n            The list of F# keywords.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-fsharpformat.html#StringRegEx","title":"FSharpFormat.StringRegEx","content":"FSharpFormat.StringRegEx \nStringRegEx \n<p class='summary'>\n            Regular expression string to match string and character literals. \n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-fsharpformat.html#Preprocessors","title":"FSharpFormat.Preprocessors","content":"FSharpFormat.Preprocessors \nPreprocessors \n<p class='summary'>\n            TBD\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-haskellformat.html","title":"HaskellFormat","content":"HaskellFormat \n<p class='summary'>\n            Generates color-coded HTML 4.01 from MSH (code name Monad) source code.\n            </p> \nHaskellFormat..ctor \n.ctor \nHaskellFormat.CommentRegEx \nCommentRegEx \nHaskellFormat.StringRegEx \nStringRegEx \nHaskellFormat.Keywords \nKeywords \nHaskellFormat.Preprocessors \nPreprocessors"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-haskellformat.html#.ctor","title":"HaskellFormat..ctor","content":"HaskellFormat..ctor \n.ctor \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-haskellformat.html#CommentRegEx","title":"HaskellFormat.CommentRegEx","content":"HaskellFormat.CommentRegEx \nCommentRegEx \n<p class='summary'>\n            Regular expression string to match single line comments (#).\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-haskellformat.html#StringRegEx","title":"HaskellFormat.StringRegEx","content":"HaskellFormat.StringRegEx \nStringRegEx \n<p class='summary'>\n            Regular expression string to match string and character literals. \n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-haskellformat.html#Keywords","title":"HaskellFormat.Keywords","content":"HaskellFormat.Keywords \nKeywords \n<p class='summary'>\n            The list of MSH keywords.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-haskellformat.html#Preprocessors","title":"HaskellFormat.Preprocessors","content":"HaskellFormat.Preprocessors \nPreprocessors \n<p class='summary'>\n            Use preprocessors property to hilight operators.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-htmlformat.html","title":"HtmlFormat","content":"HtmlFormat \n<p class='summary'>\n            Generates color-coded HTML 4.01 from HTML/XML/ASPX source code.\n            </p><h4>Remarks</h4><p class='remarks'><p class='para'>\n            This implementation assumes that code inside <script> blocks \n            is JavaScript, and code inside <% %> blocks is C#.</p><p class='para'>\n            The default tab width is set to 2 characters in this class.</p></p> \nHtmlFormat..ctor \n.ctor"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-htmlformat.html#.ctor","title":"HtmlFormat..ctor","content":"HtmlFormat..ctor \n.ctor \n<p class='summary'></p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-javascriptformat.html","title":"JavaScriptFormat","content":"JavaScriptFormat \n<p class='summary'>\n            Generates color-coded HTML 4.01 from JavaSctript source code.\n            </p> \nJavaScriptFormat..ctor \n.ctor \nJavaScriptFormat.Keywords \nKeywords \nJavaScriptFormat.Preprocessors \nPreprocessors \nJavaScriptFormat.Operators \nOperators"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-javascriptformat.html#.ctor","title":"JavaScriptFormat..ctor","content":"JavaScriptFormat..ctor \n.ctor \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-javascriptformat.html#Keywords","title":"JavaScriptFormat.Keywords","content":"JavaScriptFormat.Keywords \nKeywords \n<p class='summary'>\n            The list of JavaScript keywords.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-javascriptformat.html#Preprocessors","title":"JavaScriptFormat.Preprocessors","content":"JavaScriptFormat.Preprocessors \nPreprocessors \n<p class='summary'>\n            Use the pre-processor color to mark directives that start with @.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-javascriptformat.html#Operators","title":"JavaScriptFormat.Operators","content":"JavaScriptFormat.Operators \nOperators \n<p class='summary'>\n            TBD\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-mshformat.html","title":"MshFormat","content":"MshFormat \n<p class='summary'>\n            Generates color-coded HTML 4.01 from MSH (code name Monad) source code.\n            </p> \nMshFormat..ctor \n.ctor \nMshFormat.CommentRegEx \nCommentRegEx \nMshFormat.StringRegEx \nStringRegEx \nMshFormat.Keywords \nKeywords \nMshFormat.Preprocessors \nPreprocessors"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-mshformat.html#.ctor","title":"MshFormat..ctor","content":"MshFormat..ctor \n.ctor \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-mshformat.html#CommentRegEx","title":"MshFormat.CommentRegEx","content":"MshFormat.CommentRegEx \nCommentRegEx \n<p class='summary'>\n            Regular expression string to match single line comments (#).\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-mshformat.html#StringRegEx","title":"MshFormat.StringRegEx","content":"MshFormat.StringRegEx \nStringRegEx \n<p class='summary'>\n            Regular expression string to match string and character literals. \n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-mshformat.html#Keywords","title":"MshFormat.Keywords","content":"MshFormat.Keywords \nKeywords \n<p class='summary'>\n            The list of MSH keywords.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-mshformat.html#Preprocessors","title":"MshFormat.Preprocessors","content":"MshFormat.Preprocessors \nPreprocessors \n<p class='summary'>\n            Use preprocessors property to hilight operators.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-paketformat.html","title":"PaketFormat","content":"PaketFormat \n<p class='summary'>\n            Generates color-coded Paket source code.\n            </p> \nPaketFormat..ctor \n.ctor \nPaketFormat.CommentRegEx \nCommentRegEx \nPaketFormat.Operators \nOperators \nPaketFormat.Keywords \nKeywords \nPaketFormat.NumberRegEx \nNumberRegEx"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-paketformat.html#.ctor","title":"PaketFormat..ctor","content":"PaketFormat..ctor \n.ctor \n<p class='summary'>\n            TBD\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-paketformat.html#CommentRegEx","title":"PaketFormat.CommentRegEx","content":"PaketFormat.CommentRegEx \nCommentRegEx \n<p class='summary'>\n             Regular expression string to match single line and multi-line \n             comments (// and (* *)). Single line comments should have to have \n             a space after them to avoid color as comments URLs and paths. For example\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-paketformat.html#Operators","title":"PaketFormat.Operators","content":"PaketFormat.Operators \nOperators \n<p class='summary'>\n            Paket operators\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-paketformat.html#Keywords","title":"PaketFormat.Keywords","content":"PaketFormat.Keywords \nKeywords \n<p class='summary'>\n            Paket Keywords\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-paketformat.html#NumberRegEx","title":"PaketFormat.NumberRegEx","content":"PaketFormat.NumberRegEx \nNumberRegEx \n<p class='summary'>\n            Matches version numbers\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-phpformat.html","title":"PhpFormat","content":"PhpFormat \n<p class='summary'>\n            Generates color-coded HTML 4.01 from PHP source code.\n            </p> \nPhpFormat..ctor \n.ctor \nPhpFormat.StringRegEx \nStringRegEx \nPhpFormat.Keywords \nKeywords \nPhpFormat.Preprocessors \nPreprocessors"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-phpformat.html#.ctor","title":"PhpFormat..ctor","content":"PhpFormat..ctor \n.ctor \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-phpformat.html#StringRegEx","title":"PhpFormat.StringRegEx","content":"PhpFormat.StringRegEx \nStringRegEx \n<p class='summary'>\n            Regular expression string to match string and character literals. \n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-phpformat.html#Keywords","title":"PhpFormat.Keywords","content":"PhpFormat.Keywords \nKeywords \n<p class='summary'>\n            The list of PHP keywords.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-phpformat.html#Preprocessors","title":"PhpFormat.Preprocessors","content":"PhpFormat.Preprocessors \nPreprocessors \n<p class='summary'>\n            The list of PHP preprocessors.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html","title":"SourceFormat","content":"SourceFormat \n<p class='summary'>\n            Provides a base implementation for all code formatters.\n            </p><h4>Remarks</h4><p class='remarks'><p class='para'>\n            To display the formatted code on your web site, the web page must \n            refer to a stylesheet that defines the formatting for the different \n            CSS classes generated by CSharpFormat:\n            .csharpcode, pre, .rem, .kwrd, .str, .op, .preproc, .alt, .lnum.\n            </p><p class='para'>\n            Note that if you have multi-line comments in your source code\n            (like /* ... */), the \"line numbers\" or \"alternate line background\" \n            options will generate code that is not strictly HTML 4.01 compliant. \n            The code will still look good with IE5+ or Mozilla 0.8+. \n            </p></p> \nSourceFormat..ctor \n.ctor \nSourceFormat.FormatCode \nFormatCode \nSourceFormat.FormatCode \nFormatCode \nSourceFormat.FormatSubCode \nFormatSubCode \nSourceFormat.TabSpaces \nTabSpaces \nSourceFormat.LineNumbers \nLineNumbers \nSourceFormat.Alternate \nAlternate \nSourceFormat.EmbedStyleSheet \nEmbedStyleSheet \nSourceFormat.CodeRegex \nCodeRegex \nSourceFormat.GetCssStream \nGetCssStream \nSourceFormat.GetCssString \nGetCssString \nSourceFormat.EscapeHtml \nEscapeHtml"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#.ctor","title":"SourceFormat..ctor","content":"SourceFormat..ctor \n.ctor \n<p class='summary'></p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#FormatCode","title":"SourceFormat.FormatCode","content":"SourceFormat.FormatCode \nFormatCode \n<p class='summary'>\n            Transforms a source code stream to HTML 4.01.\n            </p><h4>Parameters</h4><dl><dt><span class='parameter'>source</span></dt><dd><p>Source code stream.</p></dd></dl><p class='returns'>Returns: A string containing the HTML formatted code.</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#FormatCode","title":"SourceFormat.FormatCode","content":"SourceFormat.FormatCode \nFormatCode \n<p class='summary'>\n            Transforms a source code string to HTML 4.01.\n            </p><p class='returns'>Returns: A string containing the HTML formatted code.</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#FormatSubCode","title":"SourceFormat.FormatSubCode","content":"SourceFormat.FormatSubCode \nFormatSubCode \n<p class='summary'>\n            Allows formatting a part of the code in a different language,\n            for example a JavaScript block inside an HTML file.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#TabSpaces","title":"SourceFormat.TabSpaces","content":"SourceFormat.TabSpaces \nTabSpaces \n<p class='summary'>\n            Gets or sets the tabs width.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#LineNumbers","title":"SourceFormat.LineNumbers","content":"SourceFormat.LineNumbers \nLineNumbers \n<p class='summary'>\n            Enables or disables line numbers in output.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#Alternate","title":"SourceFormat.Alternate","content":"SourceFormat.Alternate \nAlternate \n<p class='summary'>\n            Enables or disables alternating line background.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#EmbedStyleSheet","title":"SourceFormat.EmbedStyleSheet","content":"SourceFormat.EmbedStyleSheet \nEmbedStyleSheet \n<p class='summary'>\n            Enables or disables the embedded CSS style sheet.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#CodeRegex","title":"SourceFormat.CodeRegex","content":"SourceFormat.CodeRegex \nCodeRegex \n<p class='summary'>\n            The regular expression used to capture language tokens.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#GetCssStream","title":"SourceFormat.GetCssStream","content":"SourceFormat.GetCssStream \nGetCssStream \n<p class='summary'>\n            Gets the CSS stylesheet as a stream.\n            </p><p class='returns'>Returns: A text  of the CSS definitions.</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#GetCssString","title":"SourceFormat.GetCssString","content":"SourceFormat.GetCssString \nGetCssString \n<p class='summary'>\n            Gets the CSS stylesheet as a string.\n            </p><p class='returns'>Returns: A string containing the CSS definitions.</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#EscapeHtml","title":"SourceFormat.EscapeHtml","content":"SourceFormat.EscapeHtml \nEscapeHtml \n<p class='summary'>\n            TBD\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-syntaxhighlighter.html","title":"SyntaxHighlighter","content":"SyntaxHighlighter \n<p class='summary'>\n            Summary description for SyntaxHighlighter\n            </p> \nSyntaxHighlighter..ctor \n.ctor \nSyntaxHighlighter.FormatHtml \nFormatHtml \nSyntaxHighlighter.FormatCode \nFormatCode"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-syntaxhighlighter.html#.ctor","title":"SyntaxHighlighter..ctor","content":"SyntaxHighlighter..ctor \n.ctor \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-syntaxhighlighter.html#FormatHtml","title":"SyntaxHighlighter.FormatHtml","content":"SyntaxHighlighter.FormatHtml \nFormatHtml \n<p class='summary'>\n            TBD\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-syntaxhighlighter.html#FormatCode","title":"SyntaxHighlighter.FormatCode","content":"SyntaxHighlighter.FormatCode \nFormatCode \n<p class='summary'>\n            TBD\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-tsqlformat.html","title":"TsqlFormat","content":"TsqlFormat \n<p class='summary'>\n            Generates color-coded T-SQL source code.\n            </p> \nTsqlFormat..ctor \n.ctor \nTsqlFormat.CommentRegEx \nCommentRegEx \nTsqlFormat.StringRegEx \nStringRegEx \nTsqlFormat.CaseSensitive \nCaseSensitive \nTsqlFormat.Keywords \nKeywords \nTsqlFormat.Preprocessors \nPreprocessors"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-tsqlformat.html#.ctor","title":"TsqlFormat..ctor","content":"TsqlFormat..ctor \n.ctor \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-tsqlformat.html#CommentRegEx","title":"TsqlFormat.CommentRegEx","content":"TsqlFormat.CommentRegEx \nCommentRegEx \n<p class='summary'>\n            Regular expression string to match single line \n            comments (--). \n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-tsqlformat.html#StringRegEx","title":"TsqlFormat.StringRegEx","content":"TsqlFormat.StringRegEx \nStringRegEx \n<p class='summary'>\n            Regular expression string to match string literals. \n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-tsqlformat.html#CaseSensitive","title":"TsqlFormat.CaseSensitive","content":"TsqlFormat.CaseSensitive \nCaseSensitive \n<p class='summary'>\n            Returns , since T-SQL is not case sensitive.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-tsqlformat.html#Keywords","title":"TsqlFormat.Keywords","content":"TsqlFormat.Keywords \nKeywords \n<p class='summary'>\n            The list of T-SQL keywords.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-tsqlformat.html#Preprocessors","title":"TsqlFormat.Preprocessors","content":"TsqlFormat.Preprocessors \nPreprocessors \n<p class='summary'>\n            Use the pre-processor color to mark keywords that start with @@.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-typescriptformat.html","title":"TypeScriptFormat","content":"TypeScriptFormat \n<p class='summary'>\n            Generates color-coded HTML 4.01 from TypeScript source code.\n            </p> \nTypeScriptFormat..ctor \n.ctor \nTypeScriptFormat.Keywords \nKeywords"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-typescriptformat.html#.ctor","title":"TypeScriptFormat..ctor","content":"TypeScriptFormat..ctor \n.ctor \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-typescriptformat.html#Keywords","title":"TypeScriptFormat.Keywords","content":"TypeScriptFormat.Keywords \nKeywords \n<p class='summary'>\n            The list of TypeScript keywords extends the ones from JavaScript.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-visualbasicformat.html","title":"VisualBasicFormat","content":"VisualBasicFormat \n<p class='summary'>\n            Generates color-coded HTML 4.01 from Visual Basic source code.\n            </p> \nVisualBasicFormat..ctor \n.ctor \nVisualBasicFormat.CaseSensitive \nCaseSensitive \nVisualBasicFormat.CommentRegEx \nCommentRegEx \nVisualBasicFormat.StringRegEx \nStringRegEx \nVisualBasicFormat.Keywords \nKeywords \nVisualBasicFormat.Preprocessors \nPreprocessors"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-visualbasicformat.html#.ctor","title":"VisualBasicFormat..ctor","content":"VisualBasicFormat..ctor \n.ctor \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-visualbasicformat.html#CaseSensitive","title":"VisualBasicFormat.CaseSensitive","content":"VisualBasicFormat.CaseSensitive \nCaseSensitive \n<p class='summary'>\n            Determines if the language is case sensitive.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-visualbasicformat.html#CommentRegEx","title":"VisualBasicFormat.CommentRegEx","content":"VisualBasicFormat.CommentRegEx \nCommentRegEx \n<p class='summary'>\n            Regular expression string to match comments (' and REM). \n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-visualbasicformat.html#StringRegEx","title":"VisualBasicFormat.StringRegEx","content":"VisualBasicFormat.StringRegEx \nStringRegEx \n<p class='summary'>\n            Regular expression string to match string and character literals. \n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-visualbasicformat.html#Keywords","title":"VisualBasicFormat.Keywords","content":"VisualBasicFormat.Keywords \nKeywords \n<p class='summary'>\n            The list of VB keywords.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-visualbasicformat.html#Preprocessors","title":"VisualBasicFormat.Preprocessors","content":"VisualBasicFormat.Preprocessors \nPreprocessors \n<p class='summary'>\n            The list of VB preprocessors.\n            </p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformat.html","title":"CodeFormat","content":"CodeFormat \n<p class='summary'>\n Exposes functionality of the F# code formatter with a nice interface\n</p> \nCodeFormat.CreateAgent \nCreateAgent \nCodeFormat.FormatFsx \nFormatFsx \nCodeFormat.FormatHtml \nFormatHtml \nCodeFormat.FormatLatex \nFormatLatex"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformat.html#CreateAgent","title":"CodeFormat.CreateAgent","content":"CodeFormat.CreateAgent \nCreateAgent \n<p class='summary'>\n Returns a new instance of the agent that manages code formatting\n using the F# compiler service. \n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformat.html#FormatFsx","title":"CodeFormat.FormatFsx","content":"CodeFormat.FormatFsx \nFormatFsx \n<p class='summary'>\n Formats the .fsx snippets as iPython notebook using the default settings.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformat.html#FormatHtml","title":"CodeFormat.FormatHtml","content":"CodeFormat.FormatHtml \nFormatHtml \n<p class='summary'>\n Formats the .fsx snippets as HTML. The parameters specify prefix for HTML tags, whether lines should\n be added to outputs and whether errors should be printed.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformat.html#FormatLatex","title":"CodeFormat.FormatLatex","content":"CodeFormat.FormatLatex \nFormatLatex \n<p class='summary'>\n Formats the .fsx snippets as LaTeX. The parameters specify prefix for LaTeX tags, whether lines should\n be added to outputs.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformatagent.html","title":"CodeFormatAgent","content":"CodeFormatAgent \n<p class='summary'>\n Uses agent to handle formatting requests\n</p> \nCodeFormatAgent.( .ctor ) \n( .ctor ) \nCodeFormatAgent.AsyncParseSource \nAsyncParseSource \nCodeFormatAgent.ParseSource \nParseSource"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformatagent.html#( .ctor )","title":"CodeFormatAgent.( .ctor )","content":"CodeFormatAgent.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformatagent.html#AsyncParseSource","title":"CodeFormatAgent.AsyncParseSource","content":"CodeFormatAgent.AsyncParseSource \nAsyncParseSource \n<p class='summary'>\n Parse, check and annotate the source code specified by 'source', assuming that it\n is located in a specified 'file'. Optional arguments can be used\n to give compiler command line options and preprocessor definitions\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformatagent.html#ParseSource","title":"CodeFormatAgent.ParseSource","content":"CodeFormatAgent.ParseSource \nParseSource \n<p class='summary'>\n Parse, check and annotate the source code specified by 'source', assuming that it\n is located in a specified 'file'. Optional arguments can be used\n to give compiler command line options and preprocessor definitions\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-errorkind.html","title":"ErrorKind","content":"ErrorKind \n<p class='summary'>\n Represents a kind of error reported from the F# compiler (warning or error)\n</p> \nErrorKind.Error \nError \nErrorKind.Warning \nWarning"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-errorkind.html#Error","title":"ErrorKind.Error","content":"ErrorKind.Error \nError \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-errorkind.html#Warning","title":"ErrorKind.Warning","content":"ErrorKind.Warning \nWarning \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedcontent.html","title":"FormattedContent","content":"FormattedContent \n<p class='summary'>\n Represents formatted snippets\n</p> \nFormattedContent.( .ctor ) \n( .ctor ) \nFormattedContent.ToolTip \nToolTip \nFormattedContent.Snippets \nSnippets"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedcontent.html#( .ctor )","title":"FormattedContent.( .ctor )","content":"FormattedContent.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedcontent.html#ToolTip","title":"FormattedContent.ToolTip","content":"FormattedContent.ToolTip \nToolTip \n<p class='summary'>\n Returns string with ToolTip elements for all the snippets\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedcontent.html#Snippets","title":"FormattedContent.Snippets","content":"FormattedContent.Snippets \nSnippets \n<p class='summary'>\n Returns the processed snippets as an array\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedsnippet.html","title":"FormattedSnippet","content":"FormattedSnippet \n<p class='summary'>\n Represents an individual formatted snippet with title as key\n</p> \nFormattedSnippet.( .ctor ) \n( .ctor ) \nFormattedSnippet.Title \nTitle \nFormattedSnippet.Key \nKey \nFormattedSnippet.Content \nContent"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedsnippet.html#( .ctor )","title":"FormattedSnippet.( .ctor )","content":"FormattedSnippet.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedsnippet.html#Title","title":"FormattedSnippet.Title","content":"FormattedSnippet.Title \nTitle \n<p class='summary'>\n Returns the title of the snippet \n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedsnippet.html#Key","title":"FormattedSnippet.Key","content":"FormattedSnippet.Key \nKey \n<p class='summary'>\n Returns the key of the snippet \n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedsnippet.html#Content","title":"FormattedSnippet.Content","content":"FormattedSnippet.Content \nContent \n<p class='summary'>\n Returns the formatted content code for the snipet\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-line.html","title":"Line","content":"Line \n<p class='summary'>\n Represents a line of source code as a list of `TokenSpan` values. This is\n a single case discriminated union with `Line` constructor.\n</p> \nLine.Line \nLine"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-line.html#Line","title":"Line.Line","content":"Line.Line \nLine \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-snippet.html","title":"Snippet","content":"Snippet \n<p class='summary'>\n An F# snippet consists of a snippet title and a list of lines\n</p> \nSnippet.Snippet \nSnippet"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-snippet.html#Snippet","title":"Snippet.Snippet","content":"Snippet.Snippet \nSnippet \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-sourceerror.html","title":"SourceError","content":"SourceError \n<p class='summary'>\n Error reported from the F# compiler consists of location (start and end),\n error kind and the message (wrapped in a single case discriminated union\n with constructor `SourceError`)\n</p> \nSourceError.SourceError \nSourceError"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-sourceerror.html#SourceError","title":"SourceError.SourceError","content":"SourceError.SourceError \nSourceError \n<p class='summary'>\n Error reported from the F# compiler consists of location (start and end),\n error kind and the message\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html","title":"TokenKind","content":"TokenKind \n<p class='summary'>\n Classifies tokens reported by the FCS\n</p> \nTokenKind.Keyword \nKeyword \nTokenKind.String \nString \nTokenKind.Comment \nComment \nTokenKind.Identifier \nIdentifier \nTokenKind.Inactive \nInactive \nTokenKind.Number \nNumber \nTokenKind.Operator \nOperator \nTokenKind.Punctuation \nPunctuation \nTokenKind.Preprocessor \nPreprocessor \nTokenKind.Module \nModule \nTokenKind.ReferenceType \nReferenceType \nTokenKind.ValueType \nValueType \nTokenKind.Interface \nInterface \nTokenKind.TypeArgument \nTypeArgument \nTokenKind.Property \nProperty \nTokenKind.Enumeration \nEnumeration \nTokenKind.UnionCase \nUnionCase \nTokenKind.Function \nFunction \nTokenKind.Pattern \nPattern \nTokenKind.MutableVar \nMutableVar \nTokenKind.Disposable \nDisposable \nTokenKind.Printf \nPrintf \nTokenKind.Escaped \nEscaped \nTokenKind.Default \nDefault"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Keyword","title":"TokenKind.Keyword","content":"TokenKind.Keyword \nKeyword \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#String","title":"TokenKind.String","content":"TokenKind.String \nString \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Comment","title":"TokenKind.Comment","content":"TokenKind.Comment \nComment \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Identifier","title":"TokenKind.Identifier","content":"TokenKind.Identifier \nIdentifier \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Inactive","title":"TokenKind.Inactive","content":"TokenKind.Inactive \nInactive \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Number","title":"TokenKind.Number","content":"TokenKind.Number \nNumber \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Operator","title":"TokenKind.Operator","content":"TokenKind.Operator \nOperator \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Punctuation","title":"TokenKind.Punctuation","content":"TokenKind.Punctuation \nPunctuation \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Preprocessor","title":"TokenKind.Preprocessor","content":"TokenKind.Preprocessor \nPreprocessor \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Module","title":"TokenKind.Module","content":"TokenKind.Module \nModule \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#ReferenceType","title":"TokenKind.ReferenceType","content":"TokenKind.ReferenceType \nReferenceType \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#ValueType","title":"TokenKind.ValueType","content":"TokenKind.ValueType \nValueType \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Interface","title":"TokenKind.Interface","content":"TokenKind.Interface \nInterface \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#TypeArgument","title":"TokenKind.TypeArgument","content":"TokenKind.TypeArgument \nTypeArgument \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Property","title":"TokenKind.Property","content":"TokenKind.Property \nProperty \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Enumeration","title":"TokenKind.Enumeration","content":"TokenKind.Enumeration \nEnumeration \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#UnionCase","title":"TokenKind.UnionCase","content":"TokenKind.UnionCase \nUnionCase \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Function","title":"TokenKind.Function","content":"TokenKind.Function \nFunction \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Pattern","title":"TokenKind.Pattern","content":"TokenKind.Pattern \nPattern \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#MutableVar","title":"TokenKind.MutableVar","content":"TokenKind.MutableVar \nMutableVar \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Disposable","title":"TokenKind.Disposable","content":"TokenKind.Disposable \nDisposable \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Printf","title":"TokenKind.Printf","content":"TokenKind.Printf \nPrintf \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Escaped","title":"TokenKind.Escaped","content":"TokenKind.Escaped \nEscaped \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Default","title":"TokenKind.Default","content":"TokenKind.Default \nDefault \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspan.html","title":"TokenSpan","content":"TokenSpan \n<p class='summary'>\n A token in a parsed F# code snippet. Aside from standard tokens reported from\n the compiler (`Token`), this also includes `Error` (wrapping the underlined\n tokens), `Omitted` for the special `[omit:...]` tags and `Output` for the special\n `[output:...]` tag\n</p> \nTokenSpan.Token \nToken \nTokenSpan.Error \nError \nTokenSpan.Omitted \nOmitted \nTokenSpan.Output \nOutput"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspan.html#Token","title":"TokenSpan.Token","content":"TokenSpan.Token \nToken \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspan.html#Error","title":"TokenSpan.Error","content":"TokenSpan.Error \nError \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspan.html#Omitted","title":"TokenSpan.Omitted","content":"TokenSpan.Omitted \nOmitted \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspan.html#Output","title":"TokenSpan.Output","content":"TokenSpan.Output \nOutput \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspans.html","title":"TokenSpans","content":"TokenSpans \n<p class='summary'>\n A type alias representing a list of `TokenSpan` values\n</p> \nTokenSpans.Tail \nTail \nTokenSpans.Length \nLength \nTokenSpans.Item \nItem \nTokenSpans.IsEmpty \nIsEmpty \nTokenSpans.Head \nHead \nTokenSpans.Empty \nEmpty"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspans.html#Tail","title":"TokenSpans.Tail","content":"TokenSpans.Tail \nTail \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspans.html#Length","title":"TokenSpans.Length","content":"TokenSpans.Length \nLength \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspans.html#Item","title":"TokenSpans.Item","content":"TokenSpans.Item \nItem \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspans.html#IsEmpty","title":"TokenSpans.IsEmpty","content":"TokenSpans.IsEmpty \nIsEmpty \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspans.html#Head","title":"TokenSpans.Head","content":"TokenSpans.Head \nHead \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspans.html#Empty","title":"TokenSpans.Empty","content":"TokenSpans.Empty \nEmpty \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspan.html","title":"ToolTipSpan","content":"ToolTipSpan \n<p class='summary'>\n A tool tip span can be emphasized text, plain text `Literal` or a line brak\n</p> \nToolTipSpan.Emphasis \nEmphasis \nToolTipSpan.Literal \nLiteral \nToolTipSpan.HardLineBreak \nHardLineBreak"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspan.html#Emphasis","title":"ToolTipSpan.Emphasis","content":"ToolTipSpan.Emphasis \nEmphasis \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspan.html#Literal","title":"ToolTipSpan.Literal","content":"ToolTipSpan.Literal \nLiteral \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspan.html#HardLineBreak","title":"ToolTipSpan.HardLineBreak","content":"ToolTipSpan.HardLineBreak \nHardLineBreak \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspans.html","title":"ToolTipSpans","content":"ToolTipSpans \n<p class='summary'>\n A tool tip consists of a list of items reported from the compiler\n</p> \nToolTipSpans.Tail \nTail \nToolTipSpans.Length \nLength \nToolTipSpans.Item \nItem \nToolTipSpans.IsEmpty \nIsEmpty \nToolTipSpans.Head \nHead \nToolTipSpans.Empty \nEmpty"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspans.html#Tail","title":"ToolTipSpans.Tail","content":"ToolTipSpans.Tail \nTail \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspans.html#Length","title":"ToolTipSpans.Length","content":"ToolTipSpans.Length \nLength \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspans.html#Item","title":"ToolTipSpans.Item","content":"ToolTipSpans.Item \nItem \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspans.html#IsEmpty","title":"ToolTipSpans.IsEmpty","content":"ToolTipSpans.IsEmpty \nIsEmpty \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspans.html#Head","title":"ToolTipSpans.Head","content":"ToolTipSpans.Head \nHead \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspans.html#Empty","title":"ToolTipSpans.Empty","content":"ToolTipSpans.Empty \nEmpty \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html","title":"Literate","content":"Literate \n<p class='summary'>\n This type provides three simple methods for calling the literate programming tool.\n The `ConvertMarkdownFile` and `ConvertScriptFile` methods process a single Markdown document\n and F# script, respectively. The `ConvertDirectory` method handles an entire directory tree\n (looking for `*.fsx` and `*.md` files).\n</p> \nLiterate.ConvertMarkdownFile \nConvertMarkdownFile \nLiterate.ConvertScriptFile \nConvertScriptFile \nLiterate.FormatLiterateNodes \nFormatLiterateNodes \nLiterate.ParseMarkdownFile \nParseMarkdownFile \nLiterate.ParseMarkdownString \nParseMarkdownString \nLiterate.ParseScriptFile \nParseScriptFile \nLiterate.ParseScriptString \nParseScriptString \nLiterate.ToFsx \nToFsx \nLiterate.ToHtml \nToHtml \nLiterate.ToLatex \nToLatex \nLiterate.ToPynb \nToPynb \nLiterate.TransformAndOutputDocument \nTransformAndOutputDocument \nLiterate.WriteHtml \nWriteHtml \nLiterate.WriteLatex \nWriteLatex"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ConvertMarkdownFile","title":"Literate.ConvertMarkdownFile","content":"Literate.ConvertMarkdownFile \nConvertMarkdownFile \n<p class='summary'>\n Convert a markdown file into HTML or another output kind\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ConvertScriptFile","title":"Literate.ConvertScriptFile","content":"Literate.ConvertScriptFile \nConvertScriptFile \n<p class='summary'>\n Convert a script file into HTML or another output kind\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#FormatLiterateNodes","title":"Literate.FormatLiterateNodes","content":"Literate.FormatLiterateNodes \nFormatLiterateNodes \n<p class='summary'>\n Replace literate paragraphs with plain paragraphs\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ParseMarkdownFile","title":"Literate.ParseMarkdownFile","content":"Literate.ParseMarkdownFile \nParseMarkdownFile \n<p class='summary'>\n Parse Markdown document\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ParseMarkdownString","title":"Literate.ParseMarkdownString","content":"Literate.ParseMarkdownString \nParseMarkdownString \n<p class='summary'>\n Parse Markdown document\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ParseScriptFile","title":"Literate.ParseScriptFile","content":"Literate.ParseScriptFile \nParseScriptFile \n<p class='summary'>\n Parse F# Script file\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ParseScriptString","title":"Literate.ParseScriptString","content":"Literate.ParseScriptString \nParseScriptString \n<p class='summary'>\n Parse F# Script file\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ToFsx","title":"Literate.ToFsx","content":"Literate.ToFsx \nToFsx \n<p class='summary'>\n Formate the literate document as an .fsx script \n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ToHtml","title":"Literate.ToHtml","content":"Literate.ToHtml \nToHtml \n<p class='summary'>\n Format the literate document as HTML without using a template\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ToLatex","title":"Literate.ToLatex","content":"Literate.ToLatex \nToLatex \n<p class='summary'>\n Format the literate document as Latex without using a template\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ToPynb","title":"Literate.ToPynb","content":"Literate.ToPynb \nToPynb \n<p class='summary'>\n Formate the literate document as an iPython notebook \n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#TransformAndOutputDocument","title":"Literate.TransformAndOutputDocument","content":"Literate.TransformAndOutputDocument \nTransformAndOutputDocument \n<p class='summary'>\n Write a document object into HTML or another output kind\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#WriteHtml","title":"Literate.WriteHtml","content":"Literate.WriteHtml \nWriteHtml \n<p class='summary'>\n Write the literate document as HTML without using a template\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#WriteLatex","title":"Literate.WriteLatex","content":"Literate.WriteLatex \nWriteLatex \n<p class='summary'>\n Write the literate document as Latex without using a template\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodeoptions.html","title":"LiterateCodeOptions","content":"LiterateCodeOptions \n<p class='summary'>\n Additional properties of a literate code snippet, embedded in a\n `LiterateParagraph.LiterateCode`. The properties specify how should\n a snippet be evaluated and formatted.\n</p> \nLiterateCodeOptions.Evaluate \nEvaluate \nLiterateCodeOptions.OutputName \nOutputName \nLiterateCodeOptions.ExecutionCount \nExecutionCount \nLiterateCodeOptions.Visibility \nVisibility"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodeoptions.html#Evaluate","title":"LiterateCodeOptions.Evaluate","content":"LiterateCodeOptions.Evaluate \nEvaluate \n<p class='summary'>\n Specifies whether the snippet is evalauted while processing\n Use (*** do-not-eval ***) command to set this to `false`\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodeoptions.html#OutputName","title":"LiterateCodeOptions.OutputName","content":"LiterateCodeOptions.OutputName \nOutputName \n<p class='summary'>\n Specifies the name of the output produced by this snippet\n Use the (*** define-output:foo ***) command to set this value\n Other outputs are named cell1, cell2 etc.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodeoptions.html#ExecutionCount","title":"LiterateCodeOptions.ExecutionCount","content":"LiterateCodeOptions.ExecutionCount \nExecutionCount \n<p class='summary'>\n Indiciates the execution sequence number of the cell if it has been evaluated\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodeoptions.html#Visibility","title":"LiterateCodeOptions.Visibility","content":"LiterateCodeOptions.Visibility \nVisibility \n<p class='summary'>\n Specifies the visibility of the snippet in the generated HTML\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodevisibility.html","title":"LiterateCodeVisibility","content":"LiterateCodeVisibility \n<p class='summary'>\n Specifies visibility of a code snippet. \n</p> \nLiterateCodeVisibility.VisibleCode \nVisibleCode \nLiterateCodeVisibility.HiddenCode \nHiddenCode \nLiterateCodeVisibility.NamedCode \nNamedCode"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodevisibility.html#VisibleCode","title":"LiterateCodeVisibility.VisibleCode","content":"LiterateCodeVisibility.VisibleCode \nVisibleCode \n<p class='summary'>\n Ordinary visible code\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodevisibility.html#HiddenCode","title":"LiterateCodeVisibility.HiddenCode","content":"LiterateCodeVisibility.HiddenCode \nHiddenCode \n<p class='summary'>\n Hidden snippet\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodevisibility.html#NamedCode","title":"LiterateCodeVisibility.NamedCode","content":"LiterateCodeVisibility.NamedCode \nNamedCode \n<p class='summary'>\n Named snippet with captured output\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html","title":"LiterateDocument","content":"LiterateDocument \n<p class='summary'>\n Representation of a literate document - the representation of Paragraphs\n uses an F# discriminated union type and so is best used from F#.\n</p> \nLiterateDocument.( .ctor ) \n( .ctor ) \nLiterateDocument.With \nWith \nLiterateDocument.SourceFile \nSourceFile \nLiterateDocument.Source \nSource \nLiterateDocument.Paragraphs \nParagraphs \nLiterateDocument.MarkdownDocument \nMarkdownDocument \nLiterateDocument.FormattedTips \nFormattedTips \nLiterateDocument.Diagnostics \nDiagnostics \nLiterateDocument.DefinedLinks \nDefinedLinks"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#( .ctor )","title":"LiterateDocument.( .ctor )","content":"LiterateDocument.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#With","title":"LiterateDocument.With","content":"LiterateDocument.With \nWith \n<p class='summary'>\n Clone the document and change some of its properties\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#SourceFile","title":"LiterateDocument.SourceFile","content":"LiterateDocument.SourceFile \nSourceFile \n<p class='summary'>\n Location where the file was loaded from\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#Source","title":"LiterateDocument.Source","content":"LiterateDocument.Source \nSource \n<p class='summary'>\n Original document source code\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#Paragraphs","title":"LiterateDocument.Paragraphs","content":"LiterateDocument.Paragraphs \nParagraphs \n<p class='summary'>\n Returns a list of paragraphs in the document\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#MarkdownDocument","title":"LiterateDocument.MarkdownDocument","content":"LiterateDocument.MarkdownDocument \nMarkdownDocument \n<p class='summary'>\n Return as markdown document, throwing away additional stuff\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#FormattedTips","title":"LiterateDocument.FormattedTips","content":"LiterateDocument.FormattedTips \nFormattedTips \n<p class='summary'>\n Formatted tool tips\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#Diagnostics","title":"LiterateDocument.Diagnostics","content":"LiterateDocument.Diagnostics \nDiagnostics \n<p class='summary'>\n Errors\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#DefinedLinks","title":"LiterateDocument.DefinedLinks","content":"LiterateDocument.DefinedLinks \nDefinedLinks \n<p class='summary'>\n Returns a dictionary containing explicitly defined links\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html","title":"LiterateParagraph","content":"LiterateParagraph \n<p class='summary'>\n Extends `MarkdownParagrap` using the `MarkdownEmbedParagraphs` case with\n additional kinds of paragraphs that can appear in literate F# scripts\n (such as various special commands to embed output of a snippet etc.)\n</p> \nLiterateParagraph.ParagraphOptions \nParagraphOptions \nLiterateParagraph.CodeReference \nCodeReference \nLiterateParagraph.FsiOutputReference \nFsiOutputReference \nLiterateParagraph.FsiMergedOutputReference \nFsiMergedOutputReference \nLiterateParagraph.OutputReference \nOutputReference \nLiterateParagraph.ItValueReference \nItValueReference \nLiterateParagraph.ValueReference \nValueReference \nLiterateParagraph.LiterateCode \nLiterateCode \nLiterateParagraph.LanguageTaggedCode \nLanguageTaggedCode \nLiterateParagraph.RawBlock \nRawBlock"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#ParagraphOptions","title":"LiterateParagraph.ParagraphOptions","content":"LiterateParagraph.ParagraphOptions \nParagraphOptions \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#CodeReference","title":"LiterateParagraph.CodeReference","content":"LiterateParagraph.CodeReference \nCodeReference \n<p class='summary'>\n (*** include:foo ***) - Include formatted snippet from other part of the document here \n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#FsiOutputReference","title":"LiterateParagraph.FsiOutputReference","content":"LiterateParagraph.FsiOutputReference \nFsiOutputReference \n<p class='summary'>\n (*** include-fsi-output ***) - Include output from previous snippet\n (*** include-fsi-output:foo ***) - Include output from a named snippet\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#FsiMergedOutputReference","title":"LiterateParagraph.FsiMergedOutputReference","content":"LiterateParagraph.FsiMergedOutputReference \nFsiMergedOutputReference \n<p class='summary'>\n (*** include-fsi-merged-output ***) - Include output from previous snippet\n (*** include-fsi-merged-output:foo ***) - Include output from a named snippet\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#OutputReference","title":"LiterateParagraph.OutputReference","content":"LiterateParagraph.OutputReference \nOutputReference \n<p class='summary'>\n (*** include-fsi-output ***) - Include F# Interactive output from previous snippet\n (*** include-fsi-output:foo ***) - Include F# Interactive from a named snippet\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#ItValueReference","title":"LiterateParagraph.ItValueReference","content":"LiterateParagraph.ItValueReference \nItValueReference \n<p class='summary'>\n (*** include-it ***) - Include \"it\" value from the subsequent snippet here \n (*** include-it:foo ***) - Include \"it\" value from a named snippet\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#ValueReference","title":"LiterateParagraph.ValueReference","content":"LiterateParagraph.ValueReference \nValueReference \n<p class='summary'>\n (*** include-value:foo ***) - Include the formatting of a specified value here\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#LiterateCode","title":"LiterateParagraph.LiterateCode","content":"LiterateParagraph.LiterateCode \nLiterateCode \n<p class='summary'>\n Emebdded literate code snippet. Consists of source lines and options\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#LanguageTaggedCode","title":"LiterateParagraph.LanguageTaggedCode","content":"LiterateParagraph.LanguageTaggedCode \nLanguageTaggedCode \n<p class='summary'>\n Ordinary formatted code snippet in non-F# language (tagged with language code)\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#RawBlock","title":"LiterateParagraph.RawBlock","content":"LiterateParagraph.RawBlock \nRawBlock \n<p class='summary'>\n Block simply emitted without any formatting equivalent to <pre> tag in html\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraphoptions.html","title":"LiterateParagraphOptions","content":"LiterateParagraphOptions \n<p class='summary'>\n Specifies the options for a literate paragraph\n</p> \nLiterateParagraphOptions.Condition \nCondition"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraphoptions.html#Condition","title":"LiterateParagraphOptions.Condition","content":"LiterateParagraphOptions.Condition \nCondition \n<p class='summary'>\n Specifies a conditional for inclusion of the snippet paragraph\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatesource.html","title":"LiterateSource","content":"LiterateSource \n<p class='summary'>\n Represents the source of a literate document. \n</p> \nLiterateSource.Markdown \nMarkdown \nLiterateSource.Script \nScript"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatesource.html#Markdown","title":"LiterateSource.Markdown","content":"LiterateSource.Markdown \nMarkdown \n<p class='summary'>\n A markdown source\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatesource.html#Script","title":"LiterateSource.Script","content":"LiterateSource.Script \nScript \n<p class='summary'>\n A parsed F# script file consisting of snippets.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-outputkind.html","title":"OutputKind","content":"OutputKind \n<p class='summary'>\n Defines the possible output types from literate script (HTML, Latex, Pynb)\n</p> \nOutputKind.Extension \nExtension \nOutputKind.Html \nHtml \nOutputKind.Latex \nLatex \nOutputKind.Pynb \nPynb \nOutputKind.Fsx \nFsx"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-outputkind.html#Extension","title":"OutputKind.Extension","content":"OutputKind.Extension \nExtension \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-outputkind.html#Html","title":"OutputKind.Html","content":"OutputKind.Html \nHtml \n<p class='summary'>\n Requests HTML output\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-outputkind.html#Latex","title":"OutputKind.Latex","content":"OutputKind.Latex \nLatex \n<p class='summary'>\n Requests LaTeX output\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-outputkind.html#Pynb","title":"OutputKind.Pynb","content":"OutputKind.Pynb \nPynb \n<p class='summary'>\n Requests Notebook output\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-outputkind.html#Fsx","title":"OutputKind.Fsx","content":"OutputKind.Fsx \nFsx \n<p class='summary'>\n Requests F# Script output\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsiembedkind.html","title":"FsiEmbedKind","content":"FsiEmbedKind \n<p class='summary'>\n Represents a kind of thing that can be embedded \n</p> \nFsiEmbedKind.FsiOutput \nFsiOutput \nFsiEmbedKind.FsiMergedOutput \nFsiMergedOutput \nFsiEmbedKind.ConsoleOutput \nConsoleOutput \nFsiEmbedKind.ItValue \nItValue \nFsiEmbedKind.Value \nValue"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsiembedkind.html#FsiOutput","title":"FsiEmbedKind.FsiOutput","content":"FsiEmbedKind.FsiOutput \nFsiOutput \n<p class='summary'>\n The FSI output \n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsiembedkind.html#FsiMergedOutput","title":"FsiEmbedKind.FsiMergedOutput","content":"FsiEmbedKind.FsiMergedOutput \nFsiMergedOutput \n<p class='summary'>\n The combined FSI output and console output\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsiembedkind.html#ConsoleOutput","title":"FsiEmbedKind.ConsoleOutput","content":"FsiEmbedKind.ConsoleOutput \nConsoleOutput \n<p class='summary'>\n The stdout from this part of the execution (not including FSI output)\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsiembedkind.html#ItValue","title":"FsiEmbedKind.ItValue","content":"FsiEmbedKind.ItValue \nItValue \n<p class='summary'>\n The 'it' value\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsiembedkind.html#Value","title":"FsiEmbedKind.Value","content":"FsiEmbedKind.Value \nValue \n<p class='summary'>\n A specific value\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationfailedinfo.html","title":"FsiEvaluationFailedInfo","content":"FsiEvaluationFailedInfo \n<p class='summary'>\n Record that is reported by the `EvaluationFailed` event when something\n goes wrong during evalutaiton of an expression\n</p> \nFsiEvaluationFailedInfo.Text \nText \nFsiEvaluationFailedInfo.AsExpression \nAsExpression \nFsiEvaluationFailedInfo.File \nFile \nFsiEvaluationFailedInfo.Exception \nException \nFsiEvaluationFailedInfo.StdErr \nStdErr"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationfailedinfo.html#Text","title":"FsiEvaluationFailedInfo.Text","content":"FsiEvaluationFailedInfo.Text \nText \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationfailedinfo.html#AsExpression","title":"FsiEvaluationFailedInfo.AsExpression","content":"FsiEvaluationFailedInfo.AsExpression \nAsExpression \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationfailedinfo.html#File","title":"FsiEvaluationFailedInfo.File","content":"FsiEvaluationFailedInfo.File \nFile \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationfailedinfo.html#Exception","title":"FsiEvaluationFailedInfo.Exception","content":"FsiEvaluationFailedInfo.Exception \nException \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationfailedinfo.html#StdErr","title":"FsiEvaluationFailedInfo.StdErr","content":"FsiEvaluationFailedInfo.StdErr \nStdErr \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationresult.html","title":"FsiEvaluationResult","content":"FsiEvaluationResult \n<p class='summary'>\n Represents the result of evaluating an F# snippet. This contains\n the generated console output together with a result and its static type.\n</p> \nFsiEvaluationResult.Output \nOutput \nFsiEvaluationResult.FsiOutput \nFsiOutput \nFsiEvaluationResult.FsiMergedOutput \nFsiMergedOutput \nFsiEvaluationResult.ItValue \nItValue \nFsiEvaluationResult.Result \nResult"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationresult.html#Output","title":"FsiEvaluationResult.Output","content":"FsiEvaluationResult.Output \nOutput \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationresult.html#FsiOutput","title":"FsiEvaluationResult.FsiOutput","content":"FsiEvaluationResult.FsiOutput \nFsiOutput \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationresult.html#FsiMergedOutput","title":"FsiEvaluationResult.FsiMergedOutput","content":"FsiEvaluationResult.FsiMergedOutput \nFsiMergedOutput \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationresult.html#ItValue","title":"FsiEvaluationResult.ItValue","content":"FsiEvaluationResult.ItValue \nItValue \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationresult.html#Result","title":"FsiEvaluationResult.Result","content":"FsiEvaluationResult.Result \nResult \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluator.html","title":"FsiEvaluator","content":"FsiEvaluator \n<p class='summary'>\n A wrapper for F# interactive service that is used to evaluate inline snippets\n</p> \nFsiEvaluator.( .ctor ) \n( .ctor ) \nFsiEvaluator.RegisterTransformation \nRegisterTransformation \nFsiEvaluator.EvaluationFailed \nEvaluationFailed"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluator.html#( .ctor )","title":"FsiEvaluator.( .ctor )","content":"FsiEvaluator.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluator.html#RegisterTransformation","title":"FsiEvaluator.RegisterTransformation","content":"FsiEvaluator.RegisterTransformation \nRegisterTransformation \n<p class='summary'>\n Register a function that formats (some) values that are produced by the evaluator.\n The specified function should return 'Some' when it knows how to format a value\n and it should return formatted \n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluator.html#EvaluationFailed","title":"FsiEvaluator.EvaluationFailed","content":"FsiEvaluator.EvaluationFailed \nEvaluationFailed \n<p class='summary'>\n This event is fired whenever an evaluation of an expression fails\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluatorconfig.html","title":"FsiEvaluatorConfig","content":"FsiEvaluatorConfig \n<p class='summary'>\n Provides configuration options for the `FsiEvaluator`\n</p> \nFsiEvaluatorConfig.( .ctor ) \n( .ctor ) \nFsiEvaluatorConfig.CreateNoOpFsiObject \nCreateNoOpFsiObject"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluatorconfig.html#( .ctor )","title":"FsiEvaluatorConfig.( .ctor )","content":"FsiEvaluatorConfig.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluatorconfig.html#CreateNoOpFsiObject","title":"FsiEvaluatorConfig.CreateNoOpFsiObject","content":"FsiEvaluatorConfig.CreateNoOpFsiObject \nCreateNoOpFsiObject \n<p class='summary'>\n Creates a dummy `fsi` object that does not affect the behaviour of F# Interactive\n (and simply ignores all operations that are done on it). You can use this to \n e.g. disable registered printers that would open new windows etc.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-ifsievaluationresult.html","title":"IFsiEvaluationResult","content":"IFsiEvaluationResult \n<p class='summary'>\n An interface that represents FSI evaluation result\n (we make this abstract so that evaluators can store other info)\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-ifsievaluator.html","title":"IFsiEvaluator","content":"IFsiEvaluator \n<p class='summary'>\n Represents an evaluator for F# snippets embedded in code\n</p> \nIFsiEvaluator.Evaluate \nEvaluate \nIFsiEvaluator.Format \nFormat"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-ifsievaluator.html#Evaluate","title":"IFsiEvaluator.Evaluate","content":"IFsiEvaluator.Evaluate \nEvaluate \n<p class='summary'>\n Called to evaluate a snippet \n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-ifsievaluator.html#Format","title":"IFsiEvaluator.Format","content":"IFsiEvaluator.Format \nFormat \n<p class='summary'>\n Called to format some part of evaluation result generated by FSI\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html","title":"Markdown","content":"Markdown \n<p class='summary'>\n Static class that provides methods for formatting \n and transforming Markdown documents.\n</p> \nMarkdown.Parse \nParse \nMarkdown.ToFsx \nToFsx \nMarkdown.ToHtml \nToHtml \nMarkdown.ToHtml \nToHtml \nMarkdown.ToLatex \nToLatex \nMarkdown.ToLatex \nToLatex \nMarkdown.ToPynb \nToPynb \nMarkdown.WriteHtml \nWriteHtml \nMarkdown.WriteHtml \nWriteHtml \nMarkdown.WriteLatex \nWriteLatex \nMarkdown.WriteLatex \nWriteLatex"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#Parse","title":"Markdown.Parse","content":"Markdown.Parse \nParse \n<p class='summary'>\n Parse the specified text into a MarkdownDocument. Line breaks in the\n inline HTML (etc.) will be stored using the specified string.\n\n  - `parseOptions`: Controls whether code and non-code blocks are parsed as raw lines or not.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#ToFsx","title":"Markdown.ToFsx","content":"Markdown.ToFsx \nToFsx \n<p class='summary'>\n Transform the provided MarkdownDocument into Pynb and return the result as a string.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#ToHtml","title":"Markdown.ToHtml","content":"Markdown.ToHtml \nToHtml \n<p class='summary'>\n Transform Markdown document into HTML format. \n The result will be returned as a string.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#ToHtml","title":"Markdown.ToHtml","content":"Markdown.ToHtml \nToHtml \n<p class='summary'>\n Transform the provided MarkdownDocument into HTML\n format and return the result as a string.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#ToLatex","title":"Markdown.ToLatex","content":"Markdown.ToLatex \nToLatex \n<p class='summary'>\n Transform Markdown text into LaTeX format. The result will be returned as a string.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#ToLatex","title":"Markdown.ToLatex","content":"Markdown.ToLatex \nToLatex \n<p class='summary'>\n Transform the provided MarkdownDocument into LaTeX\n format and return the result as a string.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#ToPynb","title":"Markdown.ToPynb","content":"Markdown.ToPynb \nToPynb \n<p class='summary'>\n Transform the provided MarkdownDocument into Pynb and return the result as a string.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#WriteHtml","title":"Markdown.WriteHtml","content":"Markdown.WriteHtml \nWriteHtml \n<p class='summary'>\n Transform Markdown text into HTML format. The result\n will be written to the provided TextWriter.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#WriteHtml","title":"Markdown.WriteHtml","content":"Markdown.WriteHtml \nWriteHtml \n<p class='summary'>\n Transform the provided MarkdownDocument into HTML\n format and write the result to a given writer.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#WriteLatex","title":"Markdown.WriteLatex","content":"Markdown.WriteLatex \nWriteLatex \n<p class='summary'>\n Transform Markdown document into LaTeX format. The result\n will be written to the provided TextWriter.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#WriteLatex","title":"Markdown.WriteLatex","content":"Markdown.WriteLatex \nWriteLatex \n<p class='summary'>\n Transform the provided MarkdownDocument into LaTeX\n format and write the result to a given writer.\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowncolumnalignment.html","title":"MarkdownColumnAlignment","content":"MarkdownColumnAlignment \n<p class='summary'>\n Column in a table can be aligned to left, right, center or using the default alignment\n</p> \nMarkdownColumnAlignment.AlignLeft \nAlignLeft \nMarkdownColumnAlignment.AlignRight \nAlignRight \nMarkdownColumnAlignment.AlignCenter \nAlignCenter \nMarkdownColumnAlignment.AlignDefault \nAlignDefault"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowncolumnalignment.html#AlignLeft","title":"MarkdownColumnAlignment.AlignLeft","content":"MarkdownColumnAlignment.AlignLeft \nAlignLeft \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowncolumnalignment.html#AlignRight","title":"MarkdownColumnAlignment.AlignRight","content":"MarkdownColumnAlignment.AlignRight \nAlignRight \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowncolumnalignment.html#AlignCenter","title":"MarkdownColumnAlignment.AlignCenter","content":"MarkdownColumnAlignment.AlignCenter \nAlignCenter \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowncolumnalignment.html#AlignDefault","title":"MarkdownColumnAlignment.AlignDefault","content":"MarkdownColumnAlignment.AlignDefault \nAlignDefault \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowndocument.html","title":"MarkdownDocument","content":"MarkdownDocument \n<p class='summary'>\n Representation of a Markdown document - the representation of Paragraphs\n uses an F# discriminated union type and so is best used from F#.\n</p> \nMarkdownDocument.( .ctor ) \n( .ctor ) \nMarkdownDocument.Paragraphs \nParagraphs \nMarkdownDocument.DefinedLinks \nDefinedLinks"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowndocument.html#( .ctor )","title":"MarkdownDocument.( .ctor )","content":"MarkdownDocument.( .ctor ) \n( .ctor ) \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowndocument.html#Paragraphs","title":"MarkdownDocument.Paragraphs","content":"MarkdownDocument.Paragraphs \nParagraphs \n<p class='summary'>\n Returns a list of paragraphs in the document\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowndocument.html#DefinedLinks","title":"MarkdownDocument.DefinedLinks","content":"MarkdownDocument.DefinedLinks \nDefinedLinks \n<p class='summary'>\n Returns a dictionary containing explicitly defined links\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownembedparagraphs.html","title":"MarkdownEmbedParagraphs","content":"MarkdownEmbedParagraphs \n<p class='summary'>\n Provides an extensibility point for adding custom kinds of paragraphs into a document\n (`MarkdownEmbedParagraphs` values can be embedded using `MarkdownParagraph.EmbedParagraphs`)\n</p> \nMarkdownEmbedParagraphs.Render \nRender"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownembedparagraphs.html#Render","title":"MarkdownEmbedParagraphs.Render","content":"MarkdownEmbedParagraphs.Render \nRender \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownembedspans.html","title":"MarkdownEmbedSpans","content":"MarkdownEmbedSpans \n<p class='summary'>\n Provides an extensibility point for adding custom kinds of spans into a document\n (`MarkdownEmbedSpans` values can be embedded using `MarkdownSpan.EmbedSpans`)\n</p> \nMarkdownEmbedSpans.Render \nRender"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownembedspans.html#Render","title":"MarkdownEmbedSpans.Render","content":"MarkdownEmbedSpans.Render \nRender \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownlistkind.html","title":"MarkdownListKind","content":"MarkdownListKind \n<p class='summary'>\n A list kind can be `Ordered` or `Unordered` corresponding to `<ol>` and `<ul>` elements\n</p> \nMarkdownListKind.Ordered \nOrdered \nMarkdownListKind.Unordered \nUnordered"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownlistkind.html#Ordered","title":"MarkdownListKind.Ordered","content":"MarkdownListKind.Ordered \nOrdered \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownlistkind.html#Unordered","title":"MarkdownListKind.Unordered","content":"MarkdownListKind.Unordered \nUnordered \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html","title":"MarkdownParagraph","content":"MarkdownParagraph \n<p class='summary'>\n A paragraph represents a (possibly) multi-line element of a Markdown document.\n Paragraphs are headings, inline paragraphs, code blocks, lists, quotations, tables and\n also embedded LaTeX blocks.\n</p> \nMarkdownParagraph.Heading \nHeading \nMarkdownParagraph.Paragraph \nParagraph \nMarkdownParagraph.CodeBlock \nCodeBlock \nMarkdownParagraph.OutputBlock \nOutputBlock \nMarkdownParagraph.InlineBlock \nInlineBlock \nMarkdownParagraph.ListBlock \nListBlock \nMarkdownParagraph.QuotedBlock \nQuotedBlock \nMarkdownParagraph.Span \nSpan \nMarkdownParagraph.LatexBlock \nLatexBlock \nMarkdownParagraph.HorizontalRule \nHorizontalRule \nMarkdownParagraph.TableBlock \nTableBlock \nMarkdownParagraph.EmbedParagraphs \nEmbedParagraphs \nMarkdownParagraph.OtherBlock \nOtherBlock"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#Heading","title":"MarkdownParagraph.Heading","content":"MarkdownParagraph.Heading \nHeading \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#Paragraph","title":"MarkdownParagraph.Paragraph","content":"MarkdownParagraph.Paragraph \nParagraph \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#CodeBlock","title":"MarkdownParagraph.CodeBlock","content":"MarkdownParagraph.CodeBlock \nCodeBlock \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#OutputBlock","title":"MarkdownParagraph.OutputBlock","content":"MarkdownParagraph.OutputBlock \nOutputBlock \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#InlineBlock","title":"MarkdownParagraph.InlineBlock","content":"MarkdownParagraph.InlineBlock \nInlineBlock \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#ListBlock","title":"MarkdownParagraph.ListBlock","content":"MarkdownParagraph.ListBlock \nListBlock \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#QuotedBlock","title":"MarkdownParagraph.QuotedBlock","content":"MarkdownParagraph.QuotedBlock \nQuotedBlock \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#Span","title":"MarkdownParagraph.Span","content":"MarkdownParagraph.Span \nSpan \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#LatexBlock","title":"MarkdownParagraph.LatexBlock","content":"MarkdownParagraph.LatexBlock \nLatexBlock \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#HorizontalRule","title":"MarkdownParagraph.HorizontalRule","content":"MarkdownParagraph.HorizontalRule \nHorizontalRule \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#TableBlock","title":"MarkdownParagraph.TableBlock","content":"MarkdownParagraph.TableBlock \nTableBlock \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#EmbedParagraphs","title":"MarkdownParagraph.EmbedParagraphs","content":"MarkdownParagraph.EmbedParagraphs \nEmbedParagraphs \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#OtherBlock","title":"MarkdownParagraph.OtherBlock","content":"MarkdownParagraph.OtherBlock \nOtherBlock \n<p class='summary'>\n Reprsents a block of markdown produced when parsing of tables or quoted blocks is suppressed\n</p>"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraphs.html","title":"MarkdownParagraphs","content":"MarkdownParagraphs \n<p class='summary'>\n A type alias for a list of paragraphs\n</p> \nMarkdownParagraphs.Tail \nTail \nMarkdownParagraphs.Length \nLength \nMarkdownParagraphs.Item \nItem \nMarkdownParagraphs.IsEmpty \nIsEmpty \nMarkdownParagraphs.Head \nHead \nMarkdownParagraphs.Empty \nEmpty"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraphs.html#Tail","title":"MarkdownParagraphs.Tail","content":"MarkdownParagraphs.Tail \nTail \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraphs.html#Length","title":"MarkdownParagraphs.Length","content":"MarkdownParagraphs.Length \nLength \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraphs.html#Item","title":"MarkdownParagraphs.Item","content":"MarkdownParagraphs.Item \nItem \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraphs.html#IsEmpty","title":"MarkdownParagraphs.IsEmpty","content":"MarkdownParagraphs.IsEmpty \nIsEmpty \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraphs.html#Head","title":"MarkdownParagraphs.Head","content":"MarkdownParagraphs.Head \nHead \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraphs.html#Empty","title":"MarkdownParagraphs.Empty","content":"MarkdownParagraphs.Empty \nEmpty \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparseoptions.html","title":"MarkdownParseOptions","content":"MarkdownParseOptions \n<p class='summary'>\n Controls the parsing of markdown\n</p> \nMarkdownParseOptions.None \nNone \nMarkdownParseOptions.ParseCodeAsOther \nParseCodeAsOther \nMarkdownParseOptions.ParseNonCodeAsOther \nParseNonCodeAsOther"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparseoptions.html#None","title":"MarkdownParseOptions.None","content":"MarkdownParseOptions.None \nNone \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparseoptions.html#ParseCodeAsOther","title":"MarkdownParseOptions.ParseCodeAsOther","content":"MarkdownParseOptions.ParseCodeAsOther \nParseCodeAsOther \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparseoptions.html#ParseNonCodeAsOther","title":"MarkdownParseOptions.ParseNonCodeAsOther","content":"MarkdownParseOptions.ParseNonCodeAsOther \nParseNonCodeAsOther \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html","title":"MarkdownSpan","content":"MarkdownSpan \n<p class='summary'>\n Represents inline formatting inside a paragraph. This can be literal (with text), various\n formattings (string, emphasis, etc.), hyperlinks, images, inline maths etc.\n</p> \nMarkdownSpan.Literal \nLiteral \nMarkdownSpan.InlineCode \nInlineCode \nMarkdownSpan.Strong \nStrong \nMarkdownSpan.Emphasis \nEmphasis \nMarkdownSpan.AnchorLink \nAnchorLink \nMarkdownSpan.DirectLink \nDirectLink \nMarkdownSpan.IndirectLink \nIndirectLink \nMarkdownSpan.DirectImage \nDirectImage \nMarkdownSpan.IndirectImage \nIndirectImage \nMarkdownSpan.HardLineBreak \nHardLineBreak \nMarkdownSpan.LatexInlineMath \nLatexInlineMath \nMarkdownSpan.LatexDisplayMath \nLatexDisplayMath \nMarkdownSpan.EmbedSpans \nEmbedSpans"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#Literal","title":"MarkdownSpan.Literal","content":"MarkdownSpan.Literal \nLiteral \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#InlineCode","title":"MarkdownSpan.InlineCode","content":"MarkdownSpan.InlineCode \nInlineCode \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#Strong","title":"MarkdownSpan.Strong","content":"MarkdownSpan.Strong \nStrong \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#Emphasis","title":"MarkdownSpan.Emphasis","content":"MarkdownSpan.Emphasis \nEmphasis \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#AnchorLink","title":"MarkdownSpan.AnchorLink","content":"MarkdownSpan.AnchorLink \nAnchorLink \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#DirectLink","title":"MarkdownSpan.DirectLink","content":"MarkdownSpan.DirectLink \nDirectLink \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#IndirectLink","title":"MarkdownSpan.IndirectLink","content":"MarkdownSpan.IndirectLink \nIndirectLink \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#DirectImage","title":"MarkdownSpan.DirectImage","content":"MarkdownSpan.DirectImage \nDirectImage \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#IndirectImage","title":"MarkdownSpan.IndirectImage","content":"MarkdownSpan.IndirectImage \nIndirectImage \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#HardLineBreak","title":"MarkdownSpan.HardLineBreak","content":"MarkdownSpan.HardLineBreak \nHardLineBreak \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#LatexInlineMath","title":"MarkdownSpan.LatexInlineMath","content":"MarkdownSpan.LatexInlineMath \nLatexInlineMath \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#LatexDisplayMath","title":"MarkdownSpan.LatexDisplayMath","content":"MarkdownSpan.LatexDisplayMath \nLatexDisplayMath \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#EmbedSpans","title":"MarkdownSpan.EmbedSpans","content":"MarkdownSpan.EmbedSpans \nEmbedSpans \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspans.html","title":"MarkdownSpans","content":"MarkdownSpans \n<p class='summary'>\n A type alias for a list of `MarkdownSpan` values\n</p> \nMarkdownSpans.Tail \nTail \nMarkdownSpans.Length \nLength \nMarkdownSpans.Item \nItem \nMarkdownSpans.IsEmpty \nIsEmpty \nMarkdownSpans.Head \nHead \nMarkdownSpans.Empty \nEmpty"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspans.html#Tail","title":"MarkdownSpans.Tail","content":"MarkdownSpans.Tail \nTail \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspans.html#Length","title":"MarkdownSpans.Length","content":"MarkdownSpans.Length \nLength \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspans.html#Item","title":"MarkdownSpans.Item","content":"MarkdownSpans.Item \nItem \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspans.html#IsEmpty","title":"MarkdownSpans.IsEmpty","content":"MarkdownSpans.IsEmpty \nIsEmpty \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspans.html#Head","title":"MarkdownSpans.Head","content":"MarkdownSpans.Head \nHead \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspans.html#Empty","title":"MarkdownSpans.Empty","content":"MarkdownSpans.Empty \nEmpty \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowntablerow.html","title":"MarkdownTableRow","content":"MarkdownTableRow \n<p class='summary'>\n A type alias representing table row as a list of paragraphs\n</p> \nMarkdownTableRow.Tail \nTail \nMarkdownTableRow.Length \nLength \nMarkdownTableRow.Item \nItem \nMarkdownTableRow.IsEmpty \nIsEmpty \nMarkdownTableRow.Head \nHead \nMarkdownTableRow.Empty \nEmpty"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowntablerow.html#Tail","title":"MarkdownTableRow.Tail","content":"MarkdownTableRow.Tail \nTail \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowntablerow.html#Length","title":"MarkdownTableRow.Length","content":"MarkdownTableRow.Length \nLength \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowntablerow.html#Item","title":"MarkdownTableRow.Item","content":"MarkdownTableRow.Item \nItem \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowntablerow.html#IsEmpty","title":"MarkdownTableRow.IsEmpty","content":"MarkdownTableRow.IsEmpty \nIsEmpty \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowntablerow.html#Head","title":"MarkdownTableRow.Head","content":"MarkdownTableRow.Head \nHead \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowntablerow.html#Empty","title":"MarkdownTableRow.Empty","content":"MarkdownTableRow.Empty \nEmpty \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrange.html","title":"MarkdownRange","content":"MarkdownRange \n \nMarkdownRange.StartLine \nStartLine \nMarkdownRange.StartColumn \nStartColumn \nMarkdownRange.EndLine \nEndLine \nMarkdownRange.EndColumn \nEndColumn"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrange.html#StartLine","title":"MarkdownRange.StartLine","content":"MarkdownRange.StartLine \nStartLine \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrange.html#StartColumn","title":"MarkdownRange.StartColumn","content":"MarkdownRange.StartColumn \nStartColumn \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrange.html#EndLine","title":"MarkdownRange.EndLine","content":"MarkdownRange.EndLine \nEndLine \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrange.html#EndColumn","title":"MarkdownRange.EndColumn","content":"MarkdownRange.EndColumn \nEndColumn \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkey.html","title":"ParamKey","content":"ParamKey \n \nParamKey.ParamKey \nParamKey"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkey.html#ParamKey","title":"ParamKey.ParamKey","content":"ParamKey.ParamKey \nParamKey \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-parameters.html","title":"Parameters","content":"Parameters \n<p class='summary'>\n A list of parameters indexed by parameter keys\n</p> \nParameters.Tail \nTail \nParameters.Length \nLength \nParameters.Item \nItem \nParameters.IsEmpty \nIsEmpty \nParameters.Head \nHead \nParameters.Empty \nEmpty"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-parameters.html#Tail","title":"Parameters.Tail","content":"Parameters.Tail \nTail \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-parameters.html#Length","title":"Parameters.Length","content":"Parameters.Length \nLength \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-parameters.html#Item","title":"Parameters.Item","content":"Parameters.Item \nItem \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-parameters.html#IsEmpty","title":"Parameters.IsEmpty","content":"Parameters.IsEmpty \nIsEmpty \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-parameters.html#Head","title":"Parameters.Head","content":"Parameters.Head \nHead \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-parameters.html#Empty","title":"Parameters.Empty","content":"Parameters.Empty \nEmpty \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns-paragraphleafinfo.html","title":"ParagraphLeafInfo","content":"ParagraphLeafInfo \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns-paragraphnestedinfo.html","title":"ParagraphNestedInfo","content":"ParagraphNestedInfo \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns-paragraphspansinfo.html","title":"ParagraphSpansInfo","content":"ParagraphSpansInfo \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns-spanleafinfo.html","title":"SpanLeafInfo","content":"SpanLeafInfo \n"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns-spannodeinfo.html","title":"SpanNodeInfo","content":"SpanNodeInfo \n"}]