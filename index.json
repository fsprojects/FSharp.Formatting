[{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs.html","title":"FSharp.Formatting.ApiDocs","content":"ApiDocAttribute \nApiDocCollection \nApiDocComment \nApiDocEntity \nApiDocEntityInfo \nApiDocFileExtensions \nApiDocHtml \nApiDocInput \nApiDocMember \nApiDocMemberDetails \nApiDocMemberKind \nApiDocModel \nApiDocNamespace \nApiDocType \nApiDocs \nApiDocsSearchIndexEntry \nAttribute \nDocComment \nMember \nMemberKind \nModule \nModuleInfo \nType \nTypeInfo","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat.html","title":"FSharp.Formatting.CSharpFormat","content":"CLikeFormat \nCPlusPlusFormat \nCSharpFormat \nCodeFormat \nFSharpFormat \nHaskellFormat \nHtmlFormat \nJavaScriptFormat \nMshFormat \nPaketFormat \nPhpFormat \nSourceFormat \nSyntaxHighlighter \nTsqlFormat \nTypeScriptFormat \nVisualBasicFormat","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat.html","title":"FSharp.Formatting.CodeFormat","content":"CodeFormatter \nCodeFormat \nErrorKind \nFormattedContent \nFormattedSnippet \nLine \nSnippet \nSourceError \nTokenKind \nTokenSpan \nTokenSpans \nToolTipSpan \nToolTipSpans","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-common.html","title":"FSharp.Formatting.Common","content":"Menu \nPageContentList","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate.html","title":"FSharp.Formatting.Literate","content":"MarkdownPatterns \nIndexText \nLiterate \nLiterateCodeOptions \nLiterateCodeVisibility \nLiterateDocument \nLiterateParagraph \nLiterateParagraphOptions \nLiterateSource \nOutputKind","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation.html","title":"FSharp.Formatting.Literate.Evaluation","content":"FsiEmbedKind \nFsiEvaluationFailedInfo \nFsiEvaluationResult \nFsiEvaluator \nFsiEvaluatorConfig \nIFsiEvaluationResult \nIFsiEvaluator","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown.html","title":"FSharp.Formatting.Markdown","content":"Dsl \nHtmlFormatting \nMarkdownPatterns \nMarkdown \nMarkdownColumnAlignment \nMarkdownDocument \nMarkdownEmbedParagraphs \nMarkdownEmbedSpans \nMarkdownListKind \nMarkdownParagraph \nMarkdownParagraphs \nMarkdownParseOptions \nMarkdownSpan \nMarkdownSpans \nMarkdownTableRow \nMarkdownRange \nMarkdownRange","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating.html","title":"FSharp.Formatting.Templating","content":"ParamKeys \nFrontMatterFile \nParamKey \nSubstitutions","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html","title":"ApiDocAttribute","content":"ApiDocAttribute \n Represents a custom attribute attached to source code \nApiDocAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nApiDocAttribute.Format \nFormat \nApiDocAttribute.FormatFullName \nFormatFullName \nApiDocAttribute.FormatFullNameLongForm \nFormatFullNameLongForm \nApiDocAttribute.FormatLongForm \nFormatLongForm \nApiDocAttribute.Name \nName \nApiDocAttribute.ObsoleteMessage \nObsoleteMessage \nApiDocAttribute.CustomOperationName \nCustomOperationName \nApiDocAttribute.IsCustomOperationAttribute \nIsCustomOperationAttribute \nApiDocAttribute.IsObsoleteAttribute \nIsObsoleteAttribute \nApiDocAttribute.ConstructorArguments \nConstructorArguments \nApiDocAttribute.IsRequireQualifiedAccessAttribute \nIsRequireQualifiedAccessAttribute \nApiDocAttribute.FullName \nFullName \nApiDocAttribute.NamedConstructorArguments \nNamedConstructorArguments","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"ApiDocAttribute.\u0060\u0060.ctor\u0060\u0060","content":"ApiDocAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#Format","title":"ApiDocAttribute.Format","content":"ApiDocAttribute.Format \nFormat \n Formats the attribute using the Name. Removes the \u0022Attribute\u0022-suffix. E.g Obsolete","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#FormatFullName","title":"ApiDocAttribute.FormatFullName","content":"ApiDocAttribute.FormatFullName \nFormatFullName \n Formats the attribute using the FullName. Removes the \u0022Attribute\u0022-suffix. E.g System.Obsolete","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#FormatFullNameLongForm","title":"ApiDocAttribute.FormatFullNameLongForm","content":"ApiDocAttribute.FormatFullNameLongForm \nFormatFullNameLongForm \n Formats the attribute using the FullName. Keeps the \u0022Attribute\u0022-suffix. E.g System.ObsoleteAttribute","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#FormatLongForm","title":"ApiDocAttribute.FormatLongForm","content":"ApiDocAttribute.FormatLongForm \nFormatLongForm \n Formats the attribute using the Name. Keeps the \u0022Attribute\u0022-suffix. E.g ObsoleteAttribute","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#Name","title":"ApiDocAttribute.Name","content":"ApiDocAttribute.Name \nName \n The name of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#ObsoleteMessage","title":"ApiDocAttribute.ObsoleteMessage","content":"ApiDocAttribute.ObsoleteMessage \nObsoleteMessage \n Returns the obsolete message, when this attribute is the System.ObsoleteAttribute. When its not or no message was specified, an empty string is returned","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#CustomOperationName","title":"ApiDocAttribute.CustomOperationName","content":"ApiDocAttribute.CustomOperationName \nCustomOperationName \n Returns the custom operation name, when this attribute is the CustomOperationAttribute. When its not an empty string is returned","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#IsCustomOperationAttribute","title":"ApiDocAttribute.IsCustomOperationAttribute","content":"ApiDocAttribute.IsCustomOperationAttribute \nIsCustomOperationAttribute \n Gets a value indicating whether this attribute the CustomOperationAttribute","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#IsObsoleteAttribute","title":"ApiDocAttribute.IsObsoleteAttribute","content":"ApiDocAttribute.IsObsoleteAttribute \nIsObsoleteAttribute \n Gets a value indicating whether this attribute is System.ObsoleteAttribute","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#ConstructorArguments","title":"ApiDocAttribute.ConstructorArguments","content":"ApiDocAttribute.ConstructorArguments \nConstructorArguments \n The arguments to the constructor for the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#IsRequireQualifiedAccessAttribute","title":"ApiDocAttribute.IsRequireQualifiedAccessAttribute","content":"ApiDocAttribute.IsRequireQualifiedAccessAttribute \nIsRequireQualifiedAccessAttribute \n Gets a value indicating whether this attribute is RequireQualifiedAccessAttribute","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#FullName","title":"ApiDocAttribute.FullName","content":"ApiDocAttribute.FullName \nFullName \n The qualified name of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocattribute.html#NamedConstructorArguments","title":"ApiDocAttribute.NamedConstructorArguments","content":"ApiDocAttribute.NamedConstructorArguments \nNamedConstructorArguments \n The named arguments for the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccollection.html","title":"ApiDocCollection","content":"ApiDocCollection \n Represents a group of assemblies integrated with its associated documentation \nApiDocCollection.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nApiDocCollection.CollectionName \nCollectionName \nApiDocCollection.Namespaces \nNamespaces \nApiDocCollection.Assemblies \nAssemblies","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccollection.html#\u0060\u0060.ctor\u0060\u0060","title":"ApiDocCollection.\u0060\u0060.ctor\u0060\u0060","content":"ApiDocCollection.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccollection.html#CollectionName","title":"ApiDocCollection.CollectionName","content":"ApiDocCollection.CollectionName \nCollectionName \n Name of the collection","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccollection.html#Namespaces","title":"ApiDocCollection.Namespaces","content":"ApiDocCollection.Namespaces \nNamespaces \n All namespaces in the collection","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccollection.html#Assemblies","title":"ApiDocCollection.Assemblies","content":"ApiDocCollection.Assemblies \nAssemblies \n All assemblies in the collection","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html","title":"ApiDocComment","content":"ApiDocComment \n Represents a documentation comment attached to source code \nApiDocComment.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nApiDocComment.Notes \nNotes \nApiDocComment.Parameters \nParameters \nApiDocComment.Exceptions \nExceptions \nApiDocComment.Returns \nReturns \nApiDocComment.Summary \nSummary \nApiDocComment.Remarks \nRemarks \nApiDocComment.RawData \nRawData \nApiDocComment.Xml \nXml \nApiDocComment.Examples \nExamples","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#\u0060\u0060.ctor\u0060\u0060","title":"ApiDocComment.\u0060\u0060.ctor\u0060\u0060","content":"ApiDocComment.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#Notes","title":"ApiDocComment.Notes","content":"ApiDocComment.Notes \nNotes \n The notes sections of the comment","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#Parameters","title":"ApiDocComment.Parameters","content":"ApiDocComment.Parameters \nParameters \n The param sections of the comment","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#Exceptions","title":"ApiDocComment.Exceptions","content":"ApiDocComment.Exceptions \nExceptions \n The notes sections of the comment","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#Returns","title":"ApiDocComment.Returns","content":"ApiDocComment.Returns \nReturns \n The return sections of the comment","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#Summary","title":"ApiDocComment.Summary","content":"ApiDocComment.Summary \nSummary \n The summary for the comment","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#Remarks","title":"ApiDocComment.Remarks","content":"ApiDocComment.Remarks \nRemarks \n The remarks html for comment","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#RawData","title":"ApiDocComment.RawData","content":"ApiDocComment.RawData \nRawData \n The raw data of the comment","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#Xml","title":"ApiDocComment.Xml","content":"ApiDocComment.Xml \nXml \n The XElement for the XML doc if available","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoccomment.html#Examples","title":"ApiDocComment.Examples","content":"ApiDocComment.Examples \nExamples \n The examples sections of the comment","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html","title":"ApiDocEntity","content":"ApiDocEntity \n Represents a type definition integrated with its associated documentation \nApiDocEntity.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nApiDocEntity.OutputFile \nOutputFile \nApiDocEntity.Url \nUrl \nApiDocEntity.Assembly \nAssembly \nApiDocEntity.Constructors \nConstructors \nApiDocEntity.SourceLocation \nSourceLocation \nApiDocEntity.ActivePatterns \nActivePatterns \nApiDocEntity.Name \nName \nApiDocEntity.UrlBaseName \nUrlBaseName \nApiDocEntity.NestedEntities \nNestedEntities \nApiDocEntity.ObsoleteMessage \nObsoleteMessage \nApiDocEntity.Attributes \nAttributes \nApiDocEntity.AllInterfaces \nAllInterfaces \nApiDocEntity.ValuesAndFuncs \nValuesAndFuncs \nApiDocEntity.DelegateSignature \nDelegateSignature \nApiDocEntity.Exclude \nExclude \nApiDocEntity.TypeExtensions \nTypeExtensions \nApiDocEntity.RecordFields \nRecordFields \nApiDocEntity.BaseType \nBaseType \nApiDocEntity.StaticMembers \nStaticMembers \nApiDocEntity.Symbol \nSymbol \nApiDocEntity.Category \nCategory \nApiDocEntity.IsObsolete \nIsObsolete \nApiDocEntity.CategoryIndex \nCategoryIndex \nApiDocEntity.Comment \nComment \nApiDocEntity.InstanceMembers \nInstanceMembers \nApiDocEntity.UnionCases \nUnionCases \nApiDocEntity.Substitutions \nSubstitutions \nApiDocEntity.AbbreviatedType \nAbbreviatedType \nApiDocEntity.RequiresQualifiedAccess \nRequiresQualifiedAccess \nApiDocEntity.AllMembers \nAllMembers \nApiDocEntity.IsTypeDefinition \nIsTypeDefinition \nApiDocEntity.StaticParameters \nStaticParameters \nApiDocEntity.GetUrl \nGetUrl","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#\u0060\u0060.ctor\u0060\u0060","title":"ApiDocEntity.\u0060\u0060.ctor\u0060\u0060","content":"ApiDocEntity.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#OutputFile","title":"ApiDocEntity.OutputFile","content":"ApiDocEntity.OutputFile \nOutputFile \n The name of the file generated for this entity","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Url","title":"ApiDocEntity.Url","content":"ApiDocEntity.Url \nUrl \n The URL of the best link for the entity relative to \u0022reference\u0022 directory (without the http://site.io/reference)","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Assembly","title":"ApiDocEntity.Assembly","content":"ApiDocEntity.Assembly \nAssembly \n The name of the type\u0027s assembly","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Constructors","title":"ApiDocEntity.Constructors","content":"ApiDocEntity.Constructors \nConstructors \n The constuctorsof the type","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#SourceLocation","title":"ApiDocEntity.SourceLocation","content":"ApiDocEntity.SourceLocation \nSourceLocation \n The URL of the member\u0027s source location, if any","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#ActivePatterns","title":"ApiDocEntity.ActivePatterns","content":"ApiDocEntity.ActivePatterns \nActivePatterns \n Active patterns of the module","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Name","title":"ApiDocEntity.Name","content":"ApiDocEntity.Name \nName \n The name of the entity","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#UrlBaseName","title":"ApiDocEntity.UrlBaseName","content":"ApiDocEntity.UrlBaseName \nUrlBaseName \n The URL base name of the primary documentation for the entity  (without the http://site.io/reference)","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#NestedEntities","title":"ApiDocEntity.NestedEntities","content":"ApiDocEntity.NestedEntities \nNestedEntities \n All nested modules and types","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#ObsoleteMessage","title":"ApiDocEntity.ObsoleteMessage","content":"ApiDocEntity.ObsoleteMessage \nObsoleteMessage \n Returns the obsolete message, when this member is obsolete. When its not or no message was specified, an empty string is returned","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Attributes","title":"ApiDocEntity.Attributes","content":"ApiDocEntity.Attributes \nAttributes \n The declared attributes of the type","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#AllInterfaces","title":"ApiDocEntity.AllInterfaces","content":"ApiDocEntity.AllInterfaces \nAllInterfaces \n All interfaces of the type, formatted","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#ValuesAndFuncs","title":"ApiDocEntity.ValuesAndFuncs","content":"ApiDocEntity.ValuesAndFuncs \nValuesAndFuncs \n Values and functions of the module","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#DelegateSignature","title":"ApiDocEntity.DelegateSignature","content":"ApiDocEntity.DelegateSignature \nDelegateSignature \n If this is a delegate, then e formatted signature","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Exclude","title":"ApiDocEntity.Exclude","content":"ApiDocEntity.Exclude \nExclude \n The exclude flag","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#TypeExtensions","title":"ApiDocEntity.TypeExtensions","content":"ApiDocEntity.TypeExtensions \nTypeExtensions \n Type extensions of the module","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#RecordFields","title":"ApiDocEntity.RecordFields","content":"ApiDocEntity.RecordFields \nRecordFields \n The fields of a record type","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#BaseType","title":"ApiDocEntity.BaseType","content":"ApiDocEntity.BaseType \nBaseType \n The base type of the type, formatted","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#StaticMembers","title":"ApiDocEntity.StaticMembers","content":"ApiDocEntity.StaticMembers \nStaticMembers \n The static members of the type","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Symbol","title":"ApiDocEntity.Symbol","content":"ApiDocEntity.Symbol \nSymbol \n The F# compiler symbol for the type definition","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Category","title":"ApiDocEntity.Category","content":"ApiDocEntity.Category \nCategory \n The category of the type","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#IsObsolete","title":"ApiDocEntity.IsObsolete","content":"ApiDocEntity.IsObsolete \nIsObsolete \n Gets a value indicating whether this member is obsolete","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#CategoryIndex","title":"ApiDocEntity.CategoryIndex","content":"ApiDocEntity.CategoryIndex \nCategoryIndex \n The category index of the type","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Comment","title":"ApiDocEntity.Comment","content":"ApiDocEntity.Comment \nComment \n The attached comment","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#InstanceMembers","title":"ApiDocEntity.InstanceMembers","content":"ApiDocEntity.InstanceMembers \nInstanceMembers \n The instance members of the type","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#UnionCases","title":"ApiDocEntity.UnionCases","content":"ApiDocEntity.UnionCases \nUnionCases \n The cases of a union type","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#Substitutions","title":"ApiDocEntity.Substitutions","content":"ApiDocEntity.Substitutions \nSubstitutions \n The substitution parameters active for generating thist content","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#AbbreviatedType","title":"ApiDocEntity.AbbreviatedType","content":"ApiDocEntity.AbbreviatedType \nAbbreviatedType \n If this is a type abbreviation, then the abbreviated type","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#RequiresQualifiedAccess","title":"ApiDocEntity.RequiresQualifiedAccess","content":"ApiDocEntity.RequiresQualifiedAccess \nRequiresQualifiedAccess \n Does the module have the RequiresQualifiedAccess attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#AllMembers","title":"ApiDocEntity.AllMembers","content":"ApiDocEntity.AllMembers \nAllMembers \n All members of the type","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#IsTypeDefinition","title":"ApiDocEntity.IsTypeDefinition","content":"ApiDocEntity.IsTypeDefinition \nIsTypeDefinition \n Indicates if the entity is a type definition","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#StaticParameters","title":"ApiDocEntity.StaticParameters","content":"ApiDocEntity.StaticParameters \nStaticParameters \n Static parameters","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentity.html#GetUrl","title":"ApiDocEntity.GetUrl","content":"ApiDocEntity.GetUrl \nGetUrl \n Compute the URL of the best link for the entity relative to \u0022reference\u0022 directory (without the http://site.io/reference)","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentityinfo.html","title":"ApiDocEntityInfo","content":"ApiDocEntityInfo \n High-level information about a module definition \nApiDocEntityInfo.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nApiDocEntityInfo.Entity \nEntity \nApiDocEntityInfo.ParentModule \nParentModule \nApiDocEntityInfo.Namespace \nNamespace \nApiDocEntityInfo.Collection \nCollection","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentityinfo.html#\u0060\u0060.ctor\u0060\u0060","title":"ApiDocEntityInfo.\u0060\u0060.ctor\u0060\u0060","content":"ApiDocEntityInfo.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentityinfo.html#Entity","title":"ApiDocEntityInfo.Entity","content":"ApiDocEntityInfo.Entity \nEntity \n The actual entity","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentityinfo.html#ParentModule","title":"ApiDocEntityInfo.ParentModule","content":"ApiDocEntityInfo.ParentModule \nParentModule \n The parent module, if any.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentityinfo.html#Namespace","title":"ApiDocEntityInfo.Namespace","content":"ApiDocEntityInfo.Namespace \nNamespace \n The namespace the entity belongs to","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocentityinfo.html#Collection","title":"ApiDocEntityInfo.Collection","content":"ApiDocEntityInfo.Collection \nCollection \n The collection of assemblies the entity belongs to","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocfileextensions.html","title":"ApiDocFileExtensions","content":"ApiDocFileExtensions \n \nApiDocFileExtensions.InFile \nInFile \nApiDocFileExtensions.InUrl \nInUrl","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocfileextensions.html#InFile","title":"ApiDocFileExtensions.InFile","content":"ApiDocFileExtensions.InFile \nInFile \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocfileextensions.html#InUrl","title":"ApiDocFileExtensions.InUrl","content":"ApiDocFileExtensions.InUrl \nInUrl \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidochtml.html","title":"ApiDocHtml","content":"ApiDocHtml \n Represents some HTML formatted by model generation \nApiDocHtml.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nApiDocHtml.HtmlText \nHtmlText \nApiDocHtml.Id \nId","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidochtml.html#\u0060\u0060.ctor\u0060\u0060","title":"ApiDocHtml.\u0060\u0060.ctor\u0060\u0060","content":"ApiDocHtml.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidochtml.html#HtmlText","title":"ApiDocHtml.HtmlText","content":"ApiDocHtml.HtmlText \nHtmlText \n Get the HTML text of the HTML section","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidochtml.html#Id","title":"ApiDocHtml.Id","content":"ApiDocHtml.Id \nId \n Get the Id of the element when rendered to html, if any","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html","title":"ApiDocInput","content":"ApiDocInput \n Represents an input assembly for API doc generation \nApiDocInput.FromFile \nFromFile \nApiDocInput.Path \nPath \nApiDocInput.XmlFile \nXmlFile \nApiDocInput.SourceFolder \nSourceFolder \nApiDocInput.SourceRepo \nSourceRepo \nApiDocInput.Substitutions \nSubstitutions \nApiDocInput.MarkdownComments \nMarkdownComments \nApiDocInput.Warn \nWarn \nApiDocInput.PublicOnly \nPublicOnly","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#FromFile","title":"ApiDocInput.FromFile","content":"ApiDocInput.FromFile \nFromFile \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#Path","title":"ApiDocInput.Path","content":"ApiDocInput.Path \nPath \n The path to the assembly","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#XmlFile","title":"ApiDocInput.XmlFile","content":"ApiDocInput.XmlFile \nXmlFile \n Override the default XML file (normally assumed to live alongside)","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#SourceFolder","title":"ApiDocInput.SourceFolder","content":"ApiDocInput.SourceFolder \nSourceFolder \n The compile-time source folder","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#SourceRepo","title":"ApiDocInput.SourceRepo","content":"ApiDocInput.SourceRepo \nSourceRepo \n The URL the the source repo where the source code lives","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#Substitutions","title":"ApiDocInput.Substitutions","content":"ApiDocInput.Substitutions \nSubstitutions \n The substitutionss active for this input. If specified these\n are used instead of the overall substitutions.  This allows different parameters (e.g.\n different authors) for each assembly in a collection.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#MarkdownComments","title":"ApiDocInput.MarkdownComments","content":"ApiDocInput.MarkdownComments \nMarkdownComments \n Whether the input uses markdown comments","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#Warn","title":"ApiDocInput.Warn","content":"ApiDocInput.Warn \nWarn \n Whether doc processing should warn on missing comments","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocinput.html#PublicOnly","title":"ApiDocInput.PublicOnly","content":"ApiDocInput.PublicOnly \nPublicOnly \n Whether to generate only public things","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html","title":"ApiDocMember","content":"ApiDocMember \n Represents an method, property, constructor, function or value, record field, union case or static parameter\n integrated with its associated documentation. Includes extension members. \nApiDocMember.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nApiDocMember.Url \nUrl \nApiDocMember.SourceLocation \nSourceLocation \nApiDocMember.Name \nName \nApiDocMember.Parameters \nParameters \nApiDocMember.UrlBaseName \nUrlBaseName \nApiDocMember.ObsoleteMessage \nObsoleteMessage \nApiDocMember.Attributes \nAttributes \nApiDocMember.CustomOperationName \nCustomOperationName \nApiDocMember.Details \nDetails \nApiDocMember.CompiledName \nCompiledName \nApiDocMember.UsageHtml \nUsageHtml \nApiDocMember.Exclude \nExclude \nApiDocMember.Kind \nKind \nApiDocMember.Modifiers \nModifiers \nApiDocMember.ReturnInfo \nReturnInfo \nApiDocMember.TypeArguments \nTypeArguments \nApiDocMember.FormatModifiers \nFormatModifiers \nApiDocMember.Symbol \nSymbol \nApiDocMember.Category \nCategory \nApiDocMember.ExtendedType \nExtendedType \nApiDocMember.FormatTypeArguments \nFormatTypeArguments \nApiDocMember.IsObsolete \nIsObsolete \nApiDocMember.CategoryIndex \nCategoryIndex \nApiDocMember.Comment \nComment \nApiDocMember.IsRequireQualifiedAccessAttribute \nIsRequireQualifiedAccessAttribute \nApiDocMember.FormatCompiledName \nFormatCompiledName \nApiDocMember.GetUrl \nGetUrl","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#\u0060\u0060.ctor\u0060\u0060","title":"ApiDocMember.\u0060\u0060.ctor\u0060\u0060","content":"ApiDocMember.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Url","title":"ApiDocMember.Url","content":"ApiDocMember.Url \nUrl \n The URL of the best link documentation for the item relative to \u0022reference\u0022 directory (without the http://site.io/reference)","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#SourceLocation","title":"ApiDocMember.SourceLocation","content":"ApiDocMember.SourceLocation \nSourceLocation \n The URL of the member\u0027s source location, if any","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Name","title":"ApiDocMember.Name","content":"ApiDocMember.Name \nName \n Name of the member","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Parameters","title":"ApiDocMember.Parameters","content":"ApiDocMember.Parameters \nParameters \n The member\u0027s parameters and associated documentation","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#UrlBaseName","title":"ApiDocMember.UrlBaseName","content":"ApiDocMember.UrlBaseName \nUrlBaseName \n The URL base name of the best link documentation for the item (without the http://site.io/reference)","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#ObsoleteMessage","title":"ApiDocMember.ObsoleteMessage","content":"ApiDocMember.ObsoleteMessage \nObsoleteMessage \n Returns the obsolete message, when this member is obsolete. When its not or no message was specified, an empty string is returned","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Attributes","title":"ApiDocMember.Attributes","content":"ApiDocMember.Attributes \nAttributes \n The declared attributes of the member","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#CustomOperationName","title":"ApiDocMember.CustomOperationName","content":"ApiDocMember.CustomOperationName \nCustomOperationName \n Returns the custom operation name, when this attribute is the CustomOperationAttribute.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Details","title":"ApiDocMember.Details","content":"ApiDocMember.Details \nDetails \n The members details","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#CompiledName","title":"ApiDocMember.CompiledName","content":"ApiDocMember.CompiledName \nCompiledName \n The member\u0027s compiled name, if any","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#UsageHtml","title":"ApiDocMember.UsageHtml","content":"ApiDocMember.UsageHtml \nUsageHtml \n The usage section in a typical tooltip","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Exclude","title":"ApiDocMember.Exclude","content":"ApiDocMember.Exclude \nExclude \n The exclude flag","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Kind","title":"ApiDocMember.Kind","content":"ApiDocMember.Kind \nKind \n The kind of the member","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Modifiers","title":"ApiDocMember.Modifiers","content":"ApiDocMember.Modifiers \nModifiers \n The member\u0027s modifiers","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#ReturnInfo","title":"ApiDocMember.ReturnInfo","content":"ApiDocMember.ReturnInfo \nReturnInfo \n The return section in a typical tooltip","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#TypeArguments","title":"ApiDocMember.TypeArguments","content":"ApiDocMember.TypeArguments \nTypeArguments \n The member\u0027s type arguments","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#FormatModifiers","title":"ApiDocMember.FormatModifiers","content":"ApiDocMember.FormatModifiers \nFormatModifiers \n Formats modifiers","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Symbol","title":"ApiDocMember.Symbol","content":"ApiDocMember.Symbol \nSymbol \n The symbol this member is related to","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Category","title":"ApiDocMember.Category","content":"ApiDocMember.Category \nCategory \n The category","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#ExtendedType","title":"ApiDocMember.ExtendedType","content":"ApiDocMember.ExtendedType \nExtendedType \n The type extended by an extension member, if any","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#FormatTypeArguments","title":"ApiDocMember.FormatTypeArguments","content":"ApiDocMember.FormatTypeArguments \nFormatTypeArguments \n Formats type arguments","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#IsObsolete","title":"ApiDocMember.IsObsolete","content":"ApiDocMember.IsObsolete \nIsObsolete \n Gets a value indicating whether this member is obsolete","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#CategoryIndex","title":"ApiDocMember.CategoryIndex","content":"ApiDocMember.CategoryIndex \nCategoryIndex \n The category index","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#Comment","title":"ApiDocMember.Comment","content":"ApiDocMember.Comment \nComment \n The attached comment","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#IsRequireQualifiedAccessAttribute","title":"ApiDocMember.IsRequireQualifiedAccessAttribute","content":"ApiDocMember.IsRequireQualifiedAccessAttribute \nIsRequireQualifiedAccessAttribute \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#FormatCompiledName","title":"ApiDocMember.FormatCompiledName","content":"ApiDocMember.FormatCompiledName \nFormatCompiledName \n Formats the compiled name","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmember.html#GetUrl","title":"ApiDocMember.GetUrl","content":"ApiDocMember.GetUrl \nGetUrl \n The URL of the best link documentation for the item relative to \u0022reference\u0022 directory (without the http://site.io/reference)","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberdetails.html","title":"ApiDocMemberDetails","content":"ApiDocMemberDetails \n \nApiDocMemberDetails.ApiDocMemberDetails \nApiDocMemberDetails","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberdetails.html#ApiDocMemberDetails","title":"ApiDocMemberDetails.ApiDocMemberDetails","content":"ApiDocMemberDetails.ApiDocMemberDetails \nApiDocMemberDetails \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html","title":"ApiDocMemberKind","content":"ApiDocMemberKind \n Represents the kind of member \nApiDocMemberKind.ValueOrFunction \nValueOrFunction \nApiDocMemberKind.TypeExtension \nTypeExtension \nApiDocMemberKind.ActivePattern \nActivePattern \nApiDocMemberKind.Constructor \nConstructor \nApiDocMemberKind.InstanceMember \nInstanceMember \nApiDocMemberKind.StaticMember \nStaticMember \nApiDocMemberKind.UnionCase \nUnionCase \nApiDocMemberKind.RecordField \nRecordField \nApiDocMemberKind.StaticParameter \nStaticParameter","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#ValueOrFunction","title":"ApiDocMemberKind.ValueOrFunction","content":"ApiDocMemberKind.ValueOrFunction \nValueOrFunction \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#TypeExtension","title":"ApiDocMemberKind.TypeExtension","content":"ApiDocMemberKind.TypeExtension \nTypeExtension \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#ActivePattern","title":"ApiDocMemberKind.ActivePattern","content":"ApiDocMemberKind.ActivePattern \nActivePattern \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#Constructor","title":"ApiDocMemberKind.Constructor","content":"ApiDocMemberKind.Constructor \nConstructor \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#InstanceMember","title":"ApiDocMemberKind.InstanceMember","content":"ApiDocMemberKind.InstanceMember \nInstanceMember \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#StaticMember","title":"ApiDocMemberKind.StaticMember","content":"ApiDocMemberKind.StaticMember \nStaticMember \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#UnionCase","title":"ApiDocMemberKind.UnionCase","content":"ApiDocMemberKind.UnionCase \nUnionCase \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#RecordField","title":"ApiDocMemberKind.RecordField","content":"ApiDocMemberKind.RecordField \nRecordField \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmemberkind.html#StaticParameter","title":"ApiDocMemberKind.StaticParameter","content":"ApiDocMemberKind.StaticParameter \nStaticParameter \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html","title":"ApiDocModel","content":"ApiDocModel \n Represents a set of assemblies integrated with their associated documentation \nApiDocModel.IndexFileUrl \nIndexFileUrl \nApiDocModel.IndexOutputFile \nIndexOutputFile \nApiDocModel.Qualify \nQualify \nApiDocModel.FileExtensions \nFileExtensions \nApiDocModel.EntityInfos \nEntityInfos \nApiDocModel.Collection \nCollection \nApiDocModel.Root \nRoot \nApiDocModel.Substitutions \nSubstitutions","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#IndexFileUrl","title":"ApiDocModel.IndexFileUrl","content":"ApiDocModel.IndexFileUrl \nIndexFileUrl \n URL of the \u0027index.html\u0027 for the reference documentation for the model","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#IndexOutputFile","title":"ApiDocModel.IndexOutputFile","content":"ApiDocModel.IndexOutputFile \nIndexOutputFile \n URL of the \u0027index.html\u0027 for the reference documentation for the model","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#Qualify","title":"ApiDocModel.Qualify","content":"ApiDocModel.Qualify \nQualify \n Indicates if each collection is being qualified by its collection name, e.g. \u0027reference/FSharp.Core\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#FileExtensions","title":"ApiDocModel.FileExtensions","content":"ApiDocModel.FileExtensions \nFileExtensions \n Specifies file extensions to use in files and URLs","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#EntityInfos","title":"ApiDocModel.EntityInfos","content":"ApiDocModel.EntityInfos \nEntityInfos \n The full list of all entities","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#Collection","title":"ApiDocModel.Collection","content":"ApiDocModel.Collection \nCollection \n The full list of all entities","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#Root","title":"ApiDocModel.Root","content":"ApiDocModel.Root \nRoot \n The root URL for the entire generation, normally \u0027/\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocmodel.html#Substitutions","title":"ApiDocModel.Substitutions","content":"ApiDocModel.Substitutions \nSubstitutions \n The substitutions.  Different substitutions can also be used for each specific input","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html","title":"ApiDocNamespace","content":"ApiDocNamespace \n Represents a namespace integrated with its associated documentation \nApiDocNamespace.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nApiDocNamespace.OutputFile \nOutputFile \nApiDocNamespace.Url \nUrl \nApiDocNamespace.Name \nName \nApiDocNamespace.UrlBaseName \nUrlBaseName \nApiDocNamespace.UrlHash \nUrlHash \nApiDocNamespace.Entities \nEntities \nApiDocNamespace.NamespaceDocs \nNamespaceDocs \nApiDocNamespace.Substitutions \nSubstitutions","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#\u0060\u0060.ctor\u0060\u0060","title":"ApiDocNamespace.\u0060\u0060.ctor\u0060\u0060","content":"ApiDocNamespace.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#OutputFile","title":"ApiDocNamespace.OutputFile","content":"ApiDocNamespace.OutputFile \nOutputFile \n The name of the file generated for this entity","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#Url","title":"ApiDocNamespace.Url","content":"ApiDocNamespace.Url \nUrl \n The URL of the best link documentation for the item (without the http://site.io/reference)","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#Name","title":"ApiDocNamespace.Name","content":"ApiDocNamespace.Name \nName \n The name of the namespace","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#UrlBaseName","title":"ApiDocNamespace.UrlBaseName","content":"ApiDocNamespace.UrlBaseName \nUrlBaseName \n The base name for the generated file","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#UrlHash","title":"ApiDocNamespace.UrlHash","content":"ApiDocNamespace.UrlHash \nUrlHash \n The hash label for the URL with the overall namespaces file","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#Entities","title":"ApiDocNamespace.Entities","content":"ApiDocNamespace.Entities \nEntities \n All modules in the namespace","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#NamespaceDocs","title":"ApiDocNamespace.NamespaceDocs","content":"ApiDocNamespace.NamespaceDocs \nNamespaceDocs \n The summary text for the namespace","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocnamespace.html#Substitutions","title":"ApiDocNamespace.Substitutions","content":"ApiDocNamespace.Substitutions \nSubstitutions \n The substitution substitutions active for generating thist content","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidoctype.html","title":"ApiDocType","content":"ApiDocType \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocs.html","title":"ApiDocs","content":"ApiDocs \n\n  This type exposes the functionality for producing documentation model from \u0060dll\u0060 files with associated \u0060xml\u0060 files\n  generated by the F# or C# compiler. To generate documentation model, use one of the overloades of the \u0060Generate\u0060 method.\n  \nApiDocs.GenerateHtml \nGenerateHtml \nApiDocs.GenerateMarkdown \nGenerateMarkdown \nApiDocs.GenerateModel \nGenerateModel \nApiDocs.SearchIndexEntriesForModel \nSearchIndexEntriesForModel","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocs.html#GenerateHtml","title":"ApiDocs.GenerateHtml","content":"ApiDocs.GenerateHtml \nGenerateHtml \n\n Generates default HTML pages for the assemblies specified by the \u0060inputs\u0060 parameter\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocs.html#GenerateMarkdown","title":"ApiDocs.GenerateMarkdown","content":"ApiDocs.GenerateMarkdown \nGenerateMarkdown \n\n Generates default Markdown pages for the assemblies specified by the \u0060inputs\u0060 parameter\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocs.html#GenerateModel","title":"ApiDocs.GenerateModel","content":"ApiDocs.GenerateModel \nGenerateModel \n\n Generates a documentation model for the assemblies specified by the \u0060inputs\u0060 parameter\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocs.html#SearchIndexEntriesForModel","title":"ApiDocs.SearchIndexEntriesForModel","content":"ApiDocs.SearchIndexEntriesForModel \nSearchIndexEntriesForModel \n\n Generates the search index from the given documentation model\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocssearchindexentry.html","title":"ApiDocsSearchIndexEntry","content":"ApiDocsSearchIndexEntry \n Represents an entry suitable for constructing a Lunr index \nApiDocsSearchIndexEntry.uri \nuri \nApiDocsSearchIndexEntry.title \ntitle \nApiDocsSearchIndexEntry.content \ncontent \nApiDocsSearchIndexEntry.headings \nheadings \nApiDocsSearchIndexEntry.type \ntype","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocssearchindexentry.html#uri","title":"ApiDocsSearchIndexEntry.uri","content":"ApiDocsSearchIndexEntry.uri \nuri \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocssearchindexentry.html#title","title":"ApiDocsSearchIndexEntry.title","content":"ApiDocsSearchIndexEntry.title \ntitle \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocssearchindexentry.html#content","title":"ApiDocsSearchIndexEntry.content","content":"ApiDocsSearchIndexEntry.content \ncontent \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocssearchindexentry.html#headings","title":"ApiDocsSearchIndexEntry.headings","content":"ApiDocsSearchIndexEntry.headings \nheadings \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-apidocssearchindexentry.html#type","title":"ApiDocsSearchIndexEntry.type","content":"ApiDocsSearchIndexEntry.type \ntype \n apiDocs or content","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-attribute.html","title":"Attribute","content":"Attribute \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-doccomment.html","title":"DocComment","content":"DocComment \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-member.html","title":"Member","content":"Member \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-memberkind.html","title":"MemberKind","content":"MemberKind \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-module.html","title":"Module","content":"Module \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-moduleinfo.html","title":"ModuleInfo","content":"ModuleInfo \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-type.html","title":"Type","content":"Type \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-apidocs-typeinfo.html","title":"TypeInfo","content":"TypeInfo \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-clikeformat.html","title":"CLikeFormat","content":"CLikeFormat \n\n             Provides a base class for formatting languages similar to C.\n              \nCLikeFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCLikeFormat.CommentRegEx \nCommentRegEx \nCLikeFormat.StringRegEx \nStringRegEx","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-clikeformat.html#\u0060\u0060.ctor\u0060\u0060","title":"CLikeFormat.\u0060\u0060.ctor\u0060\u0060","content":"CLikeFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-clikeformat.html#CommentRegEx","title":"CLikeFormat.CommentRegEx","content":"CLikeFormat.CommentRegEx \nCommentRegEx \n            Regular expression string to match single line and multi-line \n            comments (// and /* */).","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-clikeformat.html#StringRegEx","title":"CLikeFormat.StringRegEx","content":"CLikeFormat.StringRegEx \nStringRegEx \n            Regular expression string to match string and character literals. ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-cplusplusformat.html","title":"CPlusPlusFormat","content":"CPlusPlusFormat \n            Generates color-coded HTML 4.01 from C\u002B\u002B source code. \nCPlusPlusFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCPlusPlusFormat.Keywords \nKeywords \nCPlusPlusFormat.Preprocessors \nPreprocessors","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-cplusplusformat.html#\u0060\u0060.ctor\u0060\u0060","title":"CPlusPlusFormat.\u0060\u0060.ctor\u0060\u0060","content":"CPlusPlusFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-cplusplusformat.html#Keywords","title":"CPlusPlusFormat.Keywords","content":"CPlusPlusFormat.Keywords \nKeywords \n            The list of C\u002B\u002B keywords.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-cplusplusformat.html#Preprocessors","title":"CPlusPlusFormat.Preprocessors","content":"CPlusPlusFormat.Preprocessors \nPreprocessors \n            The list of C\u002B\u002B preprocessors.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-csharpformat.html","title":"CSharpFormat","content":"CSharpFormat \n            Generates color-coded HTML 4.01 from C# source code. \nCSharpFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCSharpFormat.Keywords \nKeywords \nCSharpFormat.Preprocessors \nPreprocessors \nCSharpFormat.Operators \nOperators","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-csharpformat.html#\u0060\u0060.ctor\u0060\u0060","title":"CSharpFormat.\u0060\u0060.ctor\u0060\u0060","content":"CSharpFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-csharpformat.html#Keywords","title":"CSharpFormat.Keywords","content":"CSharpFormat.Keywords \nKeywords \n            The list of C# keywords.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-csharpformat.html#Preprocessors","title":"CSharpFormat.Preprocessors","content":"CSharpFormat.Preprocessors \nPreprocessors \n            The list of C# preprocessors.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-csharpformat.html#Operators","title":"CSharpFormat.Operators","content":"CSharpFormat.Operators \nOperators \n            TBD","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html","title":"CodeFormat","content":"CodeFormat \n            Provides a base class for formatting most programming languages. \nCodeFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCodeFormat.Keywords \nKeywords \nCodeFormat.Operators \nOperators \nCodeFormat.Preprocessors \nPreprocessors \nCodeFormat.StringRegEx \nStringRegEx \nCodeFormat.CommentRegEx \nCommentRegEx \nCodeFormat.NumberRegEx \nNumberRegEx \nCodeFormat.CaseSensitive \nCaseSensitive","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#\u0060\u0060.ctor\u0060\u0060","title":"CodeFormat.\u0060\u0060.ctor\u0060\u0060","content":"CodeFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n\u003Cpre\u003E\u003C/pre\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#Keywords","title":"CodeFormat.Keywords","content":"CodeFormat.Keywords \nKeywords \n\n            Must be overridden to provide a list of keywords defined in \n            each language.\n             \n\n            Keywords must be separated with spaces.\n            ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#Operators","title":"CodeFormat.Operators","content":"CodeFormat.Operators \nOperators \n\n            Must be overridden to provide a list of operators defined in \n            each language.\n             \n\n            Operators must be separated with spaces.\n            ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#Preprocessors","title":"CodeFormat.Preprocessors","content":"CodeFormat.Preprocessors \nPreprocessors \n\n            Can be overridden to provide a list of preprocessors defined in \n            each language.\n             \n\n            Preprocessors must be separated with spaces.\n            ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#StringRegEx","title":"CodeFormat.StringRegEx","content":"CodeFormat.StringRegEx \nStringRegEx \n            Must be overridden to provide a regular expression string\n            to match strings literals.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#CommentRegEx","title":"CodeFormat.CommentRegEx","content":"CodeFormat.CommentRegEx \nCommentRegEx \n            Must be overridden to provide a regular expression string\n            to match comments.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#NumberRegEx","title":"CodeFormat.NumberRegEx","content":"CodeFormat.NumberRegEx \nNumberRegEx \n            Can be overridden to provide a list of tokes to be recognized as numbers.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-codeformat.html#CaseSensitive","title":"CodeFormat.CaseSensitive","content":"CodeFormat.CaseSensitive \nCaseSensitive \n\n            Determines if the language is case sensitive.\n             \n\n            A case-insensitive language formatter must override this \n            property to return false.\n            ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-fsharpformat.html","title":"FSharpFormat","content":"FSharpFormat \n            Generates color-coded HTML 4.01 from F# source code. \nFSharpFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFSharpFormat.Operators \nOperators \nFSharpFormat.CommentRegEx \nCommentRegEx \nFSharpFormat.Keywords \nKeywords \nFSharpFormat.StringRegEx \nStringRegEx \nFSharpFormat.Preprocessors \nPreprocessors","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-fsharpformat.html#\u0060\u0060.ctor\u0060\u0060","title":"FSharpFormat.\u0060\u0060.ctor\u0060\u0060","content":"FSharpFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-fsharpformat.html#Operators","title":"FSharpFormat.Operators","content":"FSharpFormat.Operators \nOperators \n            TBD","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-fsharpformat.html#CommentRegEx","title":"FSharpFormat.CommentRegEx","content":"FSharpFormat.CommentRegEx \nCommentRegEx \n            Regular expression string to match single line and multi-line \n            comments (// and (* *)).","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-fsharpformat.html#Keywords","title":"FSharpFormat.Keywords","content":"FSharpFormat.Keywords \nKeywords \n            The list of F# keywords.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-fsharpformat.html#StringRegEx","title":"FSharpFormat.StringRegEx","content":"FSharpFormat.StringRegEx \nStringRegEx \n            Regular expression string to match string and character literals. ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-fsharpformat.html#Preprocessors","title":"FSharpFormat.Preprocessors","content":"FSharpFormat.Preprocessors \nPreprocessors \n            TBD","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-haskellformat.html","title":"HaskellFormat","content":"HaskellFormat \n            Generates color-coded HTML 4.01 from MSH (code name Monad) source code. \nHaskellFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nHaskellFormat.CommentRegEx \nCommentRegEx \nHaskellFormat.StringRegEx \nStringRegEx \nHaskellFormat.Keywords \nKeywords \nHaskellFormat.Preprocessors \nPreprocessors","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-haskellformat.html#\u0060\u0060.ctor\u0060\u0060","title":"HaskellFormat.\u0060\u0060.ctor\u0060\u0060","content":"HaskellFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-haskellformat.html#CommentRegEx","title":"HaskellFormat.CommentRegEx","content":"HaskellFormat.CommentRegEx \nCommentRegEx \n            Regular expression string to match single line comments (#).","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-haskellformat.html#StringRegEx","title":"HaskellFormat.StringRegEx","content":"HaskellFormat.StringRegEx \nStringRegEx \n            Regular expression string to match string and character literals. ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-haskellformat.html#Keywords","title":"HaskellFormat.Keywords","content":"HaskellFormat.Keywords \nKeywords \n            The list of MSH keywords.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-haskellformat.html#Preprocessors","title":"HaskellFormat.Preprocessors","content":"HaskellFormat.Preprocessors \nPreprocessors \n            Use preprocessors property to hilight operators.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-htmlformat.html","title":"HtmlFormat","content":"HtmlFormat \n\n            Generates color-coded HTML 4.01 from HTML/XML/ASPX source code.\n             \n\u003Cp class=\u0027fsdocs-para\u0027\u003E\n            This implementation assumes that code inside \u003Cscript\u003E blocks \n            is JavaScript, and code inside \u003C% %\u003E blocks is C#.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003E\n            The default tab width is set to 2 characters in this class.\u003C/p\u003E \nHtmlFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-htmlformat.html#\u0060\u0060.ctor\u0060\u0060","title":"HtmlFormat.\u0060\u0060.ctor\u0060\u0060","content":"HtmlFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n\u003Cpre\u003E\u003C/pre\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-javascriptformat.html","title":"JavaScriptFormat","content":"JavaScriptFormat \n            Generates color-coded HTML 4.01 from JavaSctript source code. \nJavaScriptFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nJavaScriptFormat.Keywords \nKeywords \nJavaScriptFormat.Preprocessors \nPreprocessors \nJavaScriptFormat.Operators \nOperators","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-javascriptformat.html#\u0060\u0060.ctor\u0060\u0060","title":"JavaScriptFormat.\u0060\u0060.ctor\u0060\u0060","content":"JavaScriptFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-javascriptformat.html#Keywords","title":"JavaScriptFormat.Keywords","content":"JavaScriptFormat.Keywords \nKeywords \n            The list of JavaScript keywords.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-javascriptformat.html#Preprocessors","title":"JavaScriptFormat.Preprocessors","content":"JavaScriptFormat.Preprocessors \nPreprocessors \n            Use the pre-processor color to mark directives that start with @.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-javascriptformat.html#Operators","title":"JavaScriptFormat.Operators","content":"JavaScriptFormat.Operators \nOperators \n            TBD","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-mshformat.html","title":"MshFormat","content":"MshFormat \n            Generates color-coded HTML 4.01 from MSH (code name Monad) source code. \nMshFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMshFormat.CommentRegEx \nCommentRegEx \nMshFormat.StringRegEx \nStringRegEx \nMshFormat.Keywords \nKeywords \nMshFormat.Preprocessors \nPreprocessors","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-mshformat.html#\u0060\u0060.ctor\u0060\u0060","title":"MshFormat.\u0060\u0060.ctor\u0060\u0060","content":"MshFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-mshformat.html#CommentRegEx","title":"MshFormat.CommentRegEx","content":"MshFormat.CommentRegEx \nCommentRegEx \n            Regular expression string to match single line comments (#).","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-mshformat.html#StringRegEx","title":"MshFormat.StringRegEx","content":"MshFormat.StringRegEx \nStringRegEx \n            Regular expression string to match string and character literals. ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-mshformat.html#Keywords","title":"MshFormat.Keywords","content":"MshFormat.Keywords \nKeywords \n            The list of MSH keywords.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-mshformat.html#Preprocessors","title":"MshFormat.Preprocessors","content":"MshFormat.Preprocessors \nPreprocessors \n            Use preprocessors property to hilight operators.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-paketformat.html","title":"PaketFormat","content":"PaketFormat \n            Generates color-coded Paket source code. \nPaketFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nPaketFormat.CommentRegEx \nCommentRegEx \nPaketFormat.Operators \nOperators \nPaketFormat.Keywords \nKeywords \nPaketFormat.NumberRegEx \nNumberRegEx","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-paketformat.html#\u0060\u0060.ctor\u0060\u0060","title":"PaketFormat.\u0060\u0060.ctor\u0060\u0060","content":"PaketFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n            TBD","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-paketformat.html#CommentRegEx","title":"PaketFormat.CommentRegEx","content":"PaketFormat.CommentRegEx \nCommentRegEx \n             Regular expression string to match single line and multi-line \n             comments (// and (* *)). Single line comments should have to have \n             a space after them to avoid color as comments URLs and paths. For example","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-paketformat.html#Operators","title":"PaketFormat.Operators","content":"PaketFormat.Operators \nOperators \n            Paket operators","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-paketformat.html#Keywords","title":"PaketFormat.Keywords","content":"PaketFormat.Keywords \nKeywords \n            Paket Keywords","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-paketformat.html#NumberRegEx","title":"PaketFormat.NumberRegEx","content":"PaketFormat.NumberRegEx \nNumberRegEx \n            Matches version numbers","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-phpformat.html","title":"PhpFormat","content":"PhpFormat \n            Generates color-coded HTML 4.01 from PHP source code. \nPhpFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nPhpFormat.StringRegEx \nStringRegEx \nPhpFormat.Keywords \nKeywords \nPhpFormat.Preprocessors \nPreprocessors","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-phpformat.html#\u0060\u0060.ctor\u0060\u0060","title":"PhpFormat.\u0060\u0060.ctor\u0060\u0060","content":"PhpFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-phpformat.html#StringRegEx","title":"PhpFormat.StringRegEx","content":"PhpFormat.StringRegEx \nStringRegEx \n            Regular expression string to match string and character literals. ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-phpformat.html#Keywords","title":"PhpFormat.Keywords","content":"PhpFormat.Keywords \nKeywords \n            The list of PHP keywords.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-phpformat.html#Preprocessors","title":"PhpFormat.Preprocessors","content":"PhpFormat.Preprocessors \nPreprocessors \n            The list of PHP preprocessors.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html","title":"SourceFormat","content":"SourceFormat \n\n            Provides a base implementation for all code formatters.\n             \n\u003Cp class=\u0027fsdocs-para\u0027\u003E\n            To display the formatted code on your web site, the web page must \n            refer to a stylesheet that defines the formatting for the different \n            CSS classes generated by CSharpFormat:\n            .csharpcode, pre, .rem, .kwrd, .str, .op, .preproc, .alt, .lnum.\n            \u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003E\n            Note that if you have multi-line comments in your source code\n            (like /* ... */), the \u0022line numbers\u0022 or \u0022alternate line background\u0022 \n            options will generate code that is not strictly HTML 4.01 compliant. \n            The code will still look good with IE5\u002B or Mozilla 0.8\u002B. \n            \u003C/p\u003E \nSourceFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nSourceFormat.FormatCode \nFormatCode \nSourceFormat.FormatCode \nFormatCode \nSourceFormat.FormatSubCode \nFormatSubCode \nSourceFormat.TabSpaces \nTabSpaces \nSourceFormat.LineNumbers \nLineNumbers \nSourceFormat.Alternate \nAlternate \nSourceFormat.EmbedStyleSheet \nEmbedStyleSheet \nSourceFormat.CodeRegex \nCodeRegex \nSourceFormat.GetCssStream \nGetCssStream \nSourceFormat.GetCssString \nGetCssString \nSourceFormat.EscapeHtml \nEscapeHtml","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#\u0060\u0060.ctor\u0060\u0060","title":"SourceFormat.\u0060\u0060.ctor\u0060\u0060","content":"SourceFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n\u003Cpre\u003E\u003C/pre\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#FormatCode","title":"SourceFormat.FormatCode","content":"SourceFormat.FormatCode \nFormatCode \n\n            Transforms a source code stream to HTML 4.01.\n            ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#FormatCode","title":"SourceFormat.FormatCode","content":"SourceFormat.FormatCode \nFormatCode \n\n            Transforms a source code string to HTML 4.01.\n            ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#FormatSubCode","title":"SourceFormat.FormatSubCode","content":"SourceFormat.FormatSubCode \nFormatSubCode \n            Allows formatting a part of the code in a different language,\n            for example a JavaScript block inside an HTML file.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#TabSpaces","title":"SourceFormat.TabSpaces","content":"SourceFormat.TabSpaces \nTabSpaces \n\n            Gets or sets the tabs width.\n            ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#LineNumbers","title":"SourceFormat.LineNumbers","content":"SourceFormat.LineNumbers \nLineNumbers \n\n            Enables or disables line numbers in output.\n            ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#Alternate","title":"SourceFormat.Alternate","content":"SourceFormat.Alternate \nAlternate \n\n            Enables or disables alternating line background.\n            ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#EmbedStyleSheet","title":"SourceFormat.EmbedStyleSheet","content":"SourceFormat.EmbedStyleSheet \nEmbedStyleSheet \n\n            Enables or disables the embedded CSS style sheet.\n            ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#CodeRegex","title":"SourceFormat.CodeRegex","content":"SourceFormat.CodeRegex \nCodeRegex \n            The regular expression used to capture language tokens.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#GetCssStream","title":"SourceFormat.GetCssStream","content":"SourceFormat.GetCssStream \nGetCssStream \n\n            Gets the CSS stylesheet as a stream.\n            ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#GetCssString","title":"SourceFormat.GetCssString","content":"SourceFormat.GetCssString \nGetCssString \n\n            Gets the CSS stylesheet as a string.\n            ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-sourceformat.html#EscapeHtml","title":"SourceFormat.EscapeHtml","content":"SourceFormat.EscapeHtml \nEscapeHtml \n            TBD","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-syntaxhighlighter.html","title":"SyntaxHighlighter","content":"SyntaxHighlighter \n            Summary description for SyntaxHighlighter \nSyntaxHighlighter.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nSyntaxHighlighter.FormatHtml \nFormatHtml \nSyntaxHighlighter.FormatCode \nFormatCode","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-syntaxhighlighter.html#\u0060\u0060.ctor\u0060\u0060","title":"SyntaxHighlighter.\u0060\u0060.ctor\u0060\u0060","content":"SyntaxHighlighter.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-syntaxhighlighter.html#FormatHtml","title":"SyntaxHighlighter.FormatHtml","content":"SyntaxHighlighter.FormatHtml \nFormatHtml \n            TBD","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-syntaxhighlighter.html#FormatCode","title":"SyntaxHighlighter.FormatCode","content":"SyntaxHighlighter.FormatCode \nFormatCode \n            TBD","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-tsqlformat.html","title":"TsqlFormat","content":"TsqlFormat \n            Generates color-coded T-SQL source code. \nTsqlFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nTsqlFormat.CommentRegEx \nCommentRegEx \nTsqlFormat.StringRegEx \nStringRegEx \nTsqlFormat.CaseSensitive \nCaseSensitive \nTsqlFormat.Keywords \nKeywords \nTsqlFormat.Preprocessors \nPreprocessors","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-tsqlformat.html#\u0060\u0060.ctor\u0060\u0060","title":"TsqlFormat.\u0060\u0060.ctor\u0060\u0060","content":"TsqlFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-tsqlformat.html#CommentRegEx","title":"TsqlFormat.CommentRegEx","content":"TsqlFormat.CommentRegEx \nCommentRegEx \n            Regular expression string to match single line \n            comments (--).","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-tsqlformat.html#StringRegEx","title":"TsqlFormat.StringRegEx","content":"TsqlFormat.StringRegEx \nStringRegEx \n            Regular expression string to match string literals. ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-tsqlformat.html#CaseSensitive","title":"TsqlFormat.CaseSensitive","content":"TsqlFormat.CaseSensitive \nCaseSensitive \n\n            Returns \u003Cb\u003Efalse\u003C/b\u003E, since T-SQL is not case sensitive.\n            ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-tsqlformat.html#Keywords","title":"TsqlFormat.Keywords","content":"TsqlFormat.Keywords \nKeywords \n            The list of T-SQL keywords.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-tsqlformat.html#Preprocessors","title":"TsqlFormat.Preprocessors","content":"TsqlFormat.Preprocessors \nPreprocessors \n            Use the pre-processor color to mark keywords that start with @@.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-typescriptformat.html","title":"TypeScriptFormat","content":"TypeScriptFormat \n            Generates color-coded HTML 4.01 from TypeScript source code. \nTypeScriptFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nTypeScriptFormat.Keywords \nKeywords","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-typescriptformat.html#\u0060\u0060.ctor\u0060\u0060","title":"TypeScriptFormat.\u0060\u0060.ctor\u0060\u0060","content":"TypeScriptFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-typescriptformat.html#Keywords","title":"TypeScriptFormat.Keywords","content":"TypeScriptFormat.Keywords \nKeywords \n            The list of TypeScript keywords extends the ones from JavaScript.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-visualbasicformat.html","title":"VisualBasicFormat","content":"VisualBasicFormat \n            Generates color-coded HTML 4.01 from Visual Basic source code. \nVisualBasicFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nVisualBasicFormat.CaseSensitive \nCaseSensitive \nVisualBasicFormat.CommentRegEx \nCommentRegEx \nVisualBasicFormat.StringRegEx \nStringRegEx \nVisualBasicFormat.Keywords \nKeywords \nVisualBasicFormat.Preprocessors \nPreprocessors","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-visualbasicformat.html#\u0060\u0060.ctor\u0060\u0060","title":"VisualBasicFormat.\u0060\u0060.ctor\u0060\u0060","content":"VisualBasicFormat.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-visualbasicformat.html#CaseSensitive","title":"VisualBasicFormat.CaseSensitive","content":"VisualBasicFormat.CaseSensitive \nCaseSensitive \n\n            Determines if the language is case sensitive.\n            ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-visualbasicformat.html#CommentRegEx","title":"VisualBasicFormat.CommentRegEx","content":"VisualBasicFormat.CommentRegEx \nCommentRegEx \n            Regular expression string to match comments (\u0027 and REM). ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-visualbasicformat.html#StringRegEx","title":"VisualBasicFormat.StringRegEx","content":"VisualBasicFormat.StringRegEx \nStringRegEx \n            Regular expression string to match string and character literals. ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-visualbasicformat.html#Keywords","title":"VisualBasicFormat.Keywords","content":"VisualBasicFormat.Keywords \nKeywords \n            The list of VB keywords.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-csharpformat-visualbasicformat.html#Preprocessors","title":"VisualBasicFormat.Preprocessors","content":"VisualBasicFormat.Preprocessors \nPreprocessors \n            The list of VB preprocessors.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformatter.html","title":"CodeFormatter","content":"CodeFormatter \n Uses agent to handle formatting requests \nCodeFormatter.processDoubleBackticks \nprocessDoubleBackticks \nCodeFormatter.categoryToTokenKind \ncategoryToTokenKind \nCodeFormatter.processSnippetLine \nprocessSnippetLine \nCodeFormatter.processSnippet \nprocessSnippet \nCodeFormatter.fsChecker \nfsChecker \nCodeFormatter.processSourceCode \nprocessSourceCode \nCodeFormatter.ParseAndCheckSource \nParseAndCheckSource","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformatter.html#processDoubleBackticks","title":"CodeFormatter.processDoubleBackticks","content":"CodeFormatter.processDoubleBackticks \nprocessDoubleBackticks \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformatter.html#categoryToTokenKind","title":"CodeFormatter.categoryToTokenKind","content":"CodeFormatter.categoryToTokenKind \ncategoryToTokenKind \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformatter.html#processSnippetLine","title":"CodeFormatter.processSnippetLine","content":"CodeFormatter.processSnippetLine \nprocessSnippetLine \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformatter.html#processSnippet","title":"CodeFormatter.processSnippet","content":"CodeFormatter.processSnippet \nprocessSnippet \n Process snippet","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformatter.html#fsChecker","title":"CodeFormatter.fsChecker","content":"CodeFormatter.fsChecker \nfsChecker \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformatter.html#processSourceCode","title":"CodeFormatter.processSourceCode","content":"CodeFormatter.processSourceCode \nprocessSourceCode \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformatter.html#ParseAndCheckSource","title":"CodeFormatter.ParseAndCheckSource","content":"CodeFormatter.ParseAndCheckSource \nParseAndCheckSource \n Parse, check and annotate the source code specified by \u0027source\u0027, assuming that it\n is located in a specified \u0027file\u0027. Optional arguments can be used\n to give compiler command line options and preprocessor definitions","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformat.html","title":"CodeFormat","content":"CodeFormat \n Exposes functionality of the F# code formatter with a nice interface \nCodeFormat.FormatFsx \nFormatFsx \nCodeFormat.FormatHtml \nFormatHtml \nCodeFormat.FormatLatex \nFormatLatex","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformat.html#FormatFsx","title":"CodeFormat.FormatFsx","content":"CodeFormat.FormatFsx \nFormatFsx \n Formats the .fsx snippets as iPython notebook using the default settings.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformat.html#FormatHtml","title":"CodeFormat.FormatHtml","content":"CodeFormat.FormatHtml \nFormatHtml \n Formats the .fsx snippets as HTML. The parameters specify prefix for HTML tags, whether lines should\n be added to outputs and whether errors should be printed.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-codeformat.html#FormatLatex","title":"CodeFormat.FormatLatex","content":"CodeFormat.FormatLatex \nFormatLatex \n Formats the .fsx snippets as LaTeX. The parameters specify prefix for LaTeX tags, whether lines should\n be added to outputs.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-errorkind.html","title":"ErrorKind","content":"ErrorKind \n Represents a kind of error reported from the F# compiler (warning or error) \nErrorKind.Error \nError \nErrorKind.Warning \nWarning","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-errorkind.html#Error","title":"ErrorKind.Error","content":"ErrorKind.Error \nError \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-errorkind.html#Warning","title":"ErrorKind.Warning","content":"ErrorKind.Warning \nWarning \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedcontent.html","title":"FormattedContent","content":"FormattedContent \n Represents formatted snippets \nFormattedContent.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFormattedContent.Snippets \nSnippets \nFormattedContent.ToolTip \nToolTip","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedcontent.html#\u0060\u0060.ctor\u0060\u0060","title":"FormattedContent.\u0060\u0060.ctor\u0060\u0060","content":"FormattedContent.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedcontent.html#Snippets","title":"FormattedContent.Snippets","content":"FormattedContent.Snippets \nSnippets \n Returns the processed snippets as an array","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedcontent.html#ToolTip","title":"FormattedContent.ToolTip","content":"FormattedContent.ToolTip \nToolTip \n Returns string with ToolTip elements for all the snippets","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedsnippet.html","title":"FormattedSnippet","content":"FormattedSnippet \n\n  Represents an individual formatted snippet with title as key\n  \nFormattedSnippet.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFormattedSnippet.Title \nTitle \nFormattedSnippet.Content \nContent \nFormattedSnippet.Key \nKey","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedsnippet.html#\u0060\u0060.ctor\u0060\u0060","title":"FormattedSnippet.\u0060\u0060.ctor\u0060\u0060","content":"FormattedSnippet.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedsnippet.html#Title","title":"FormattedSnippet.Title","content":"FormattedSnippet.Title \nTitle \n Returns the title of the snippet","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedsnippet.html#Content","title":"FormattedSnippet.Content","content":"FormattedSnippet.Content \nContent \n Returns the formatted content code for the snipet","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-formattedsnippet.html#Key","title":"FormattedSnippet.Key","content":"FormattedSnippet.Key \nKey \n Returns the key of the snippet","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-line.html","title":"Line","content":"Line \n Represents a line of source code as a list of TokenSpan values. This is\n a single case discriminated union with Line constructor. \nLine.Line \nLine","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-line.html#Line","title":"Line.Line","content":"Line.Line \nLine \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-snippet.html","title":"Snippet","content":"Snippet \n An F# snippet consists of a snippet title and a list of lines \nSnippet.Snippet \nSnippet","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-snippet.html#Snippet","title":"Snippet.Snippet","content":"Snippet.Snippet \nSnippet \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-sourceerror.html","title":"SourceError","content":"SourceError \n Error reported from the F# compiler consists of location (start and end),\n error kind and the message (wrapped in a single case discriminated union\n with constructor SourceError) \nSourceError.SourceError \nSourceError","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-sourceerror.html#SourceError","title":"SourceError.SourceError","content":"SourceError.SourceError \nSourceError \n Error reported from the F# compiler consists of location (start and end),\n error kind and the message","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html","title":"TokenKind","content":"TokenKind \n Classifies tokens reported by the FCS \nTokenKind.Keyword \nKeyword \nTokenKind.String \nString \nTokenKind.Comment \nComment \nTokenKind.Identifier \nIdentifier \nTokenKind.Inactive \nInactive \nTokenKind.Number \nNumber \nTokenKind.Operator \nOperator \nTokenKind.Punctuation \nPunctuation \nTokenKind.Preprocessor \nPreprocessor \nTokenKind.Module \nModule \nTokenKind.ReferenceType \nReferenceType \nTokenKind.ValueType \nValueType \nTokenKind.Interface \nInterface \nTokenKind.TypeArgument \nTypeArgument \nTokenKind.Property \nProperty \nTokenKind.Enumeration \nEnumeration \nTokenKind.UnionCase \nUnionCase \nTokenKind.Function \nFunction \nTokenKind.Pattern \nPattern \nTokenKind.MutableVar \nMutableVar \nTokenKind.Disposable \nDisposable \nTokenKind.Printf \nPrintf \nTokenKind.Escaped \nEscaped \nTokenKind.Default \nDefault","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Keyword","title":"TokenKind.Keyword","content":"TokenKind.Keyword \nKeyword \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#String","title":"TokenKind.String","content":"TokenKind.String \nString \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Comment","title":"TokenKind.Comment","content":"TokenKind.Comment \nComment \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Identifier","title":"TokenKind.Identifier","content":"TokenKind.Identifier \nIdentifier \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Inactive","title":"TokenKind.Inactive","content":"TokenKind.Inactive \nInactive \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Number","title":"TokenKind.Number","content":"TokenKind.Number \nNumber \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Operator","title":"TokenKind.Operator","content":"TokenKind.Operator \nOperator \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Punctuation","title":"TokenKind.Punctuation","content":"TokenKind.Punctuation \nPunctuation \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Preprocessor","title":"TokenKind.Preprocessor","content":"TokenKind.Preprocessor \nPreprocessor \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Module","title":"TokenKind.Module","content":"TokenKind.Module \nModule \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#ReferenceType","title":"TokenKind.ReferenceType","content":"TokenKind.ReferenceType \nReferenceType \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#ValueType","title":"TokenKind.ValueType","content":"TokenKind.ValueType \nValueType \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Interface","title":"TokenKind.Interface","content":"TokenKind.Interface \nInterface \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#TypeArgument","title":"TokenKind.TypeArgument","content":"TokenKind.TypeArgument \nTypeArgument \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Property","title":"TokenKind.Property","content":"TokenKind.Property \nProperty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Enumeration","title":"TokenKind.Enumeration","content":"TokenKind.Enumeration \nEnumeration \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#UnionCase","title":"TokenKind.UnionCase","content":"TokenKind.UnionCase \nUnionCase \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Function","title":"TokenKind.Function","content":"TokenKind.Function \nFunction \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Pattern","title":"TokenKind.Pattern","content":"TokenKind.Pattern \nPattern \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#MutableVar","title":"TokenKind.MutableVar","content":"TokenKind.MutableVar \nMutableVar \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Disposable","title":"TokenKind.Disposable","content":"TokenKind.Disposable \nDisposable \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Printf","title":"TokenKind.Printf","content":"TokenKind.Printf \nPrintf \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Escaped","title":"TokenKind.Escaped","content":"TokenKind.Escaped \nEscaped \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenkind.html#Default","title":"TokenKind.Default","content":"TokenKind.Default \nDefault \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspan.html","title":"TokenSpan","content":"TokenSpan \n A token in a parsed F# code snippet. Aside from standard tokens reported from\n the compiler (Token), this also includes Error (wrapping the underlined\n tokens), Omitted for the special [omit:...] tags and Output for the special [output:...] tag \nTokenSpan.Token \nToken \nTokenSpan.Error \nError \nTokenSpan.Omitted \nOmitted \nTokenSpan.Output \nOutput","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspan.html#Token","title":"TokenSpan.Token","content":"TokenSpan.Token \nToken \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspan.html#Error","title":"TokenSpan.Error","content":"TokenSpan.Error \nError \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspan.html#Omitted","title":"TokenSpan.Omitted","content":"TokenSpan.Omitted \nOmitted \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspan.html#Output","title":"TokenSpan.Output","content":"TokenSpan.Output \nOutput \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspans.html","title":"TokenSpans","content":"TokenSpans \n A type alias representing a list of TokenSpan values \nTokenSpans.Item \nItem \nTokenSpans.IsEmpty \nIsEmpty \nTokenSpans.Tail \nTail \nTokenSpans.Head \nHead \nTokenSpans.Length \nLength \nTokenSpans.Empty \nEmpty","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspans.html#Item","title":"TokenSpans.Item","content":"TokenSpans.Item \nItem \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspans.html#IsEmpty","title":"TokenSpans.IsEmpty","content":"TokenSpans.IsEmpty \nIsEmpty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspans.html#Tail","title":"TokenSpans.Tail","content":"TokenSpans.Tail \nTail \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspans.html#Head","title":"TokenSpans.Head","content":"TokenSpans.Head \nHead \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspans.html#Length","title":"TokenSpans.Length","content":"TokenSpans.Length \nLength \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tokenspans.html#Empty","title":"TokenSpans.Empty","content":"TokenSpans.Empty \nEmpty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspan.html","title":"ToolTipSpan","content":"ToolTipSpan \n A tool tip span can be emphasized text, plain text Literal or a line brak \nToolTipSpan.Emphasis \nEmphasis \nToolTipSpan.Literal \nLiteral \nToolTipSpan.HardLineBreak \nHardLineBreak","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspan.html#Emphasis","title":"ToolTipSpan.Emphasis","content":"ToolTipSpan.Emphasis \nEmphasis \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspan.html#Literal","title":"ToolTipSpan.Literal","content":"ToolTipSpan.Literal \nLiteral \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspan.html#HardLineBreak","title":"ToolTipSpan.HardLineBreak","content":"ToolTipSpan.HardLineBreak \nHardLineBreak \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspans.html","title":"ToolTipSpans","content":"ToolTipSpans \n A tool tip consists of a list of items reported from the compiler \nToolTipSpans.Item \nItem \nToolTipSpans.IsEmpty \nIsEmpty \nToolTipSpans.Tail \nTail \nToolTipSpans.Head \nHead \nToolTipSpans.Length \nLength \nToolTipSpans.Empty \nEmpty","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspans.html#Item","title":"ToolTipSpans.Item","content":"ToolTipSpans.Item \nItem \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspans.html#IsEmpty","title":"ToolTipSpans.IsEmpty","content":"ToolTipSpans.IsEmpty \nIsEmpty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspans.html#Tail","title":"ToolTipSpans.Tail","content":"ToolTipSpans.Tail \nTail \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspans.html#Head","title":"ToolTipSpans.Head","content":"ToolTipSpans.Head \nHead \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspans.html#Length","title":"ToolTipSpans.Length","content":"ToolTipSpans.Length \nLength \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-codeformat-tooltipspans.html#Empty","title":"ToolTipSpans.Empty","content":"ToolTipSpans.Empty \nEmpty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-common-menu.html","title":"Menu","content":"Menu \n \nMenu.MenuItem \nMenuItem \nMenu.createMenu \ncreateMenu \nMenu.isTemplatingAvailable \nisTemplatingAvailable \nMenu.getLastWriteTimes \ngetLastWriteTimes","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-common-menu.html#createMenu","title":"Menu.createMenu","content":"Menu.createMenu \ncreateMenu \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-common-menu.html#isTemplatingAvailable","title":"Menu.isTemplatingAvailable","content":"Menu.isTemplatingAvailable \nisTemplatingAvailable \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-common-menu.html#getLastWriteTimes","title":"Menu.getLastWriteTimes","content":"Menu.getLastWriteTimes \ngetLastWriteTimes \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-common-menu-menuitem.html","title":"MenuItem","content":"MenuItem \n \nMenuItem.Link \nLink \nMenuItem.Content \nContent \nMenuItem.IsActive \nIsActive","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-common-menu-menuitem.html#Link","title":"MenuItem.Link","content":"MenuItem.Link \nLink \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-common-menu-menuitem.html#Content","title":"MenuItem.Content","content":"MenuItem.Content \nContent \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-common-menu-menuitem.html#IsActive","title":"MenuItem.IsActive","content":"MenuItem.IsActive \nIsActive \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-common-pagecontentlist.html","title":"PageContentList","content":"PageContentList \n \nPageContentList.EmptyContent \nEmptyContent \nPageContentList.mkPageContentMenu \nmkPageContentMenu","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-common-pagecontentlist.html#EmptyContent","title":"PageContentList.EmptyContent","content":"PageContentList.EmptyContent \nEmptyContent \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-common-pagecontentlist.html#mkPageContentMenu","title":"PageContentList.mkPageContentMenu","content":"PageContentList.mkPageContentMenu \nmkPageContentMenu \n We process the html to collect the table of content.\n We can\u0027t use the doc.MarkdownDocument because we cannot easily get the generated id values.\n It is safer to parse the html.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-markdownpatterns.html","title":"MarkdownPatterns","content":"MarkdownPatterns \n\n Provides active patterns for extracting \u003Ccode\u003ELiterateParagraph\u003C/code\u003E values from\n Markdown documents.\n  \nMarkdownPatterns.(|LiterateParagraph|_|) \n(|LiterateParagraph|_|)","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-markdownpatterns.html#(|LiterateParagraph|_|)","title":"MarkdownPatterns.(|LiterateParagraph|_|)","content":"MarkdownPatterns.(|LiterateParagraph|_|) \n(|LiterateParagraph|_|) \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-indextext.html","title":"IndexText","content":"IndexText \n \nIndexText.IndexText \nIndexText","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-indextext.html#IndexText","title":"IndexText.IndexText","content":"IndexText.IndexText \nIndexText \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html","title":"Literate","content":"Literate \n\n This type provides three simple methods for calling the literate programming tool.\n The \u003Ccode\u003EConvertMarkdownFile\u003C/code\u003E and \u003Ccode\u003EConvertScriptFile\u003C/code\u003E methods process a single Markdown document\n and F# script, respectively. The \u003Ccode\u003EConvertDirectory\u003C/code\u003E method handles an entire directory tree\n (looking for \u003Ccode\u003E*.fsx\u003C/code\u003E and \u003Ccode\u003E*.md\u003C/code\u003E files).\n  \nLiterate.ConvertMarkdownFile \nConvertMarkdownFile \nLiterate.ConvertScriptFile \nConvertScriptFile \nLiterate.ParseAndCheckScriptFile \nParseAndCheckScriptFile \nLiterate.ParseMarkdownFile \nParseMarkdownFile \nLiterate.ParseMarkdownString \nParseMarkdownString \nLiterate.ParsePynbString \nParsePynbString \nLiterate.ParseScriptString \nParseScriptString \nLiterate.ToFsx \nToFsx \nLiterate.ToHtml \nToHtml \nLiterate.ToLatex \nToLatex \nLiterate.ToPynb \nToPynb \nLiterate.WriteHtml \nWriteHtml \nLiterate.WriteLatex \nWriteLatex","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ConvertMarkdownFile","title":"Literate.ConvertMarkdownFile","content":"Literate.ConvertMarkdownFile \nConvertMarkdownFile \n Convert a markdown file into HTML or another output kind","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ConvertScriptFile","title":"Literate.ConvertScriptFile","content":"Literate.ConvertScriptFile \nConvertScriptFile \nConvert a script file into HTML or another output kind","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ParseAndCheckScriptFile","title":"Literate.ParseAndCheckScriptFile","content":"Literate.ParseAndCheckScriptFile \nParseAndCheckScriptFile \n Parse F# Script file to LiterateDocument","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ParseMarkdownFile","title":"Literate.ParseMarkdownFile","content":"Literate.ParseMarkdownFile \nParseMarkdownFile \n\n  Parse Markdown document to LiterateDocument\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ParseMarkdownString","title":"Literate.ParseMarkdownString","content":"Literate.ParseMarkdownString \nParseMarkdownString \n\n  Parse string as a markdown document\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ParsePynbString","title":"Literate.ParsePynbString","content":"Literate.ParsePynbString \nParsePynbString \n\n Parse pynb string as literate document\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ParseScriptString","title":"Literate.ParseScriptString","content":"Literate.ParseScriptString \nParseScriptString \n Parse string as F# Script to LiterateDocument","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ToFsx","title":"Literate.ToFsx","content":"Literate.ToFsx \nToFsx \n Formate the literate document as an .fsx script","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ToHtml","title":"Literate.ToHtml","content":"Literate.ToHtml \nToHtml \n Format the literate document as HTML without using a template","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ToLatex","title":"Literate.ToLatex","content":"Literate.ToLatex \nToLatex \n Format the literate document as Latex without using a template","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#ToPynb","title":"Literate.ToPynb","content":"Literate.ToPynb \nToPynb \n Formate the literate document as an iPython notebook","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#WriteHtml","title":"Literate.WriteHtml","content":"Literate.WriteHtml \nWriteHtml \n Write the literate document as HTML without using a template","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literate.html#WriteLatex","title":"Literate.WriteLatex","content":"Literate.WriteLatex \nWriteLatex \n Write the literate document as Latex without using a template","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodeoptions.html","title":"LiterateCodeOptions","content":"LiterateCodeOptions \n\n Additional properties of a literate code snippet, embedded in a\n \u003Ccode\u003ELiterateParagraph.LiterateCode\u003C/code\u003E. The properties specify how should\n a snippet be evaluated and formatted.\n  \nLiterateCodeOptions.Evaluate \nEvaluate \nLiterateCodeOptions.OutputName \nOutputName \nLiterateCodeOptions.ExecutionCount \nExecutionCount \nLiterateCodeOptions.Visibility \nVisibility","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodeoptions.html#Evaluate","title":"LiterateCodeOptions.Evaluate","content":"LiterateCodeOptions.Evaluate \nEvaluate \n\n Specifies whether the snippet is evalauted while processing\n Use (*** do-not-eval ***) command to set this to \u003Ccode\u003Efalse\u003C/code\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodeoptions.html#OutputName","title":"LiterateCodeOptions.OutputName","content":"LiterateCodeOptions.OutputName \nOutputName \n Specifies the name of the output produced by this snippet\n Use the (*** define-output:foo ***) command to set this value\n Other outputs are named cell1, cell2 etc.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodeoptions.html#ExecutionCount","title":"LiterateCodeOptions.ExecutionCount","content":"LiterateCodeOptions.ExecutionCount \nExecutionCount \n Indiciates the execution sequence number of the cell if it has been evaluated","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodeoptions.html#Visibility","title":"LiterateCodeOptions.Visibility","content":"LiterateCodeOptions.Visibility \nVisibility \n Specifies the visibility of the snippet in the generated HTML","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodevisibility.html","title":"LiterateCodeVisibility","content":"LiterateCodeVisibility \n Specifies visibility of a code snippet. \nLiterateCodeVisibility.VisibleCode \nVisibleCode \nLiterateCodeVisibility.HiddenCode \nHiddenCode \nLiterateCodeVisibility.NamedCode \nNamedCode","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodevisibility.html#VisibleCode","title":"LiterateCodeVisibility.VisibleCode","content":"LiterateCodeVisibility.VisibleCode \nVisibleCode \n Ordinary visible code","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodevisibility.html#HiddenCode","title":"LiterateCodeVisibility.HiddenCode","content":"LiterateCodeVisibility.HiddenCode \nHiddenCode \n Hidden snippet","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatecodevisibility.html#NamedCode","title":"LiterateCodeVisibility.NamedCode","content":"LiterateCodeVisibility.NamedCode \nNamedCode \n Named snippet with captured output","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html","title":"LiterateDocument","content":"LiterateDocument \n Representation of a literate document - the representation of Paragraphs\n uses an F# discriminated union type and so is best used from F#. \nLiterateDocument.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nLiterateDocument.With \nWith \nLiterateDocument.DefinedLinks \nDefinedLinks \nLiterateDocument.MarkdownDocument \nMarkdownDocument \nLiterateDocument.FormattedTips \nFormattedTips \nLiterateDocument.Diagnostics \nDiagnostics \nLiterateDocument.Paragraphs \nParagraphs \nLiterateDocument.Source \nSource \nLiterateDocument.RootInputFolder \nRootInputFolder \nLiterateDocument.SourceFile \nSourceFile","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#\u0060\u0060.ctor\u0060\u0060","title":"LiterateDocument.\u0060\u0060.ctor\u0060\u0060","content":"LiterateDocument.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#With","title":"LiterateDocument.With","content":"LiterateDocument.With \nWith \n Clone the document and change some of its properties","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#DefinedLinks","title":"LiterateDocument.DefinedLinks","content":"LiterateDocument.DefinedLinks \nDefinedLinks \n Returns a dictionary containing explicitly defined links","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#MarkdownDocument","title":"LiterateDocument.MarkdownDocument","content":"LiterateDocument.MarkdownDocument \nMarkdownDocument \n Return as markdown document, throwing away additional stuff","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#FormattedTips","title":"LiterateDocument.FormattedTips","content":"LiterateDocument.FormattedTips \nFormattedTips \n Formatted tool tips","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#Diagnostics","title":"LiterateDocument.Diagnostics","content":"LiterateDocument.Diagnostics \nDiagnostics \n Errors","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#Paragraphs","title":"LiterateDocument.Paragraphs","content":"LiterateDocument.Paragraphs \nParagraphs \n Returns a list of paragraphs in the document","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#Source","title":"LiterateDocument.Source","content":"LiterateDocument.Source \nSource \n Original document source code","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#RootInputFolder","title":"LiterateDocument.RootInputFolder","content":"LiterateDocument.RootInputFolder \nRootInputFolder \n Root for computing relative paths","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatedocument.html#SourceFile","title":"LiterateDocument.SourceFile","content":"LiterateDocument.SourceFile \nSourceFile \n Location where the file was loaded from","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html","title":"LiterateParagraph","content":"LiterateParagraph \n\n Extends \u003Ccode\u003EMarkdownParagrap\u003C/code\u003E using the \u003Ccode\u003EMarkdownEmbedParagraphs\u003C/code\u003E case with\n additional kinds of paragraphs that can appear in literate F# scripts\n (such as various special commands to embed output of a snippet etc.)\n  \nLiterateParagraph.ParagraphOptions \nParagraphOptions \nLiterateParagraph.CodeReference \nCodeReference \nLiterateParagraph.FsiOutputReference \nFsiOutputReference \nLiterateParagraph.FsiMergedOutputReference \nFsiMergedOutputReference \nLiterateParagraph.OutputReference \nOutputReference \nLiterateParagraph.ItValueReference \nItValueReference \nLiterateParagraph.ItRawReference \nItRawReference \nLiterateParagraph.ValueReference \nValueReference \nLiterateParagraph.LiterateCode \nLiterateCode \nLiterateParagraph.LanguageTaggedCode \nLanguageTaggedCode \nLiterateParagraph.RawBlock \nRawBlock","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#ParagraphOptions","title":"LiterateParagraph.ParagraphOptions","content":"LiterateParagraph.ParagraphOptions \nParagraphOptions \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#CodeReference","title":"LiterateParagraph.CodeReference","content":"LiterateParagraph.CodeReference \nCodeReference \n (*** include:foo ***) - Include formatted snippet from other part of the document here","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#FsiOutputReference","title":"LiterateParagraph.FsiOutputReference","content":"LiterateParagraph.FsiOutputReference \nFsiOutputReference \n (*** include-fsi-output ***) - Include output from previous snippet\n (*** include-fsi-output:foo ***) - Include output from a named snippet","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#FsiMergedOutputReference","title":"LiterateParagraph.FsiMergedOutputReference","content":"LiterateParagraph.FsiMergedOutputReference \nFsiMergedOutputReference \n (*** include-fsi-merged-output ***) - Include output from previous snippet\n (*** include-fsi-merged-output:foo ***) - Include output from a named snippet","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#OutputReference","title":"LiterateParagraph.OutputReference","content":"LiterateParagraph.OutputReference \nOutputReference \n (*** include-fsi-output ***) - Include F# Interactive output from previous snippet\n (*** include-fsi-output:foo ***) - Include F# Interactive from a named snippet","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#ItValueReference","title":"LiterateParagraph.ItValueReference","content":"LiterateParagraph.ItValueReference \nItValueReference \n (*** include-it ***) - Include \u0022it\u0022 value from the subsequent snippet here\n (*** include-it:foo ***) - Include \u0022it\u0022 value from a named snippet","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#ItRawReference","title":"LiterateParagraph.ItRawReference","content":"LiterateParagraph.ItRawReference \nItRawReference \n (*** include-it-raw ***) - Include \u0022it\u0022 value from the subsequent snippet here as raw text (Not formatted as fsi)\n (*** include-it-raw:foo ***) - Include \u0022it\u0022 value from a named snippet as raw text (Not formatted as fsi)","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#ValueReference","title":"LiterateParagraph.ValueReference","content":"LiterateParagraph.ValueReference \nValueReference \n (*** include-value:foo ***) - Include the formatting of a specified value here","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#LiterateCode","title":"LiterateParagraph.LiterateCode","content":"LiterateParagraph.LiterateCode \nLiterateCode \n Embedded literate code snippet. Consists of source lines and options","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#LanguageTaggedCode","title":"LiterateParagraph.LanguageTaggedCode","content":"LiterateParagraph.LanguageTaggedCode \nLanguageTaggedCode \n Ordinary formatted code snippet in non-F# language (tagged with language code)","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraph.html#RawBlock","title":"LiterateParagraph.RawBlock","content":"LiterateParagraph.RawBlock \nRawBlock \n Block simply emitted without any formatting equivalent to \u003Cpre\u003E tag in html","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraphoptions.html","title":"LiterateParagraphOptions","content":"LiterateParagraphOptions \n Specifies the options for a literate paragraph \nLiterateParagraphOptions.Condition \nCondition","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literateparagraphoptions.html#Condition","title":"LiterateParagraphOptions.Condition","content":"LiterateParagraphOptions.Condition \nCondition \n Specifies a conditional for inclusion of the snippet paragraph","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatesource.html","title":"LiterateSource","content":"LiterateSource \n Represents the source of a literate document. \nLiterateSource.Markdown \nMarkdown \nLiterateSource.Script \nScript","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatesource.html#Markdown","title":"LiterateSource.Markdown","content":"LiterateSource.Markdown \nMarkdown \n A markdown source","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-literatesource.html#Script","title":"LiterateSource.Script","content":"LiterateSource.Script \nScript \n A parsed F# script file consisting of snippets.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-outputkind.html","title":"OutputKind","content":"OutputKind \n Defines the possible output types from literate script (HTML, Latex, Pynb) \nOutputKind.Extension \nExtension \nOutputKind.Html \nHtml \nOutputKind.Latex \nLatex \nOutputKind.Pynb \nPynb \nOutputKind.Fsx \nFsx \nOutputKind.Markdown \nMarkdown","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-outputkind.html#Extension","title":"OutputKind.Extension","content":"OutputKind.Extension \nExtension \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-outputkind.html#Html","title":"OutputKind.Html","content":"OutputKind.Html \nHtml \n Requests HTML output","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-outputkind.html#Latex","title":"OutputKind.Latex","content":"OutputKind.Latex \nLatex \n Requests LaTeX output","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-outputkind.html#Pynb","title":"OutputKind.Pynb","content":"OutputKind.Pynb \nPynb \n Requests Notebook output","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-outputkind.html#Fsx","title":"OutputKind.Fsx","content":"OutputKind.Fsx \nFsx \n Requests F# Script output","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-outputkind.html#Markdown","title":"OutputKind.Markdown","content":"OutputKind.Markdown \nMarkdown \n Requests Markdown output","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsiembedkind.html","title":"FsiEmbedKind","content":"FsiEmbedKind \n\n   Represents a kind of thing that can be embedded\n  \nFsiEmbedKind.FsiOutput \nFsiOutput \nFsiEmbedKind.FsiMergedOutput \nFsiMergedOutput \nFsiEmbedKind.ConsoleOutput \nConsoleOutput \nFsiEmbedKind.ItValue \nItValue \nFsiEmbedKind.ItRaw \nItRaw \nFsiEmbedKind.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsiembedkind.html#FsiOutput","title":"FsiEmbedKind.FsiOutput","content":"FsiEmbedKind.FsiOutput \nFsiOutput \n The FSI output","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsiembedkind.html#FsiMergedOutput","title":"FsiEmbedKind.FsiMergedOutput","content":"FsiEmbedKind.FsiMergedOutput \nFsiMergedOutput \n The combined FSI output and console output","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsiembedkind.html#ConsoleOutput","title":"FsiEmbedKind.ConsoleOutput","content":"FsiEmbedKind.ConsoleOutput \nConsoleOutput \n The stdout from this part of the execution (not including FSI output)","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsiembedkind.html#ItValue","title":"FsiEmbedKind.ItValue","content":"FsiEmbedKind.ItValue \nItValue \n The \u0027it\u0027 value","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsiembedkind.html#ItRaw","title":"FsiEmbedKind.ItRaw","content":"FsiEmbedKind.ItRaw \nItRaw \n The \u0027it\u0027 value as raw text","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsiembedkind.html#Value","title":"FsiEmbedKind.Value","content":"FsiEmbedKind.Value \nValue \n A specific value","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationfailedinfo.html","title":"FsiEvaluationFailedInfo","content":"FsiEvaluationFailedInfo \n Record that is reported by the EvaluationFailed event when something\n goes wrong during evalutaiton of an expression \nFsiEvaluationFailedInfo.Text \nText \nFsiEvaluationFailedInfo.AsExpression \nAsExpression \nFsiEvaluationFailedInfo.File \nFile \nFsiEvaluationFailedInfo.Exception \nException \nFsiEvaluationFailedInfo.StdErr \nStdErr","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationfailedinfo.html#Text","title":"FsiEvaluationFailedInfo.Text","content":"FsiEvaluationFailedInfo.Text \nText \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationfailedinfo.html#AsExpression","title":"FsiEvaluationFailedInfo.AsExpression","content":"FsiEvaluationFailedInfo.AsExpression \nAsExpression \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationfailedinfo.html#File","title":"FsiEvaluationFailedInfo.File","content":"FsiEvaluationFailedInfo.File \nFile \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationfailedinfo.html#Exception","title":"FsiEvaluationFailedInfo.Exception","content":"FsiEvaluationFailedInfo.Exception \nException \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationfailedinfo.html#StdErr","title":"FsiEvaluationFailedInfo.StdErr","content":"FsiEvaluationFailedInfo.StdErr \nStdErr \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationresult.html","title":"FsiEvaluationResult","content":"FsiEvaluationResult \n Represents the result of evaluating an F# snippet. This contains\n the generated console output together with a result and its static type. \nFsiEvaluationResult.Output \nOutput \nFsiEvaluationResult.FsiOutput \nFsiOutput \nFsiEvaluationResult.FsiMergedOutput \nFsiMergedOutput \nFsiEvaluationResult.ItValue \nItValue \nFsiEvaluationResult.Result \nResult","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationresult.html#Output","title":"FsiEvaluationResult.Output","content":"FsiEvaluationResult.Output \nOutput \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationresult.html#FsiOutput","title":"FsiEvaluationResult.FsiOutput","content":"FsiEvaluationResult.FsiOutput \nFsiOutput \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationresult.html#FsiMergedOutput","title":"FsiEvaluationResult.FsiMergedOutput","content":"FsiEvaluationResult.FsiMergedOutput \nFsiMergedOutput \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationresult.html#ItValue","title":"FsiEvaluationResult.ItValue","content":"FsiEvaluationResult.ItValue \nItValue \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluationresult.html#Result","title":"FsiEvaluationResult.Result","content":"FsiEvaluationResult.Result \nResult \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluator.html","title":"FsiEvaluator","content":"FsiEvaluator \n A wrapper for F# interactive service that is used to evaluate inline snippets \nFsiEvaluator.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFsiEvaluator.RegisterTransformation \nRegisterTransformation \nFsiEvaluator.EvaluationFailed \nEvaluationFailed","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluator.html#\u0060\u0060.ctor\u0060\u0060","title":"FsiEvaluator.\u0060\u0060.ctor\u0060\u0060","content":"FsiEvaluator.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluator.html#RegisterTransformation","title":"FsiEvaluator.RegisterTransformation","content":"FsiEvaluator.RegisterTransformation \nRegisterTransformation \n Register a function that formats (some) values that are produced by the evaluator.\n The specified function should return \u0027Some\u0027 when it knows how to format a value\n and it should return formatted","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluator.html#EvaluationFailed","title":"FsiEvaluator.EvaluationFailed","content":"FsiEvaluator.EvaluationFailed \nEvaluationFailed \n This event is fired whenever an evaluation of an expression fails","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluatorconfig.html","title":"FsiEvaluatorConfig","content":"FsiEvaluatorConfig \n Provides configuration options for the FsiEvaluator \nFsiEvaluatorConfig.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFsiEvaluatorConfig.CreateNoOpFsiObject \nCreateNoOpFsiObject","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluatorconfig.html#\u0060\u0060.ctor\u0060\u0060","title":"FsiEvaluatorConfig.\u0060\u0060.ctor\u0060\u0060","content":"FsiEvaluatorConfig.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-fsievaluatorconfig.html#CreateNoOpFsiObject","title":"FsiEvaluatorConfig.CreateNoOpFsiObject","content":"FsiEvaluatorConfig.CreateNoOpFsiObject \nCreateNoOpFsiObject \n Creates a dummy fsi object that does not affect the behaviour of F# Interactive\n (and simply ignores all operations that are done on it). You can use this to\n e.g. disable registered printers that would open new windows etc.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-ifsievaluationresult.html","title":"IFsiEvaluationResult","content":"IFsiEvaluationResult \n An interface that represents FSI evaluation result\n (we make this abstract so that evaluators can store other info)","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-ifsievaluator.html","title":"IFsiEvaluator","content":"IFsiEvaluator \n Represents an evaluator for F# snippets embedded in code \nIFsiEvaluator.Evaluate \nEvaluate \nIFsiEvaluator.Format \nFormat","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-ifsievaluator.html#Evaluate","title":"IFsiEvaluator.Evaluate","content":"IFsiEvaluator.Evaluate \nEvaluate \n Called to evaluate a snippet","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-literate-evaluation-ifsievaluator.html#Format","title":"IFsiEvaluator.Format","content":"IFsiEvaluator.Format \nFormat \n Called to format some part of evaluation result generated by FSI","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html","title":"Dsl","content":"Dsl \n \nDsl.\u0060\u0060#\u0060\u0060 \n\u0060\u0060#\u0060\u0060 \nDsl.\u0060\u0060##\u0060\u0060 \n\u0060\u0060##\u0060\u0060 \nDsl.\u0060\u0060###\u0060\u0060 \n\u0060\u0060###\u0060\u0060 \nDsl.\u0060\u0060####\u0060\u0060 \n\u0060\u0060####\u0060\u0060 \nDsl.\u0060\u0060#####\u0060\u0060 \n\u0060\u0060#####\u0060\u0060 \nDsl.strong \nstrong \nDsl.p \np \nDsl.span \nspan \nDsl.(!!) \n(!!) \nDsl.link \nlink \nDsl.ul \nul \nDsl.ol \nol \nDsl.table \ntable \nDsl.img \nimg","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html#\u0060\u0060#\u0060\u0060","title":"Dsl.\u0060\u0060#\u0060\u0060","content":"Dsl.\u0060\u0060#\u0060\u0060 \n\u0060\u0060#\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html#\u0060\u0060##\u0060\u0060","title":"Dsl.\u0060\u0060##\u0060\u0060","content":"Dsl.\u0060\u0060##\u0060\u0060 \n\u0060\u0060##\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html#\u0060\u0060###\u0060\u0060","title":"Dsl.\u0060\u0060###\u0060\u0060","content":"Dsl.\u0060\u0060###\u0060\u0060 \n\u0060\u0060###\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html#\u0060\u0060####\u0060\u0060","title":"Dsl.\u0060\u0060####\u0060\u0060","content":"Dsl.\u0060\u0060####\u0060\u0060 \n\u0060\u0060####\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html#\u0060\u0060#####\u0060\u0060","title":"Dsl.\u0060\u0060#####\u0060\u0060","content":"Dsl.\u0060\u0060#####\u0060\u0060 \n\u0060\u0060#####\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html#strong","title":"Dsl.strong","content":"Dsl.strong \nstrong \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html#p","title":"Dsl.p","content":"Dsl.p \np \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html#span","title":"Dsl.span","content":"Dsl.span \nspan \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html#(!!)","title":"Dsl.(!!)","content":"Dsl.(!!) \n(!!) \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html#link","title":"Dsl.link","content":"Dsl.link \nlink \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html#ul","title":"Dsl.ul","content":"Dsl.ul \nul \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html#ol","title":"Dsl.ol","content":"Dsl.ol \nol \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html#table","title":"Dsl.table","content":"Dsl.table \ntable \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-dsl.html#img","title":"Dsl.img","content":"Dsl.img \nimg \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-htmlformatting.html","title":"HtmlFormatting","content":"HtmlFormatting \n \nHtmlFormatting.formatAsHtml \nformatAsHtml","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-htmlformatting.html#formatAsHtml","title":"HtmlFormatting.formatAsHtml","content":"HtmlFormatting.formatAsHtml \nformatAsHtml \n Format Markdown document and write the result to\n a specified TextWriter. Parameters specify newline character\n and a dictionary with link keys defined in the document.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns.html","title":"MarkdownPatterns","content":"MarkdownPatterns \n This module provides an easy way of processing Markdown documents.\n It lets you decompose documents into leafs and nodes with nested paragraphs. \nMarkdownPatterns.ParagraphLeafInfo \nParagraphLeafInfo \nMarkdownPatterns.ParagraphNestedInfo \nParagraphNestedInfo \nMarkdownPatterns.ParagraphSpansInfo \nParagraphSpansInfo \nMarkdownPatterns.SpanLeafInfo \nSpanLeafInfo \nMarkdownPatterns.SpanNodeInfo \nSpanNodeInfo \nMarkdownPatterns.SpanLeaf \nSpanLeaf \nMarkdownPatterns.SpanNode \nSpanNode \nMarkdownPatterns.ParagraphSpans \nParagraphSpans \nMarkdownPatterns.ParagraphLeaf \nParagraphLeaf \nMarkdownPatterns.ParagraphNested \nParagraphNested \nMarkdownPatterns.(|SpanLeaf|SpanNode|) \n(|SpanLeaf|SpanNode|) \nMarkdownPatterns.(|ParagraphLeaf|ParagraphNested|ParagraphSpans|) \n(|ParagraphLeaf|ParagraphNested|ParagraphSpans|)","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns.html#SpanLeaf","title":"MarkdownPatterns.SpanLeaf","content":"MarkdownPatterns.SpanLeaf \nSpanLeaf \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns.html#SpanNode","title":"MarkdownPatterns.SpanNode","content":"MarkdownPatterns.SpanNode \nSpanNode \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns.html#ParagraphSpans","title":"MarkdownPatterns.ParagraphSpans","content":"MarkdownPatterns.ParagraphSpans \nParagraphSpans \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns.html#ParagraphLeaf","title":"MarkdownPatterns.ParagraphLeaf","content":"MarkdownPatterns.ParagraphLeaf \nParagraphLeaf \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns.html#ParagraphNested","title":"MarkdownPatterns.ParagraphNested","content":"MarkdownPatterns.ParagraphNested \nParagraphNested \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns.html#(|SpanLeaf|SpanNode|)","title":"MarkdownPatterns.(|SpanLeaf|SpanNode|)","content":"MarkdownPatterns.(|SpanLeaf|SpanNode|) \n(|SpanLeaf|SpanNode|) \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns.html#(|ParagraphLeaf|ParagraphNested|ParagraphSpans|)","title":"MarkdownPatterns.(|ParagraphLeaf|ParagraphNested|ParagraphSpans|)","content":"MarkdownPatterns.(|ParagraphLeaf|ParagraphNested|ParagraphSpans|) \n(|ParagraphLeaf|ParagraphNested|ParagraphSpans|) \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns-paragraphleafinfo.html","title":"ParagraphLeafInfo","content":"ParagraphLeafInfo \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns-paragraphnestedinfo.html","title":"ParagraphNestedInfo","content":"ParagraphNestedInfo \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns-paragraphspansinfo.html","title":"ParagraphSpansInfo","content":"ParagraphSpansInfo \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns-spanleafinfo.html","title":"SpanLeafInfo","content":"SpanLeafInfo \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownpatterns-spannodeinfo.html","title":"SpanNodeInfo","content":"SpanNodeInfo \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html","title":"Markdown","content":"Markdown \n Static class that provides methods for formatting\n and transforming Markdown documents. \nMarkdown.Parse \nParse \nMarkdown.ToFsx \nToFsx \nMarkdown.ToHtml \nToHtml \nMarkdown.ToHtml \nToHtml \nMarkdown.ToLatex \nToLatex \nMarkdown.ToLatex \nToLatex \nMarkdown.ToMd \nToMd \nMarkdown.ToPynb \nToPynb \nMarkdown.WriteHtml \nWriteHtml \nMarkdown.WriteHtml \nWriteHtml \nMarkdown.WriteLatex \nWriteLatex \nMarkdown.WriteLatex \nWriteLatex","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#Parse","title":"Markdown.Parse","content":"Markdown.Parse \nParse \n Parse the specified text into a MarkdownDocument. Line breaks in the\n inline HTML (etc.) will be stored using the specified string.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#ToFsx","title":"Markdown.ToFsx","content":"Markdown.ToFsx \nToFsx \n Transform the provided MarkdownDocument into Fsx and return the result as a string.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#ToHtml","title":"Markdown.ToHtml","content":"Markdown.ToHtml \nToHtml \n Transform Markdown document into HTML format.\n The result will be returned as a string.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#ToHtml","title":"Markdown.ToHtml","content":"Markdown.ToHtml \nToHtml \n Transform the provided MarkdownDocument into HTML\n format and return the result as a string.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#ToLatex","title":"Markdown.ToLatex","content":"Markdown.ToLatex \nToLatex \n Transform Markdown text into LaTeX format. The result will be returned as a string.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#ToLatex","title":"Markdown.ToLatex","content":"Markdown.ToLatex \nToLatex \n Transform the provided MarkdownDocument into LaTeX\n format and return the result as a string.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#ToMd","title":"Markdown.ToMd","content":"Markdown.ToMd \nToMd \n Transform the provided MarkdownDocument into Markdown and return the result as a string.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#ToPynb","title":"Markdown.ToPynb","content":"Markdown.ToPynb \nToPynb \n Transform the provided MarkdownDocument into Pynb and return the result as a string.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#WriteHtml","title":"Markdown.WriteHtml","content":"Markdown.WriteHtml \nWriteHtml \n Transform Markdown text into HTML format. The result\n will be written to the provided TextWriter.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#WriteHtml","title":"Markdown.WriteHtml","content":"Markdown.WriteHtml \nWriteHtml \n Transform the provided MarkdownDocument into HTML\n format and write the result to a given writer.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#WriteLatex","title":"Markdown.WriteLatex","content":"Markdown.WriteLatex \nWriteLatex \n Transform Markdown document into LaTeX format. The result\n will be written to the provided TextWriter.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdown.html#WriteLatex","title":"Markdown.WriteLatex","content":"Markdown.WriteLatex \nWriteLatex \n Transform the provided MarkdownDocument into LaTeX\n format and write the result to a given writer.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowncolumnalignment.html","title":"MarkdownColumnAlignment","content":"MarkdownColumnAlignment \n Column in a table can be aligned to left, right, center or using the default alignment \nMarkdownColumnAlignment.AlignLeft \nAlignLeft \nMarkdownColumnAlignment.AlignRight \nAlignRight \nMarkdownColumnAlignment.AlignCenter \nAlignCenter \nMarkdownColumnAlignment.AlignDefault \nAlignDefault","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowncolumnalignment.html#AlignLeft","title":"MarkdownColumnAlignment.AlignLeft","content":"MarkdownColumnAlignment.AlignLeft \nAlignLeft \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowncolumnalignment.html#AlignRight","title":"MarkdownColumnAlignment.AlignRight","content":"MarkdownColumnAlignment.AlignRight \nAlignRight \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowncolumnalignment.html#AlignCenter","title":"MarkdownColumnAlignment.AlignCenter","content":"MarkdownColumnAlignment.AlignCenter \nAlignCenter \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowncolumnalignment.html#AlignDefault","title":"MarkdownColumnAlignment.AlignDefault","content":"MarkdownColumnAlignment.AlignDefault \nAlignDefault \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowndocument.html","title":"MarkdownDocument","content":"MarkdownDocument \n\n Representation of a Markdown document - the representation of Paragraphs\n uses an F# discriminated union type and so is best used from F#.\n  \nMarkdownDocument.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMarkdownDocument.DefinedLinks \nDefinedLinks \nMarkdownDocument.Paragraphs \nParagraphs","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowndocument.html#\u0060\u0060.ctor\u0060\u0060","title":"MarkdownDocument.\u0060\u0060.ctor\u0060\u0060","content":"MarkdownDocument.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowndocument.html#DefinedLinks","title":"MarkdownDocument.DefinedLinks","content":"MarkdownDocument.DefinedLinks \nDefinedLinks \n Returns a dictionary containing explicitly defined links","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowndocument.html#Paragraphs","title":"MarkdownDocument.Paragraphs","content":"MarkdownDocument.Paragraphs \nParagraphs \n Returns a list of paragraphs in the document","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownembedparagraphs.html","title":"MarkdownEmbedParagraphs","content":"MarkdownEmbedParagraphs \n Provides an extensibility point for adding custom kinds of paragraphs into a document\n (MarkdownEmbedParagraphs values can be embedded using MarkdownParagraph.EmbedParagraphs) \nMarkdownEmbedParagraphs.Render \nRender","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownembedparagraphs.html#Render","title":"MarkdownEmbedParagraphs.Render","content":"MarkdownEmbedParagraphs.Render \nRender \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownembedspans.html","title":"MarkdownEmbedSpans","content":"MarkdownEmbedSpans \n Provides an extensibility point for adding custom kinds of spans into a document\n (MarkdownEmbedSpans values can be embedded using MarkdownSpan.EmbedSpans) \nMarkdownEmbedSpans.Render \nRender","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownembedspans.html#Render","title":"MarkdownEmbedSpans.Render","content":"MarkdownEmbedSpans.Render \nRender \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownlistkind.html","title":"MarkdownListKind","content":"MarkdownListKind \n\n   A list kind can be Ordered or Unordered corresponding to \u003Ccode\u003E\u0026lt;ol\u0026gt;\u003C/code\u003E and \u003Ccode\u003E\u0026lt;ul\u0026gt;\u003C/code\u003E elements\n  \nMarkdownListKind.Ordered \nOrdered \nMarkdownListKind.Unordered \nUnordered","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownlistkind.html#Ordered","title":"MarkdownListKind.Ordered","content":"MarkdownListKind.Ordered \nOrdered \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownlistkind.html#Unordered","title":"MarkdownListKind.Unordered","content":"MarkdownListKind.Unordered \nUnordered \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html","title":"MarkdownParagraph","content":"MarkdownParagraph \n A paragraph represents a (possibly) multi-line element of a Markdown document.\n Paragraphs are headings, inline paragraphs, code blocks, lists, quotations, tables and\n also embedded LaTeX blocks. \nMarkdownParagraph.Heading \nHeading \nMarkdownParagraph.Paragraph \nParagraph \nMarkdownParagraph.CodeBlock \nCodeBlock \nMarkdownParagraph.InlineHtmlBlock \nInlineHtmlBlock \nMarkdownParagraph.ListBlock \nListBlock \nMarkdownParagraph.QuotedBlock \nQuotedBlock \nMarkdownParagraph.Span \nSpan \nMarkdownParagraph.LatexBlock \nLatexBlock \nMarkdownParagraph.HorizontalRule \nHorizontalRule \nMarkdownParagraph.TableBlock \nTableBlock \nMarkdownParagraph.OtherBlock \nOtherBlock \nMarkdownParagraph.EmbedParagraphs \nEmbedParagraphs \nMarkdownParagraph.YamlFrontmatter \nYamlFrontmatter \nMarkdownParagraph.OutputBlock \nOutputBlock","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#Heading","title":"MarkdownParagraph.Heading","content":"MarkdownParagraph.Heading \nHeading \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#Paragraph","title":"MarkdownParagraph.Paragraph","content":"MarkdownParagraph.Paragraph \nParagraph \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#CodeBlock","title":"MarkdownParagraph.CodeBlock","content":"MarkdownParagraph.CodeBlock \nCodeBlock \n A code block, whether fenced or via indentation","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#InlineHtmlBlock","title":"MarkdownParagraph.InlineHtmlBlock","content":"MarkdownParagraph.InlineHtmlBlock \nInlineHtmlBlock \n A HTML block","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#ListBlock","title":"MarkdownParagraph.ListBlock","content":"MarkdownParagraph.ListBlock \nListBlock \n A Markdown List block","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#QuotedBlock","title":"MarkdownParagraph.QuotedBlock","content":"MarkdownParagraph.QuotedBlock \nQuotedBlock \n A Markdown Quote block","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#Span","title":"MarkdownParagraph.Span","content":"MarkdownParagraph.Span \nSpan \n A Markdown Span block","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#LatexBlock","title":"MarkdownParagraph.LatexBlock","content":"MarkdownParagraph.LatexBlock \nLatexBlock \n A Markdown Latex block","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#HorizontalRule","title":"MarkdownParagraph.HorizontalRule","content":"MarkdownParagraph.HorizontalRule \nHorizontalRule \n A Markdown Horizontal rule","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#TableBlock","title":"MarkdownParagraph.TableBlock","content":"MarkdownParagraph.TableBlock \nTableBlock \n A Markdown Table","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#OtherBlock","title":"MarkdownParagraph.OtherBlock","content":"MarkdownParagraph.OtherBlock \nOtherBlock \n Represents a block of markdown produced when parsing of code or tables or quoted blocks is suppressed","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#EmbedParagraphs","title":"MarkdownParagraph.EmbedParagraphs","content":"MarkdownParagraph.EmbedParagraphs \nEmbedParagraphs \n A special addition for computing paragraphs","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#YamlFrontmatter","title":"MarkdownParagraph.YamlFrontmatter","content":"MarkdownParagraph.YamlFrontmatter \nYamlFrontmatter \n A special addition for YAML-style frontmatter","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraph.html#OutputBlock","title":"MarkdownParagraph.OutputBlock","content":"MarkdownParagraph.OutputBlock \nOutputBlock \n A special addition for inserted outputs","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraphs.html","title":"MarkdownParagraphs","content":"MarkdownParagraphs \n A type alias for a list of paragraphs \nMarkdownParagraphs.Item \nItem \nMarkdownParagraphs.IsEmpty \nIsEmpty \nMarkdownParagraphs.Tail \nTail \nMarkdownParagraphs.Head \nHead \nMarkdownParagraphs.Length \nLength \nMarkdownParagraphs.Empty \nEmpty","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraphs.html#Item","title":"MarkdownParagraphs.Item","content":"MarkdownParagraphs.Item \nItem \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraphs.html#IsEmpty","title":"MarkdownParagraphs.IsEmpty","content":"MarkdownParagraphs.IsEmpty \nIsEmpty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraphs.html#Tail","title":"MarkdownParagraphs.Tail","content":"MarkdownParagraphs.Tail \nTail \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraphs.html#Head","title":"MarkdownParagraphs.Head","content":"MarkdownParagraphs.Head \nHead \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraphs.html#Length","title":"MarkdownParagraphs.Length","content":"MarkdownParagraphs.Length \nLength \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparagraphs.html#Empty","title":"MarkdownParagraphs.Empty","content":"MarkdownParagraphs.Empty \nEmpty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparseoptions.html","title":"MarkdownParseOptions","content":"MarkdownParseOptions \n Controls the parsing of markdown \nMarkdownParseOptions.None \nNone \nMarkdownParseOptions.ParseCodeAsOther \nParseCodeAsOther \nMarkdownParseOptions.ParseNonCodeAsOther \nParseNonCodeAsOther \nMarkdownParseOptions.AllowYamlFrontMatter \nAllowYamlFrontMatter","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparseoptions.html#None","title":"MarkdownParseOptions.None","content":"MarkdownParseOptions.None \nNone \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparseoptions.html#ParseCodeAsOther","title":"MarkdownParseOptions.ParseCodeAsOther","content":"MarkdownParseOptions.ParseCodeAsOther \nParseCodeAsOther \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparseoptions.html#ParseNonCodeAsOther","title":"MarkdownParseOptions.ParseNonCodeAsOther","content":"MarkdownParseOptions.ParseNonCodeAsOther \nParseNonCodeAsOther \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownparseoptions.html#AllowYamlFrontMatter","title":"MarkdownParseOptions.AllowYamlFrontMatter","content":"MarkdownParseOptions.AllowYamlFrontMatter \nAllowYamlFrontMatter \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html","title":"MarkdownSpan","content":"MarkdownSpan \n Represents inline formatting inside a paragraph. This can be literal (with text), various\n formattings (string, emphasis, etc.), hyperlinks, images, inline maths etc. \nMarkdownSpan.Literal \nLiteral \nMarkdownSpan.InlineCode \nInlineCode \nMarkdownSpan.Strong \nStrong \nMarkdownSpan.Emphasis \nEmphasis \nMarkdownSpan.AnchorLink \nAnchorLink \nMarkdownSpan.DirectLink \nDirectLink \nMarkdownSpan.IndirectLink \nIndirectLink \nMarkdownSpan.DirectImage \nDirectImage \nMarkdownSpan.IndirectImage \nIndirectImage \nMarkdownSpan.HardLineBreak \nHardLineBreak \nMarkdownSpan.LatexInlineMath \nLatexInlineMath \nMarkdownSpan.LatexDisplayMath \nLatexDisplayMath \nMarkdownSpan.EmbedSpans \nEmbedSpans","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#Literal","title":"MarkdownSpan.Literal","content":"MarkdownSpan.Literal \nLiteral \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#InlineCode","title":"MarkdownSpan.InlineCode","content":"MarkdownSpan.InlineCode \nInlineCode \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#Strong","title":"MarkdownSpan.Strong","content":"MarkdownSpan.Strong \nStrong \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#Emphasis","title":"MarkdownSpan.Emphasis","content":"MarkdownSpan.Emphasis \nEmphasis \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#AnchorLink","title":"MarkdownSpan.AnchorLink","content":"MarkdownSpan.AnchorLink \nAnchorLink \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#DirectLink","title":"MarkdownSpan.DirectLink","content":"MarkdownSpan.DirectLink \nDirectLink \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#IndirectLink","title":"MarkdownSpan.IndirectLink","content":"MarkdownSpan.IndirectLink \nIndirectLink \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#DirectImage","title":"MarkdownSpan.DirectImage","content":"MarkdownSpan.DirectImage \nDirectImage \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#IndirectImage","title":"MarkdownSpan.IndirectImage","content":"MarkdownSpan.IndirectImage \nIndirectImage \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#HardLineBreak","title":"MarkdownSpan.HardLineBreak","content":"MarkdownSpan.HardLineBreak \nHardLineBreak \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#LatexInlineMath","title":"MarkdownSpan.LatexInlineMath","content":"MarkdownSpan.LatexInlineMath \nLatexInlineMath \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#LatexDisplayMath","title":"MarkdownSpan.LatexDisplayMath","content":"MarkdownSpan.LatexDisplayMath \nLatexDisplayMath \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspan.html#EmbedSpans","title":"MarkdownSpan.EmbedSpans","content":"MarkdownSpan.EmbedSpans \nEmbedSpans \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspans.html","title":"MarkdownSpans","content":"MarkdownSpans \n A type alias for a list of MarkdownSpan values \nMarkdownSpans.Item \nItem \nMarkdownSpans.IsEmpty \nIsEmpty \nMarkdownSpans.Tail \nTail \nMarkdownSpans.Head \nHead \nMarkdownSpans.Length \nLength \nMarkdownSpans.Empty \nEmpty","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspans.html#Item","title":"MarkdownSpans.Item","content":"MarkdownSpans.Item \nItem \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspans.html#IsEmpty","title":"MarkdownSpans.IsEmpty","content":"MarkdownSpans.IsEmpty \nIsEmpty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspans.html#Tail","title":"MarkdownSpans.Tail","content":"MarkdownSpans.Tail \nTail \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspans.html#Head","title":"MarkdownSpans.Head","content":"MarkdownSpans.Head \nHead \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspans.html#Length","title":"MarkdownSpans.Length","content":"MarkdownSpans.Length \nLength \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownspans.html#Empty","title":"MarkdownSpans.Empty","content":"MarkdownSpans.Empty \nEmpty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowntablerow.html","title":"MarkdownTableRow","content":"MarkdownTableRow \n A type alias representing table row as a list of paragraphs \nMarkdownTableRow.Item \nItem \nMarkdownTableRow.IsEmpty \nIsEmpty \nMarkdownTableRow.Tail \nTail \nMarkdownTableRow.Head \nHead \nMarkdownTableRow.Length \nLength \nMarkdownTableRow.Empty \nEmpty","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowntablerow.html#Item","title":"MarkdownTableRow.Item","content":"MarkdownTableRow.Item \nItem \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowntablerow.html#IsEmpty","title":"MarkdownTableRow.IsEmpty","content":"MarkdownTableRow.IsEmpty \nIsEmpty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowntablerow.html#Tail","title":"MarkdownTableRow.Tail","content":"MarkdownTableRow.Tail \nTail \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowntablerow.html#Head","title":"MarkdownTableRow.Head","content":"MarkdownTableRow.Head \nHead \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowntablerow.html#Length","title":"MarkdownTableRow.Length","content":"MarkdownTableRow.Length \nLength \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdowntablerow.html#Empty","title":"MarkdownTableRow.Empty","content":"MarkdownTableRow.Empty \nEmpty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrangemodule.html","title":"MarkdownRange","content":"MarkdownRange \n \nMarkdownRange.zero \nzero \nMarkdownRange.mergeRanges \nmergeRanges","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrangemodule.html#zero","title":"MarkdownRange.zero","content":"MarkdownRange.zero \nzero \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrangemodule.html#mergeRanges","title":"MarkdownRange.mergeRanges","content":"MarkdownRange.mergeRanges \nmergeRanges \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrange.html","title":"MarkdownRange","content":"MarkdownRange \n \nMarkdownRange.StartLine \nStartLine \nMarkdownRange.StartColumn \nStartColumn \nMarkdownRange.EndLine \nEndLine \nMarkdownRange.EndColumn \nEndColumn","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrange.html#StartLine","title":"MarkdownRange.StartLine","content":"MarkdownRange.StartLine \nStartLine \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrange.html#StartColumn","title":"MarkdownRange.StartColumn","content":"MarkdownRange.StartColumn \nStartColumn \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrange.html#EndLine","title":"MarkdownRange.EndLine","content":"MarkdownRange.EndLine \nEndLine \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-markdown-markdownrange.html#EndColumn","title":"MarkdownRange.EndColumn","content":"MarkdownRange.EndColumn \nEndColumn \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html","title":"ParamKeys","content":"ParamKeys \n  Defines the parameter keys known to FSharp.Formatting processing code \nParamKeys.root \nroot \nParamKeys.\u0060\u0060fsdocs-authors\u0060\u0060 \n\u0060\u0060fsdocs-authors\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-collection-name\u0060\u0060 \n\u0060\u0060fsdocs-collection-name\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-content\u0060\u0060 \n\u0060\u0060fsdocs-content\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-page-content-list\u0060\u0060 \n\u0060\u0060fsdocs-page-content-list\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-collection-name-link\u0060\u0060 \n\u0060\u0060fsdocs-collection-name-link\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-copyright\u0060\u0060 \n\u0060\u0060fsdocs-copyright\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-license-link\u0060\u0060 \n\u0060\u0060fsdocs-license-link\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-list-of-namespaces\u0060\u0060 \n\u0060\u0060fsdocs-list-of-namespaces\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-list-of-documents\u0060\u0060 \n\u0060\u0060fsdocs-list-of-documents\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-logo-link\u0060\u0060 \n\u0060\u0060fsdocs-logo-link\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-logo-src\u0060\u0060 \n\u0060\u0060fsdocs-logo-src\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-favicon-src\u0060\u0060 \n\u0060\u0060fsdocs-favicon-src\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-package-license-expression\u0060\u0060 \n\u0060\u0060fsdocs-package-license-expression\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-package-project-url\u0060\u0060 \n\u0060\u0060fsdocs-package-project-url\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-package-tags\u0060\u0060 \n\u0060\u0060fsdocs-package-tags\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-package-version\u0060\u0060 \n\u0060\u0060fsdocs-package-version\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-package-icon-url\u0060\u0060 \n\u0060\u0060fsdocs-package-icon-url\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-page-title\u0060\u0060 \n\u0060\u0060fsdocs-page-title\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-page-source\u0060\u0060 \n\u0060\u0060fsdocs-page-source\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-release-notes-link\u0060\u0060 \n\u0060\u0060fsdocs-release-notes-link\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-repository-branch\u0060\u0060 \n\u0060\u0060fsdocs-repository-branch\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-repository-commit\u0060\u0060 \n\u0060\u0060fsdocs-repository-commit\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-repository-link\u0060\u0060 \n\u0060\u0060fsdocs-repository-link\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-source\u0060\u0060 \n\u0060\u0060fsdocs-source\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-source-filename\u0060\u0060 \n\u0060\u0060fsdocs-source-filename\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-source-basename\u0060\u0060 \n\u0060\u0060fsdocs-source-basename\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-theme\u0060\u0060 \n\u0060\u0060fsdocs-theme\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-tooltips\u0060\u0060 \n\u0060\u0060fsdocs-tooltips\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-watch-script\u0060\u0060 \n\u0060\u0060fsdocs-watch-script\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-menu-header-content\u0060\u0060 \n\u0060\u0060fsdocs-menu-header-content\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-menu-header-id\u0060\u0060 \n\u0060\u0060fsdocs-menu-header-id\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-menu-header-active-class\u0060\u0060 \n\u0060\u0060fsdocs-menu-header-active-class\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-menu-items\u0060\u0060 \n\u0060\u0060fsdocs-menu-items\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-menu-item-link\u0060\u0060 \n\u0060\u0060fsdocs-menu-item-link\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-menu-item-content\u0060\u0060 \n\u0060\u0060fsdocs-menu-item-content\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-menu-item-id\u0060\u0060 \n\u0060\u0060fsdocs-menu-item-id\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-menu-item-active-class\u0060\u0060 \n\u0060\u0060fsdocs-menu-item-active-class\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-previous-page-link\u0060\u0060 \n\u0060\u0060fsdocs-previous-page-link\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-next-page-link\u0060\u0060 \n\u0060\u0060fsdocs-next-page-link\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-head-extra\u0060\u0060 \n\u0060\u0060fsdocs-head-extra\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-body-extra\u0060\u0060 \n\u0060\u0060fsdocs-body-extra\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-body-class\u0060\u0060 \n\u0060\u0060fsdocs-body-class\u0060\u0060 \nParamKeys.\u0060\u0060fsdocs-meta-tags\u0060\u0060 \n\u0060\u0060fsdocs-meta-tags\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#root","title":"ParamKeys.root","content":"ParamKeys.root \nroot \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-authors\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-authors\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-authors\u0060\u0060 \n\u0060\u0060fsdocs-authors\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-collection-name\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-collection-name\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-collection-name\u0060\u0060 \n\u0060\u0060fsdocs-collection-name\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-content\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-content\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-content\u0060\u0060 \n\u0060\u0060fsdocs-content\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-page-content-list\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-page-content-list\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-page-content-list\u0060\u0060 \n\u0060\u0060fsdocs-page-content-list\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-collection-name-link\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-collection-name-link\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-collection-name-link\u0060\u0060 \n\u0060\u0060fsdocs-collection-name-link\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-copyright\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-copyright\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-copyright\u0060\u0060 \n\u0060\u0060fsdocs-copyright\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-license-link\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-license-link\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-license-link\u0060\u0060 \n\u0060\u0060fsdocs-license-link\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-list-of-namespaces\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-list-of-namespaces\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-list-of-namespaces\u0060\u0060 \n\u0060\u0060fsdocs-list-of-namespaces\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-list-of-documents\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-list-of-documents\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-list-of-documents\u0060\u0060 \n\u0060\u0060fsdocs-list-of-documents\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-logo-link\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-logo-link\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-logo-link\u0060\u0060 \n\u0060\u0060fsdocs-logo-link\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-logo-src\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-logo-src\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-logo-src\u0060\u0060 \n\u0060\u0060fsdocs-logo-src\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-favicon-src\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-favicon-src\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-favicon-src\u0060\u0060 \n\u0060\u0060fsdocs-favicon-src\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-package-license-expression\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-package-license-expression\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-package-license-expression\u0060\u0060 \n\u0060\u0060fsdocs-package-license-expression\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-package-project-url\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-package-project-url\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-package-project-url\u0060\u0060 \n\u0060\u0060fsdocs-package-project-url\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-package-tags\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-package-tags\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-package-tags\u0060\u0060 \n\u0060\u0060fsdocs-package-tags\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-package-version\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-package-version\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-package-version\u0060\u0060 \n\u0060\u0060fsdocs-package-version\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-package-icon-url\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-package-icon-url\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-package-icon-url\u0060\u0060 \n\u0060\u0060fsdocs-package-icon-url\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-page-title\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-page-title\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-page-title\u0060\u0060 \n\u0060\u0060fsdocs-page-title\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-page-source\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-page-source\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-page-source\u0060\u0060 \n\u0060\u0060fsdocs-page-source\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-release-notes-link\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-release-notes-link\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-release-notes-link\u0060\u0060 \n\u0060\u0060fsdocs-release-notes-link\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-repository-branch\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-repository-branch\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-repository-branch\u0060\u0060 \n\u0060\u0060fsdocs-repository-branch\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-repository-commit\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-repository-commit\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-repository-commit\u0060\u0060 \n\u0060\u0060fsdocs-repository-commit\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-repository-link\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-repository-link\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-repository-link\u0060\u0060 \n\u0060\u0060fsdocs-repository-link\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-source\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-source\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-source\u0060\u0060 \n\u0060\u0060fsdocs-source\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-source-filename\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-source-filename\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-source-filename\u0060\u0060 \n\u0060\u0060fsdocs-source-filename\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-source-basename\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-source-basename\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-source-basename\u0060\u0060 \n\u0060\u0060fsdocs-source-basename\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-theme\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-theme\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-theme\u0060\u0060 \n\u0060\u0060fsdocs-theme\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-tooltips\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-tooltips\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-tooltips\u0060\u0060 \n\u0060\u0060fsdocs-tooltips\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-watch-script\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-watch-script\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-watch-script\u0060\u0060 \n\u0060\u0060fsdocs-watch-script\u0060\u0060 \n A parameter key known to FSharp.Formatting","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-menu-header-content\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-menu-header-content\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-menu-header-content\u0060\u0060 \n\u0060\u0060fsdocs-menu-header-content\u0060\u0060 \n A parameter key known to FSharp.Formatting, available in _menu_template.html","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-menu-header-id\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-menu-header-id\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-menu-header-id\u0060\u0060 \n\u0060\u0060fsdocs-menu-header-id\u0060\u0060 \n A parameter key known to FSharp.Formatting, available in _menu_template.html","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-menu-header-active-class\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-menu-header-active-class\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-menu-header-active-class\u0060\u0060 \n\u0060\u0060fsdocs-menu-header-active-class\u0060\u0060 \n A parameter key known to FSharp.Formatting, available in _menu_template.html\n This will be an empty string if the category is not active.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-menu-items\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-menu-items\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-menu-items\u0060\u0060 \n\u0060\u0060fsdocs-menu-items\u0060\u0060 \n A parameter key known to FSharp.Formatting, available in _menu_template.html","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-menu-item-link\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-menu-item-link\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-menu-item-link\u0060\u0060 \n\u0060\u0060fsdocs-menu-item-link\u0060\u0060 \n A parameter key known to FSharp.Formatting, available in _menu-item_template.html","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-menu-item-content\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-menu-item-content\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-menu-item-content\u0060\u0060 \n\u0060\u0060fsdocs-menu-item-content\u0060\u0060 \n A parameter key known to FSharp.Formatting, available in _menu-item_template.html","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-menu-item-id\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-menu-item-id\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-menu-item-id\u0060\u0060 \n\u0060\u0060fsdocs-menu-item-id\u0060\u0060 \n A parameter key known to FSharp.Formatting, available in _menu-item_template.html","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-menu-item-active-class\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-menu-item-active-class\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-menu-item-active-class\u0060\u0060 \n\u0060\u0060fsdocs-menu-item-active-class\u0060\u0060 \n A parameter key known to FSharp.Formatting, available in _menu-item_template.html\n /// This will be an empty string if the item is not active.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-previous-page-link\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-previous-page-link\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-previous-page-link\u0060\u0060 \n\u0060\u0060fsdocs-previous-page-link\u0060\u0060 \n A parameter key known to FSharp.Formatting, available when frontmatter is used correctly","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-next-page-link\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-next-page-link\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-next-page-link\u0060\u0060 \n\u0060\u0060fsdocs-next-page-link\u0060\u0060 \n A parameter key known to FSharp.Formatting, available when frontmatter is used correctly","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-head-extra\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-head-extra\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-head-extra\u0060\u0060 \n\u0060\u0060fsdocs-head-extra\u0060\u0060 \n A parameter key known to FSharp.Formatting, available when \u0060_head.html\u0060 exists in the input folder.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-body-extra\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-body-extra\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-body-extra\u0060\u0060 \n\u0060\u0060fsdocs-body-extra\u0060\u0060 \n A parameter key known to FSharp.Formatting, available when \u0060_head.html\u0060 exists in the input folder.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-body-class\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-body-class\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-body-class\u0060\u0060 \n\u0060\u0060fsdocs-body-class\u0060\u0060 \n A parameter key known to FSharp.Formatting, either \u0027content\u0027 or \u0027api-doc\u0027\n Mean to be used on the \u0060class\u0060 attribute in the \u0060\u003Cbody\u003E\u0060 tag.\n This helps to differentiate styles between API docs and custom content.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkeys.html#\u0060\u0060fsdocs-meta-tags\u0060\u0060","title":"ParamKeys.\u0060\u0060fsdocs-meta-tags\u0060\u0060","content":"ParamKeys.\u0060\u0060fsdocs-meta-tags\u0060\u0060 \n\u0060\u0060fsdocs-meta-tags\u0060\u0060 \n A parameter key known to FSharp.Formatting, it is HTML composed from additional frontmatter information.\n Such as tags and description\n This can be empty when both properties are not provided for the current page.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-frontmatterfile.html","title":"FrontMatterFile","content":"FrontMatterFile \n Meta data from files that contains front matter\n Used to determine upfront which files have front matter so that previous and next substitutes can be discovered. \nFrontMatterFile.ParseFromLines \nParseFromLines \nFrontMatterFile.FileName \nFileName \nFrontMatterFile.Category \nCategory \nFrontMatterFile.CategoryIndex \nCategoryIndex \nFrontMatterFile.Index \nIndex","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-frontmatterfile.html#ParseFromLines","title":"FrontMatterFile.ParseFromLines","content":"FrontMatterFile.ParseFromLines \nParseFromLines \n Parses the category, categoryindex and index from the frontmatter lines","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-frontmatterfile.html#FileName","title":"FrontMatterFile.FileName","content":"FrontMatterFile.FileName \nFileName \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-frontmatterfile.html#Category","title":"FrontMatterFile.Category","content":"FrontMatterFile.Category \nCategory \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-frontmatterfile.html#CategoryIndex","title":"FrontMatterFile.CategoryIndex","content":"FrontMatterFile.CategoryIndex \nCategoryIndex \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-frontmatterfile.html#Index","title":"FrontMatterFile.Index","content":"FrontMatterFile.Index \nIndex \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkey.html","title":"ParamKey","content":"ParamKey \n\n A parameter key\n  \nParamKey.ParamKey \nParamKey","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-paramkey.html#ParamKey","title":"ParamKey.ParamKey","content":"ParamKey.ParamKey \nParamKey \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-substitutions.html","title":"Substitutions","content":"Substitutions \n A list of parameters for substituting in templates, indexed by parameter keys \nSubstitutions.Item \nItem \nSubstitutions.IsEmpty \nIsEmpty \nSubstitutions.Tail \nTail \nSubstitutions.Head \nHead \nSubstitutions.Length \nLength \nSubstitutions.Empty \nEmpty","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-substitutions.html#Item","title":"Substitutions.Item","content":"Substitutions.Item \nItem \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-substitutions.html#IsEmpty","title":"Substitutions.IsEmpty","content":"Substitutions.IsEmpty \nIsEmpty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-substitutions.html#Tail","title":"Substitutions.Tail","content":"Substitutions.Tail \nTail \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-substitutions.html#Head","title":"Substitutions.Head","content":"Substitutions.Head \nHead \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-substitutions.html#Length","title":"Substitutions.Length","content":"Substitutions.Length \nLength \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/reference/fsharp-formatting-templating-substitutions.html#Empty","title":"Substitutions.Empty","content":"Substitutions.Empty \nEmpty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/codeformat.html","title":"Code formatting\n","content":"\n\u0026emsp;\n\u0026emsp;\n\nCode formatting\nThis page demonstrates how to use FSharp.Formatting.CodeFormat to tokenize\nF# source code, obtain information about the source code (mainly tooltips\nfrom the type-checker) and how to turn the code into a nicely formatted HTML.\nFirst, we need to load the assembly and open the necessary namespaces:\nopen FSharp.Formatting.CodeFormat\nopen System.Reflection\n\nIf you want to process multiple snippets, it is a good idea to keep the\nformatting agent around if possible. The agent needs to load the F# compiler\n(which needs to load various files itself) and so this takes a long time.\nProcessing F# source\nThe formatting agent provides a CodeFormatAgent.ParseAndCheckSource method (together with an asynchronous\nversion for use from F# and also a version that returns a .NET Task for C#).\nTo call the method, we define a simple F# code as a string:\nlet source =\n    \u0026quot;\u0026quot;\u0026quot;\n    let hello () =\n      printfn \u0026quot;Hello world\u0026quot;\n  \u0026quot;\u0026quot;\u0026quot;\n\nlet snippets, diagnostics =\n    CodeFormatter.ParseAndCheckSource(\u0026quot;C:\\\\snippet.fsx\u0026quot;, source, None, None, ignore)\n\nWhen calling the method, you need to specify a file name and the actual content\nof the script file. The file does not have to physically exist. It is used by the\nF# compiler to resolve relative references (e.g. #r) and to automatically name\nthe module including all code in the file.\nYou can also specify additional parameters, such as *.dll references, by passing\na third argument with compiler options (e.g. \u0022-r:Foo.dll -r:Bar.dll\u0022).\nThis operation might take some time, so it is a good idea to use an asynchronous\nvariant of the method. It returns two arrays - the first contains F# snippets\nin the source code and the second contains any errors reported by the compiler.\nA single source file can include multiple snippets using the same formatting tags\nas those used on fssnip.net as documented in the\nabout page.\nWorking with returned tokens\nEach returned snippet is essentially just a collection of lines, and each line\nconsists of a sequence of tokens. The following snippet prints basic information\nabout the tokens of our sample snippet:\n// Get the first snippet and obtain list of lines\nlet (Snippet (title, lines)) = snippets |\u0026gt; Seq.head\n\n// Iterate over all lines and all tokens on each line\nfor (Line (_, tokens)) in lines do\n    for token in tokens do\n        match token with\n        | TokenSpan.Token (kind, code, tip) -\u0026gt;\n            printf \u0026quot;%s\u0026quot; code\n\n            tip\n            |\u0026gt; Option.iter (fun spans -\u0026gt; printfn \u0026quot;%A\u0026quot; spans)\n        | TokenSpan.Omitted _\n        | TokenSpan.Output _\n        | TokenSpan.Error _ -\u0026gt; ()\n\n    printfn \u0026quot;\u0026quot;\n\nThe TokenSpan.Token is the most important kind of token. It consists of a kind\n(identifier, keyword, etc.), the original F# code and tooltip information.\nThe tooltip is further formatted using a simple document format, but we simply\nprint the value using the F# pretty printing, so the result looks as follows:\nlet hello[Literal \u0026quot;val hello : unit -\u0026gt; unit\u0026quot;; ...] () =\n  printfn[Literal \u0026quot;val printfn : TextWriterFormat\u0026lt;\u0026#39;T\u0026gt; -\u0026gt; \u0026#39;T\u0026quot;; ...] \u0026quot;Hello world\u0026quot;\n\nThe Omitted token is generated if you use the special (*[omit:...]*) command.\nThe Output token is generated if you use the // [fsi:...] command to format\noutput returned by F# interactive. The Error command wraps code that should be\nunderlined with a red squiggle if the code contains an error.\nGenerating HTML output\nFinally, the CodeFormat type also includes a method CodeFormat.FormatHtml that can be used\nto generate nice HTML output from an F# snippet. This is used, for example, on\nF# Snippets. The following example shows how to call it:\nlet prefix = \u0026quot;fst\u0026quot;\nlet html = CodeFormat.FormatHtml(snippets, prefix)\n\n// Print all snippets, in case there is more of them\nfor snip in html.Snippets do\n    printfn \u0026quot;%s\u0026quot; snip.Content\n\n// Print HTML code that is generated for ToolTips\nprintfn \u0026quot;%s\u0026quot; html.ToolTip\n\nIf the input contains multiple snippets separated using the //[snippet:...] comment, e.g.:\n\n1: \n2: \n3: \n4: \n5: \n6: \n7: \n\n\n// [snippet: First sample]\nprintf \u0022The answer is: %A\u0022 42\n// [/snippet]\n// [snippet: Second sample]\nprintf \u0022Hello world!\u0022\n// [/snippet]\n\n\n\n\nthen the formatter returns multiple HTML blocks. However, the generated tooltips\nare shared by all snippets (to save space) and so they are returned separately.\n","headings":["Code formatting","Processing F# source","Working with returned tokens","Generating HTML output"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/apidocs.html","title":"Generating API Docs","content":"\n\u0026emsp;\n\u0026emsp;\n\nAPI Documentation Generation\nThe command-line tool fsdocs can be used to generate documentation\nfor F# libraries with XML comments.  The documentation is normally built using fsdocs build and developed using fsdocs watch. For\nthe former the output will be placed in output\\reference by default.\nSelected projects\nfsdocs automatically selects the projects and \u0022cracks\u0022 the project files for information\n\nProjects with GenerateDocumentationFile and without IsTestProject are selected.\nIf Projects use TargetFrameworks (not TargetFramework, singular) only the firts target framework will be used to build the docs.\n\n    \u0026lt;PropertyGroup\u0026gt;\n      \u0026lt;GenerateDocumentationFile\u0026gt;true\u0026lt;/GenerateDocumentationFile\u0026gt;\n    \u0026lt;/PropertyGroup\u0026gt;\n\nTemplates\nThe HTML is built by instantiating a template. The template used is the first of:\n\ndocs/reference/_template.html\ndocs/_template.html\nThe default template\n\nUsually, the same template can be used as for other content.\nClassic XML Doc Comments\nXML Doc Comments may use the normal F# and C# XML doc standards.\nThe tags that form the core of the XML doc specification are:\n\u0026lt;c\u0026gt;\t\u0026lt;para\u0026gt;\t\u0026lt;see\u0026gt;*\t\u0026lt;value\u0026gt;\n\u0026lt;code\u0026gt;\t\u0026lt;param\u0026gt;*\t\u0026lt;seealso\u0026gt;*\n\u0026lt;example\u0026gt;\t\u0026lt;paramref\u0026gt;\t\u0026lt;summary\u0026gt;\n\u0026lt;exception\u0026gt;*\t\u0026lt;permission\u0026gt;*\t\u0026lt;typeparam\u0026gt;*\n\u0026lt;include\u0026gt;*\t\u0026lt;remarks\u0026gt;\t\u0026lt;typeparamref\u0026gt;\n\u0026lt;list\u0026gt;\t\u0026lt;inheritdoc\u0026gt;\t\u0026lt;returns\u0026gt;\n\nIn addition, you may also use the Recommended XML doc extensions for F# documentation tooling.\n\n\u0026lt;a href = \u0022...\u0022\u0026gt; links\nArbitrary paragraph-level HTML such as \u0026lt;b\u0026gt; for bold in XML doc text\n\u0026lt;namespacedoc\u0026gt; giving documentation for the enclosing namespace\n\u0026lt;exclude/\u0026gt; to exclude from XML docs\n\n\u0026lt;category\u0026gt; to give a category for an entity or member. An optional index attribute can be specified\nto help sort the list of categories.\n\n\n\\(...\\) for inline math and $$...$$ and \\[...\\]for math environments, see \u003Ca href=\u0022http://docs.mathjax.org.\nSome\u0022\u003Ehttp://docs.mathjax.org.\nSome escaping of characters (e.g. \u0026amp;lt;, \u0026amp;gt;) may be needed to form valid XML\n\n\nAn example of an XML documentation comment, assuming the code is in the namespace TheNamespace:\n/// \u0026lt;summary\u0026gt;\n///   A module\n/// \u0026lt;/summary\u0026gt;\n///\n/// \u0026lt;namespacedoc\u0026gt;\n///   \u0026lt;summary\u0026gt;A namespace to remember\u0026lt;/summary\u0026gt;\n///\n///   \u0026lt;remarks\u0026gt;More on that\u0026lt;/remarks\u0026gt;\n/// \u0026lt;/namespacedoc\u0026gt;\n///\nmodule SomeModule =\n    /// \u0026lt;summary\u0026gt;\n    ///   Some actual comment\n    ///   \u0026lt;para\u0026gt;Another paragraph, see  \u0026lt;see cref=\u0026quot;T:TheNamespace.SomeType\u0026quot;/\u0026gt;. \u0026lt;/para\u0026gt;\n    /// \u0026lt;/summary\u0026gt;\n    ///\n    /// \u0026lt;param name=\u0026quot;x\u0026quot;\u0026gt;The input\u0026lt;/param\u0026gt;\n    ///\n    /// \u0026lt;returns\u0026gt;The output\u0026lt;/returns\u0026gt;\n    ///\n    /// \u0026lt;example\u0026gt;\n    ///   Try using\n    ///   \u0026lt;code\u0026gt;\n    ///      open TheNamespace\n    ///      SomeModule.a\n    ///   \u0026lt;/code\u0026gt;\n    /// \u0026lt;/example\u0026gt;\n    ///\n    /// \u0026lt;category\u0026gt;Foo\u0026lt;/category\u0026gt;\n    let someFunction x = 42 \u002B x\n\n/// \u0026lt;summary\u0026gt;\n///   A type, see  \u0026lt;see cref=\u0026quot;T:TheNamespace.SomeModule\u0026quot;/\u0026gt; and\n///  \u0026lt;see cref=\u0026quot;M:TheNamespace.SomeModule.someFunction\u0026quot;/\u0026gt;.\n/// \u0026lt;/summary\u0026gt;\n///\ntype SomeType() =\n    member x.P = 1\n\nLike types, members are referred to by xml doc sig.  These must currently be precise as the F#\ncompiler doesn\u0027t elaborate these references from simpler names:\ntype Class2() =\n    member this.Property = \u0026quot;more\u0026quot;\n    member this.Method0() = \u0026quot;more\u0026quot;\n    member this.Method1(c: string) = \u0026quot;more\u0026quot;\n    member this.Method2(c: string, o: obj) = \u0026quot;more\u0026quot;\n\n/// \u0026lt;see cref=\u0026quot;P:TheNamespace.Class2.Property\u0026quot; /\u0026gt;\n/// and \u0026lt;see cref=\u0026quot;M:TheNamespace.Class2.OtherMethod0\u0026quot; /\u0026gt;\n/// and \u0026lt;see cref=\u0026quot;M:TheNamespace.Class2.Method1(System.String)\u0026quot; /\u0026gt;\n/// and \u0026lt;see cref=\u0026quot;M:TheNamespace.Class2.Method2(System.String,System.Object)\u0026quot; /\u0026gt;\nlet referringFunction1 () = \u0026quot;result\u0026quot;\n\nGeneric types are referred to by .NET compiled name, e.g.\ntype GenericClass2\u0026lt;\u0026#39;T\u0026gt;() =\n    member this.Property = \u0026quot;more\u0026quot;\n\n    member this.NonGenericMethod(_c: \u0026#39;T) = \u0026quot;more\u0026quot;\n\n    member this.GenericMethod(_c: \u0026#39;T, _o: \u0026#39;U) = \u0026quot;more\u0026quot;\n\n/// See \u0026lt;see cref=\u0026quot;T:TheNamespace.GenericClass2\u00601\u0026quot; /\u0026gt;\n/// and \u0026lt;see cref=\u0026quot;P:TheNamespace.GenericClass2\u00601.Property\u0026quot; /\u0026gt;\n/// and \u0026lt;see cref=\u0026quot;M:TheNamespace.GenericClass2\u00601.NonGenericMethod(\u00600)\u0026quot; /\u0026gt;\n/// and \u0026lt;see cref=\u0026quot;M:TheNamespace.GenericClass2\u00601.GenericMethod\u0060\u00601(\u00600,\u0060\u00600)\u0026quot; /\u0026gt;\nlet referringFunction2 () = \u0026quot;result\u0026quot;\n\nCross-referencing with \u0026lt;seealso\u0026gt;\nUse \u0026lt;seealso cref=\u0022...\u0022/\u0026gt; within \u0026lt;summary\u0026gt; to create cross-references.\nFor example:\nmodule Forest =\n\n    /// \u0026lt;summary\u0026gt;\n    /// Find at most \u0026lt;c\u0026gt;limit\u0026lt;/c\u0026gt; foxes in current forest\n    ///\n    /// See also: \u0026lt;seealso cref=\u0026quot;M:App.Forest.findSquirrels(System.Int32)\u0026quot;/\u0026gt;\n    /// \u0026lt;/summary\u0026gt;\n    let findFoxes (limit : int) = []\n\n    /// \u0026lt;summary\u0026gt;\n    /// Find at most \u0026lt;c\u0026gt;limit\u0026lt;/c\u0026gt; squirrels in current forest\n    ///\n    /// See also: \u0026lt;seealso cref=\u0026quot;M:App.Forest.findFoxes(System.Int32)\u0026quot;/\u0026gt;\n    /// \u0026lt;/summary\u0026gt;\n    let findSquirrels (limit : int) = []\n\nYou can find the correct value for cref in the generated .xml documentation file (this will be generated alongside the assembly\u0027s .dll\u0060).\nYou can also omit the cref\u0027s arguments, and fsdocs will make an attempt to find the first member that matches.\nFor example:\n    /// See also: \u0026lt;seealso cref=\u0026quot;M:App.Forest.findSquirrels\u0026quot;/\u0026gt;\n\nIf the member cannot be found, a link to the containing module/type will be used instead.\nClassic XMl Doc Comments: Excluding APIs from the docs\nIf you want to exclude modules or functions from the API docs, you can use the \u0026lt;exclude/\u0026gt; tag.\nIt needs to be set on a separate triple-slashed line, and can either appear on its own or as part\nof an existing \u0026lt;summary\u0026gt; (for example, you may wish to hide existing documentation while it\u0027s in progress).\nThe \u0026lt;exclude/\u0026gt; tag can be the first or last line in these cases.\nSome examples:\n/// \u0026lt;exclude/\u0026gt;\nmodule BottleKids1 =\n    let a = 42\n\n// Ordinary comment\n/// \u0026lt;exclude/\u0026gt;\nmodule BottleKids2 =\n    let a = 43\n\n/// \u0026lt;exclude/\u0026gt;\n/// BottleKids3 provides improvements over BottleKids2\nmodule BottleKids3 =\n    let a = 44\n\n/// BottleKids4 implements several new features over BottleKids3\n/// \u0026lt;exclude/\u0026gt;\nmodule BottleKids4 =\n    let a = 45\n\n/// \u0026lt;exclude/\u0026gt;\n/// \u0026lt;summary\u0026gt;\n/// BottleKids5 is all you\u0026#39;ll ever need in terms of bottles or kids.\n/// \u0026lt;/summary\u0026gt;\nmodule BottleKids5 =\n    let a = 46\n\nNote that the comments for BottleKids3 (and BottleKids4) will generate a warning. This is because\nthe \u0026lt;exclude/\u0026gt; tag will be parsed as part of the summary text, and so the documentation generator\ncan\u0027t be completely sure you meant to exclude the item, or whether it was a valid part of the documentation.\nIt will assume the exclusion was intended, but you may want to use explicit \u0026lt;summary\u0026gt; tags to remove\nthe warning.\nThe warning will be of the following format:\nWarning: detected \u0026quot;\u0026lt;exclude/\u0026gt;\u0026quot; in text of \u0026quot;\u0026lt;summary\u0026gt;\u0026quot; for \u0026quot;M:YourLib.BottleKids4\u0026quot;. Please see https://fsprojects.github.io/FSharp.Formatting/apidocs.html#Classic-XML-Doc-Comments\n\nYou will find that [omit] also works, but is considered part of the Markdown syntax and is\ndeprecated for XML Doc comments. This will also produce a warning, such as this:\nThe use of \u0060[omit]\u0060 and other commands in XML comments is deprecated, please use XML extensions, see https://github.com/fsharp/fslang-design/blob/master/tooling/FST-1031-xmldoc-extensions.md\n\nGo to Source links\n\u0027fsdocs\u0027 normally automatically adds GitHub links to each functions, values and class members for further reference.\nThis is normally done automatically based on the following settings:\n    \u0026lt;RepositoryUrl\u0026gt;https://github.com/...\u0026lt;/RepositoryUrl\u0026gt;\n    \u0026lt;RepositoryBranch\u0026gt;...\u0026lt;/RepositoryBranch\u0026gt;\n    \u0026lt;RepositoryType\u0026gt;git\u0026lt;/RepositoryType\u0026gt;\n\nIf your source is not built from the same project where you are building documentation then\nyou may need these settings:\n    \u0026lt;FsDocsSourceRepository\u0026gt;...\u0026lt;/FsDocsSourceRepository\u0026gt; -- the URL for the root of the source\n    \u0026lt;FsDocsSourceFolder\u0026gt;...\u0026lt;/FsDocsSourceFolder\u0026gt;         -- the root soure folder at time of build\n\nIt is assumed that sourceRepo and sourceFolder have synchronized contents.\nMarkdown Comments\nYou can use Markdown instead of XML in /// comments. If you do, you should set \u0026lt;UsesMarkdownComments\u0026gt;true\u0026lt;/UsesMarkdownComments\u0026gt; in\nyour F# project file.\n\nNote: Markdown Comments are not supported in all F# IDE tooling.\n\nAdding cross-type links to modules and types in the same assembly\nYou can automatically add cross-type links to the documentation pages of other modules and types in the same assembly.\nYou can do this in two different ways:\n\n\nAdd a markdown inline link were the link\ntitle is the name of the type you want to link.\n/// This will generate a link to [Foo.Bar] documentation\n\n\n\nAdd a Markdown inline code (using\nback-ticks) where the code is the name of the type you want to link.\n/// This will also generate a link to \u0060Foo.Bar\u0060 documentation\n\n\n\nYou can use either the full name (including namespace and module) or the simple name of a type.\nIf more than one type is found with the same name, the link will not be generated.\nIf a type with the given name is not found in the same assembly, the link will not be generated.\n/// Contains two types [Bar] and [Foo.Baz]\nmodule Foo =\n\n    /// Bar is just an \u0060int\u0060 and belongs to module [Foo]\n    type Bar = int\n\n    /// Baz contains a \u0060Foo.Bar\u0060 as its \u0060id\u0060\n    type Baz = { id: Bar }\n\n    /// This function operates on \u0060Baz\u0060 types.\n    let f (b: Baz) = b.id * 42\n\n/// Referencing [Foo3] will not generate a link as there is no type with the name \u0060Foo3\u0060\nmodule Foo3 =\n\n    /// This is not the same type as \u0060Foo.Bar\u0060\n    type Bar = double\n\n    /// Using the simple name for [Bar] will fail to create a link because the name is duplicated in\n    /// [Foo.Bar] and in [Foo3.Bar]. In this case, using the full name works.\n    let f2 b = b * 50\n\nMarkdown Comments: Excluding APIs from the docs\nIf you want to exclude modules or functions from the API docs you can use the [omit] tag.\nIt needs to be set on a separate triple-slashed line, but it could be either the first or the last:\nExample as last line:\n/// Some actual comment\n/// [omit]\nmodule Bar =\n    let a = 42\n\nExample as the first line:\n/// [omit]\n/// Some actual comment\nmodule Bar2 =\n    let a = 42\n\nBuilding library documentation programmatically\nYou can build library documentation programmatically using the functionality\nin the ApiDocs type. To do this, load the assembly and open the necessary namespaces:\n#r \u0026quot;FSharp.Formatting.ApiDocs.dll\u0026quot;\n\nopen FSharp.Formatting.ApiDocs\nopen System.IO\n\nFor example the ApiDocs.GenerateHtml method:\nlet file = Path.Combine(root, \u0026quot;bin/YourLibrary.dll\u0026quot;)\n\nlet input = ApiDocInput.FromFile(file)\n\nApiDocs.GenerateHtml(\n    [ input ],\n    output = Path.Combine(root, \u0026quot;output\u0026quot;),\n    collectionName = \u0026quot;YourLibrary\u0026quot;,\n    template = Path.Combine(root, \u0026quot;templates\u0026quot;, \u0026quot;template.html\u0026quot;),\n    substitutions = []\n)\n\nAdding extra dependencies\nWhen building a library programmatically, you might require a reference to an additional assembly.\nYou can pass this using the otherFlags argument.\nlet projectAssembly = Path.Combine(root, \u0026quot;bin/X.dll\u0026quot;)\n\nlet projectInput = ApiDocInput.FromFile(projectAssembly)\n\nApiDocs.GenerateHtml(\n    [ projectInput ],\n    output = Path.Combine(root, \u0026quot;output\u0026quot;),\n    collectionName = \u0026quot;Project X\u0026quot;,\n    template = Path.Combine(root, \u0026quot;templates\u0026quot;, \u0026quot;template.html\u0026quot;),\n    substitutions = [],\n    otherFlags = [ \u0026quot;-r:/root/ProjectY/bin/Debug/net6.0/Y.dll\u0026quot; ]\n)\n\nor use libDirs to include all assemblies from an entire folder.\nTip: A combination of \u0026lt;CopyLocalLockFileAssemblies\u0026gt;true\u0026lt;/CopyLocalLockFileAssemblies\u0026gt; in the fsproj file and setting libDirs to the compilation output path leads to only one folder with all dependencies referenced.\nThis might be easier, especially for large projects with many dependencies.\nApiDocs.GenerateHtml(\n    [ projectInput ],\n    output = Path.Combine(root, \u0026quot;output\u0026quot;),\n    collectionName = \u0026quot;Project X\u0026quot;,\n    template = Path.Combine(root, \u0026quot;templates\u0026quot;, \u0026quot;template.html\u0026quot;),\n    substitutions = [],\n    libDirs = [ \u0026quot;ProjectX/bin/Debug/netstandard2.0\u0026quot; ]\n)\n\nRebasing Links\nThe root parameter is used for the base of page and image links in the generated documentation. By default, it is derived from the project\u0027s \u0026lt;PackageProjectUrl\u0026gt; property.\nIn some instances, you may wish to override the value for root (perhaps for local testing). To do this, you can use the command-line argument --parameters root \u0026lt;base\u0026gt;.\nFor example:\ndotnet fsdocs build --output public/docs --parameters root ../\n\n","headings":["API Documentation Generation","Selected projects","Templates","Classic XML Doc Comments","Cross-referencing with \u0026lt;seealso\u0026gt;","Classic XMl Doc Comments: Excluding APIs from the docs","Go to Source links","Markdown Comments","Adding cross-type links to modules and types in the same assembly","Markdown Comments: Excluding APIs from the docs","Building library documentation programmatically","Adding extra dependencies","Rebasing Links"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/literate-notebook.html","title":"Literate Notebooks\n","content":"\nLiterate Notebooks\nContent may be created using  .NET interactive polyglot notebooks as the input file. Notebooks are processed by converting the notebook to a literate .fsx script and then passing the script through the script processing pipeline. Markdown notebook cells are passed through as comments surrounded by (** and *), F# code cells are passed through as code, and non-F# code is passed through as markdown fenced code blocks between (** and *) comment markers.\nThe fsdocs tool uses dotnet-repl to evaluate polyglot notebooks. You need this tool to evaluate notebooks using dotnet fsdocs [build|watch] --eval. It can be installed into your local tool manifest using the command dotnet tool install dotnet-repl.\nF# Formatting tries to faithfully reproduce a notebook\u0027s native appearance when generating documents. Notebook cell outputs are passed through unchanged to preserve the notebook\u0027s html output. The below snippet demonstrates a notebook\u0027s html output for F# records, which differs from the output you would get with the same code inside a literate scripts.\ntype ContactCard =\n    { Name: string\n      Phone: string\n      ZipCode: string }\n\n// Create a new record\n{ Name = \u0026quot;Alf\u0026quot;; Phone = \u0026quot;(555) 555-5555\u0026quot;; ZipCode = \u0026quot;90210\u0026quot; }\n\n{ Name = \u0026quot;Alf\u0026quot;\\n  Phone = \u0026quot;(555) 555-5555\u0026quot;\\n  ZipCode = \u0026quot;90210\u0026quot; }NameAlfPhone(555) 555-5555ZipCode90210\n.dni-code-hint {\n    font-style: italic;\n    overflow: hidden;\n    white-space: nowrap;\n}\n.dni-treeview {\n    white-space: nowrap;\n}\n.dni-treeview td {\n    vertical-align: top;\n    text-align: start;\n}\ndetails.dni-treeview {\n    padding-left: 1em;\n}\ntable td {\n    text-align: start;\n}\ntable tr { \n    vertical-align: top; \n    margin: 0em 0px;\n}\ntable tr td pre \n{ \n    vertical-align: top !important; \n    margin: 0em 0px !important;\n} \ntable th {\n    text-align: start;\n}\n\n\n","headings":["Literate Notebooks"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/users.html","title":"Users of FSharp.Formatting\n","content":"\nUsers of FSharp.Formatting\nThe FSharp.Formatting documentation tool is widely used within the F# community.\nHere is a non-exhaustive list of projects:\n\n\ntable { table-layout: fixed; }\ntr td { padding: 15px 0; }\ntr td p { margin: 0 }\ntr th:first-child, tr td:first-child { width: 20%; }\ntr th:last-child, tr td:last-child { width: 35% }\n\n\n\n\nProject name\n\nRepository\nNote\n\n\n\n\nFSharp.Formatting\n\nhttps://github.com/fsprojects/FSharp.Formatting/\n\n\n\nF# compiler guide\n\nhttps://github.com/dotnet/fsharp/\nThe documentation is generated and published from https://github.com/fsharp/fsharp-compiler-docs\n\n\nF# Core Library Documentation\n\nhttps://github.com/dotnet/fsharp/\nThe documentation is generated and published from https://github.com/fsharp/fsharp-core-docs\n\n\nFsLexYacc\n\nhttps://github.com/fsprojects/fslexYacc/\n\n\n\nFSharp.Data\n\nhttps://github.com/fsprojects/FSharp.Data/\n\n\n\nPlotly.NET\n\nhttps://github.com/plotly/Plotly.NET\n\n\n\nFSharp.Stats\n\nhttps://github.com/fslaborg/FSharp.Stats/\n\n\n\nFsHttp\n\nhttps://github.com/fsprojects/FsHttp/\n\n\n\nFantomas\n\nhttps://github.com/fsprojects/fantomas/\n\n\n\nTelplin\n\nhttps://github.com/nojaf/telplin/\n\n\n\nFSharp.Data.Fred\n\nhttps://github.com/nhirschey/FSharp.Data.Fred/\n\n\n\nN Hirschey Teaching\n\nhttps://github.com/nhirschey/Teaching\n\n\n\nFsUnit\n\nhttps://github.com/fsprojects/FsUnit\n\n\n\nFAKE\n\nhttps://github.com/fsprojects/FAKE\n\n\n\nFSharp.Data.GraphQL\n\nhttps://github.com/fsprojects/FSharp.Data.GraphQL\n\n\n\n\n\n","headings":["Users of FSharp.Formatting"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/markdown.html","title":"Markdown parser\n","content":"\n\u0026emsp;\n\u0026emsp;\n\nMarkdown parser\nThis page demonstrates how to use FSharp.Formatting.Markdown to parse a Markdown\ndocument, process the obtained document representation, and\nhow to turn the code into a nicely formatted HTML.\nFirst, we need to load the assembly and open the necessary namespaces:\nopen FSharp.Formatting.Markdown\nopen FSharp.Formatting.Common\n\nParsing documents\nThe F# Markdown parser recognizes the standard Markdown syntax\nand it is not the aim of this tutorial to fully document it.\nThe following snippet creates a simple string containing a document\nwith several elements and then parses it using the Markdown.Parse method:\nlet document =\n    \u0026quot;\u0026quot;\u0026quot;\n# F# Hello world\nHello world in [F#](http://fsharp.net) looks like this:\n\n    printfn \u0026quot;Hello world!\u0026quot;\n\nFor more see [fsharp.org][fsorg].\n\n  [fsorg]: http://fsharp.org \u0026quot;The F# organization.\u0026quot; \u0026quot;\u0026quot;\u0026quot;\n\nlet parsed = Markdown.Parse(document)\n\nThe sample document consists of a first-level heading (written using\none of the two alternative styles) followed by a paragraph with a\ndirect link, code snippet and one more paragraph that includes an\nindirect link. The URLs of indirect links are defined by a separate\nblock as demonstrated on the last line (and they can then be easily used repeatedly\nfrom multiple places in the document).\nWorking with parsed documents\nThe F# Markdown processor does not turn the document directly into HTML.\nInstead, it builds a nice F# data structure that we can use to analyze,\ntransform and process the document. First of all the MarkdownDocument.DefinedLinks property\nreturns all indirect link definitions:\nparsed.DefinedLinks\nval it : IDictionary\u0026lt;string,(string * string option)\u0026gt; =\n  dict [(\u0026quot;fsorg\u0026quot;, (\u0026quot;http://fsharp.org\u0026quot;, Some \u0026quot;The F# organization.\u0026quot;))]\n\nThe document content can be accessed using the MarkdownDocument.Paragraphs property that returns\na sequence of paragraphs or other first-level elements (headings, quotes, code snippets, etc.).\nThe following snippet prints the heading of the document:\n// Iterate over all the paragraph elements\nfor par in parsed.Paragraphs do\n    match par with\n    | Heading (size = 1; body = [ Literal (text = text) ]) -\u0026gt;\n        // Recognize heading that has a simple content\n        // containing just a literal (no other formatting)\n        printfn \u0026quot;%s\u0026quot; text\n    | _ -\u0026gt; ()\n\nYou can find more detailed information about the document structure and how to process it\nin the book F# Deep Dives.\nProcessing the document recursively\nThe library provides active patterns that can be used to easily process the Markdown\ndocument recursively. The example in this section shows how to extract all links from the\ndocument. To do that, we need to write two recursive functions. One that will process\nall paragraph-style elements and one that will process all inline formattings (inside\nparagraphs, headings etc.).\nTo avoid pattern matching on every single kind of span and every single kind of\nparagraph, we can use active patterns from the MarkdownPatterns module. These can be use\nto recognize any paragraph or span that can contain child elements:\n/// Returns all links in a specified span node\nlet rec collectSpanLinks span =\n    seq {\n        match span with\n        | DirectLink (link = url) -\u0026gt; yield url\n        | IndirectLink (key = key) -\u0026gt; yield fst (parsed.DefinedLinks.[key])\n        | MarkdownPatterns.SpanLeaf _ -\u0026gt; ()\n        | MarkdownPatterns.SpanNode (_, spans) -\u0026gt;\n            for s in spans do\n                yield! collectSpanLinks s\n    }\n\n/// Returns all links in the specified paragraph node\nlet rec collectParLinks par =\n    seq {\n        match par with\n        | MarkdownPatterns.ParagraphLeaf _ -\u0026gt; ()\n        | MarkdownPatterns.ParagraphNested (_, pars) -\u0026gt;\n            for ps in pars do\n                for p in ps do\n                    yield! collectParLinks p\n        | MarkdownPatterns.ParagraphSpans (_, spans) -\u0026gt;\n            for s in spans do\n                yield! collectSpanLinks s\n    }\n\n// Collect links in the entire document\nSeq.collect collectParLinks parsed.Paragraphs\nval it : seq\u0026lt;string\u0026gt; =\n  seq [\u0026quot;http://fsharp.net\u0026quot;; \u0026quot;http://fsharp.org\u0026quot;]\n\nThe collectSpanLinks function works on individual span elements that contain inline\nformatting (emphasis, strong) and also links. The DirectLink node from MarkdownSpan represents an inline\nlink like the one pointing to http://fsharp.net while IndirectLink represents a\nlink that uses one of the link definitions. The function simply returns the URL associated\nwith the link.\nSome span nodes (like emphasis) can contain other formatting, so we need to recursively\nprocess children. This is done by matching against MarkdownPatterns.SpanNodes which is an active\npattern that recognizes any node with children. The library also provides a function\nnamed MarkdownPatterns.SpanNode that can be used to reconstruct the same node (when you want\nto transform a document). This is similar to how the ExprShape module for working with\nF# quotations works.\nThe function collectParLinks processes paragraphs - a paragraph cannot directly be a\nlink so we just need to process all spans. This time, there are three options.\nParagraphLeaf represents a case where the paragraph does not contain any spans\n(a code block or, for example, a \u0026lt;hr\u0026gt; line); the ParagraphNested case is used for paragraphs\nthat contain other paragraphs (quotation) and ParagraphSpans is used for all other\nparagraphs that contain normal text - here we call collectSpanLinks on all nested spans.\nGenerating HTML output\nFinally, the Markdown type also includes a method Markdown.ToHtml that can be used\nto generate an HTML document from the Markdown input. The following example shows how to call it:\nlet html = Markdown.ToHtml(parsed)\n\nThere are also methods to generate .fsx, .ipynb, .md and .tex.\n","headings":["Markdown parser","Parsing documents","Working with parsed documents","Processing the document recursively","Generating HTML output"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/content.html","title":"Creating Content\n","content":"\n\u0026emsp;\n\u0026emsp;\n\nCreating Content\nThe \u0022fsdocs\u0022 tool allows documentation for a site to be built\nfrom content in a docs directory. The expected structure for a docs directory is\ndocs/**/*.md                  -- markdown with embedded code, converted to html and optionally tex/ipynb\ndocs/**/*.fsx                 -- fsx scripts converted to html and optionally tex/ipynb\ndocs/**/*                     -- other content, copied over\ndocs/**/_template.html        -- optional template, specifies the HTML template for this directory and its contents\ndocs/**/_template.tex         -- optionally indicates Latex files should be generated\ndocs/**/_template.ipynb       -- optionally indicates F# ipynb files should be generated\ndocs/**/_template.fsx         -- optionally indicates F# fsx files should be generated (even from markdown)\ndocs/reference/_template.html -- optionally specifies the default template for reference docs\n\nProcessing is by these two commands:\ndotnet fsdocs build\ndotnet fsdocs watch\n\nThe output goes in output/ by default.  Processing is recursive, making this a form of static site generation.\nLiterate Scripts and Markdown Content\nThe input directory may contain literate scripts and markdown content.\nOther Content\nContent that is not *.fsx or *.md is copied across.\nDefault Styling Content\nBy default additional content such as fsdocs-search.js, fsdocs-tips.js and fsdocs-default.css are included in\nthe content directory of the output.  This can be suppressed with --nodefaultcontent or by having your own\ncopy of this content in your content directory.\nIgnored Content\nAny file or directory beginning with . is ignored.\nFront matter\nEach content file can have an optional frontmatter.  This determines the navigation bar title, categorization ordering and meta tags.\nFor markdown, the format is:\n---\ntitle: Some Title\ncategory: Some Category\ncategoryindex: 2\nindex: 3\ndescription: Some description\nkeywords: tag1, tag2, tag3\n---\n\nFor F# scripts the frontmatter is in this form:\n(**\n---\ntitle: A Literate Script\ncategory: Examples\ncategoryindex: 2\nindex: 1\ndescription: Some description\nkeywords: tag1, tag2, tag3\n---\n*)\n\nAll entries are optional.\nThe categoryindex determines the ordering of categories.\nThe index determines the ordering of within each category.\nThe title is used in the navigation bar instead of any title inferred from the document.\nThe description is used in \u0026lt;meta name=\u0022description\u0022 as part of the {{fsdocs-meta-tags}} substitution.\nThe keywords are also used in a meta tag as part of {{fsdocs-meta-tags}}. Separate them using a ,.\nLink Translation for Inputs\nIf an input is used in markdown as a target of a markdown direct link, then that is replaced by the output file. For example:\n[Some Text](some-file.md)\n\nbecomes\n[Some Text](some-file.html)\n\nif some-file.md is one of the inputs.\nMulti-language Content\nVersions of content in other languages should go in two-letter coded sub-directories, e.g.\ndocs/ja/...\ndocs/de/...\n\nThese will be elided from the main table-of-contents and search indexes.  (Currently no language-specific\ntable of contents is built, nor language-specific site search indexes).\nTemplates and Substitutions\nTemplates are used for HTML (_template.html), LaTeX (_template.tex), Notebooks (_template.ipynb)\nand F# script outputs (_template.fsx).\nThe following substitutions determine the primary (non-styling) content of your site.\nFor example {{fsdocs-content}} is replaced with the generated content in each file.\nSubstitutions are applied when generating content from HTML templates, IPYNB templates, FSX templates.\nThey are also applied to content apart from Markdown inline code \u0060...\u0060, Markdown LaTeX and\ngenerated outputs.\nSee Styling for information about template parameters and styling beyond the default template.\n\n\n\nSubstitution name\nGenerated content\n\n\n\n\nroot\n\u0026lt;PackageProjectUrl\u0026gt; else / followed by fsdocs-collection-name\n\n\nfsdocs-collection-name\nName of .sln, single .fsproj or containing directory\n\n\nfsdocs-content\nMain page content\n\n\nfsdocs-list-of-namespaces\nHTML \u0026lt;li\u0026gt; list of namespaces with links\n\n\nfsdocs-list-of-documents\nHTML \u0026lt;li\u0026gt; list of documents with  titles and links\n\n\nfsdocs-page-title\nFirst h1 heading in literate file. Generated for API docs\n\n\nfsdocs-source\nOriginal literate script or markdown source\n\n\nfsdocs-source-filename\nName of original input source, relative to the docs root\n\n\nfsdocs-source-basename\nName of original input source, excluding its extensions, relative to the docs root\n\n\nfsdocs-tooltips\nGenerated hidden div elements for tooltips\n\n\nfsdocs-watch-script\nThe websocket script used in watch mode to trigger hot reload\n\n\nfsdocs-previous-page-link\nA relative link to the previous page based on the frontmatter index data\n\n\nfsdocs-next-page-link\nA relative link to the next page based on the frontmatter index data\n\n\nfsdocs-head-extra\nAdditional html content loaded from the _head.html file if present in the --input folder\n\n\nfsdocs-body-extra\nAdditional html content loaded from the _body.html file if present in the --input folder\n\n\nfsdocs-body-class\nA css class value to help distinguish between content and api-docs\n\n\nfsdocs-meta-tags\nA set of additional HTML meta tags, present when description and/or keywords are present in the frontmatter\n\n\n\n\nThe following substitutions are extracted from your project files and may or may not be used by the default\ntemplate:\n\n\n\nSubstitution name\nValue\n\n\n\n\nfsdocs-copyright\n\u0026lt;Copyright\u0026gt;\n\n\nfsdocs-package-project-url\n\u0026lt;PackageProjectUrl\u0026gt;\n\n\nfsdocs-package-license-expression\n\u0026lt;PackageLicenseExpression\u0026gt;\n\n\nfsdocs-package-tags\n\u0026lt;PackageTags\u0026gt;\n\n\nfsdocs-package-version\n\u0026lt;Version\u0026gt;\n\n\n\n\nFor the fsdocs tool, additional substitutions can be specified using --parameters.\nCross References to API Docs\nMarkdown content can contain cross-references to API Docs.  Use inline\nmarkdown code snippets of the special form \u0060cref:T:MyNamespace.MyType\u0060 where T:MyNamespace.MyType\nis a method, property or type xml doc sig reference, see API Docs.\nThis can include any cross-references resolved by fsdocs.\nThe generated API documentation includes buttons to copy the XML and Markdown forms of API doc references.\nFor example, within this project,\n\nthe text \u0060cref:T:FSharp.Formatting.Markdown.MarkdownParagraph\u0060 resolves to the link MarkdownParagraph\nthe text \u0060cref:T:System.Console\u0060 resolves to the link Console\nthe text \u0060cref:M:System.Console.WriteLine\u0060 resolves to the link Console.WriteLine\nthe text \u0060cref:M:System.Console.WriteLine(System.String)\u0060 resolves to the link Console.WriteLine\nthe text \u0060\u0060cref:T:FSharp.Control.FSharpAsync\u00601\u0060\u0060 resolves to the link Async\nthe text \u0060cref:T:FSharp.Control.FSharpAsync\u0060 resolves to the link Async\nthe text \u0060\u0060cref:T:FSharp.Core.array\u00601\u0060\u0060 resolves to the link array\nthe text \u0060cref:T:FSharp.Core.OptionModule\u0060 resolves to the link Option\nthe text \u0060\u0060\u0060cref:M:FSharp.Collections.ListModule.Append\u0060\u00601\u0060\u0060\u0060 resolves to the link ListModule.Append\n\n\nNOTE: These cases act as tests - if the links above do not work, then that indicates a bug or a change in the\nexternal link. Please report it.\n\nDetermining xmldoc sig references is not simple.  The API doc generated pages come with\nbuttons to copy out the XmlDoc signature.\nGenerating HTML Output\nHTML is generated by default. You can also add a _template.html.  This should contain {{fsdocs-content}},  {{fsdocs-tooltips}}\nand other placeholders. Substitutions are\napplied to this template.\nIf a file _template.html exists, then it\u0027s used as the template for HTML generation for that directory and all sub-content.\nGenerating LaTeX output\nTo generate .tex output for each script and markdown file, add a _template.tex. Substitutions are\napplied to this template. The file is either empty or contains {{fsdocs-content}} as the key where the body\nof the document is placed.\nGenerating iPython Notebook output\nTo generate .ipynb output for each script and markdown file, add a _template.ipynb, usually empty. Substitutions are\napplied to this template.\nTo add a mybinder badge to your generated notebook, ensure you have a Dockerfile and NuGet.config\nin your docs directory and use text like this:\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fsprojects/FSharp.Formatting/gh-pages?filepath=literate.ipynb)\n\nGenerating Script outputs\nTo generate .fsx output for each script and markdown file, add a _template.fsx, usually empty. Substitutions are\napplied to this template. It is either empty or contains {{fsdocs-content}} as the key where the body\nof the script is placed.\n","headings":["Creating Content","Literate Scripts and Markdown Content","Other Content","Default Styling Content","Ignored Content","Front matter","Link Translation for Inputs","Multi-language Content","Templates and Substitutions","Cross References to API Docs","Generating HTML Output","Generating LaTeX output","Generating iPython Notebook output","Generating Script outputs"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/zero-to-hero.html","title":"Getting Started","content":"\nGetting Started\nFrom zero to hero: deploying to GitHub Pages\nThis guide is meant for a typical setup of open-source projects on GitHub.\nWe start from a repository without any documentation and aim to end up with a published website on GitHub Pages.\nInstall the local tool\nIf you don\u0027t have a dotnet tool manifest, you can create one using dotnet new tool-manifest.\nNext, we can install fsdocs-tool using dotnet tool install --local fsdocs-tool.\nIt is recommended to install this tool as a local tool because it allows us to update to newer versions of the tool at our own pace.\nCreate the docs folder\nAfter we\u0027ve installed the tool, we can run dotnet fsdocs --help and see the available commands.\nBoth build and watch will generate the documentation for a solution and an input folder.\nThe default folder for --input is the ./docs folder, relative to the current working directory.\nTypically, your project will be structured like this:\n/repository-root\n  YourSolution.sln\n  ./docs\n    index.md\n    other-file.md\n  ./src\n    ./Project1/Project1.fsproj\n    ./Project2/Project2.fsproj\n\nIt is recommended to have a single solution at the root. In some editors, it is more convenient to open a solution at the root, to easily manipulate any file in the root repository folder.\nWhen users clone your repository locally, they cannot be confused on how they need to open the project in their IDE.\n\u26A0\uFE0F Please avoid putting your solution in the src folder. When we open that solution, it can be more difficult to edit files in the docs folder, as we can sometimes only see the src folder.\nThat being said, let\u0027s create the docs folder and a first Markdown file named index.md.\nWhen fsdocs runs, it will transform this index.md file to index.html, which will be served at the root.\nWe can put # Hello world in the markdown file for now.\nHaving this in place, should already serve the first page when we start the watch command:\n\ndotnet fsdocs watch\n\nOpen http://localhost:8901 and you should see our first page!\n\uD83E\uDE84 You might notice that there are some images missing. You can add these in the docs folder in the right location.\nGenerating API documentation\nBy default, fsdocs will generate API documentation for the configured --projects.\nWhen this flag is not specified, fsdocs will look for solutions or projects in the working directory.\nIt will filter these found projects, the requirements are:\n\nHaving \u0026lt;OutputType\u0026gt;library\u0026lt;/OutputType\u0026gt;\nHaving a binary, so you need to build your project first before the documentation can be generated.\nNot having \u0026lt;IsTestProject\u0026gt;true\u0026lt;/IsTestProject\u0026gt;\nHaving \u0026lt;GenerateDocumentationFile\u0026gt;true\u0026lt;/GenerateDocumentationFile\u0026gt;\n\n\uD83E\uDE84 If you made some changes in order to adhere to the rules, you may want to remove the .fsdocs/cache file.\nAdding the missing properties\nAfter our initial watch run, you may have noticed that some links aren\u0027t working yet.\nLicense, Releases Notes and Source Repository can be provided by setting MSBuild properties.\nYou can either add these properties to a single .fsproj file, or more typically, add them to a Directory.Build.props file.\nThe simplest Directory.Build.props file:\n\u0026lt;Project\u0026gt;\n    \u0026lt;PropertyGroup\u0026gt;\n        \u0026lt;RepositoryUrl\u0026gt;https://github.com/fsprojects/FSharp.AWS.DynamoDB\u0026lt;/RepositoryUrl\u0026gt;\n        \u0026lt;FsDocsLicenseLink\u0026gt;https://github.com/fsprojects/FSharp.AWS.DynamoDB/blob/master/License.md\u0026lt;/FsDocsLicenseLink\u0026gt;\n        \u0026lt;FsDocsReleaseNotesLink\u0026gt;https://github.com/fsprojects/FSharp.AWS.DynamoDB/blob/master/RELEASE_NOTES.md\u0026lt;/FsDocsReleaseNotesLink\u0026gt;\n        \u0026lt;PackageProjectUrl\u0026gt;https://fsprojects.github.io/FSharp.AWS.DynamoDB\u0026lt;/PackageProjectUrl\u0026gt;\n    \u0026lt;/PropertyGroup\u0026gt;\n\u0026lt;/Project\u0026gt;\n\n\uD83E\uDE84 If you don\u0027t have any release notes yet, you could consider using Ionide.KeepAChangelog.\nRunning dotnet fsdocs watch will now yield:\n  root --\u0026gt; https://github.com/fsprojects/FSharp.AWS.DynamoDB/\n  ...\n  fsdocs-license-link --\u0026gt; https://github.com/fsprojects/FSharp.AWS.DynamoDB/blob/master/License.md\n  fsdocs-release-notes-link --\u0026gt; https://github.com/fsprojects/FSharp.AWS.DynamoDB/blob/master/RELEASE_NOTES.md\n  ...\n  fsdocs-repository-link --\u0026gt; https://github.com/fsprojects/FSharp.AWS.DynamoDB/\n\n\u26A0\uFE0F Again, you might need to remove .fsdocs/cache in order for changes to be picked up!\n\u0026lt;PackageProjectUrl\u0026gt; is actually a very important property when you run dotnet fsdocs build.\nbuild will generate static files for the targeted production environment. In our case, this will be GitHub Pages.\nPages will host your files from https://github.com/user/project on https://user.github.io/project/ by default.\nYou can change this by adding a custom domain so we need to be sure that all links and urls will be generated correctly during a build.\nLet\u0027s now run dotnet fsdocs build.\n\u0026lt;PackageProjectUrl\u0026gt; will replace the {{root}} substitution, which is used all over the place in the default template.\n\u26A0\uFE0F You want to ensure that the static files in the output folder (after running the build) have the correct links.\nIgnore generated files\nAlright, at this point we\u0027ve made a lot of progress. If you are using git you want to add the following to your .gitignore file.\n# FSharp.Formatting\n.fsdocs/\noutput/\ntmp/\n\nShip it!\nOnce we are satisfied with our documentation, we want to publish it to GitHub Pages.\nWe can use GitHub Actions to deploy our website.\nDeploy to Pages from GitHub Actions must be enabled in the repository settings:\n\nThe typical flow is to publish your documentation after a release or after new commits were added to the default branch.\nLet\u0027s create a very basic Action that will deploy our website after pushing to the main:\nCreate a file .github/workflows/docs.yml:\nname: Docs\n\n# Trigger this Action when new code is pushed to the main branch\non:\n  push:\n    branches:\n      - main\n\n# We need some permissions to publish to Github Pages\npermissions:\n  contents: write\n  pages: write\n  id-token: write\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      # Checkout the source code\n      - uses: actions/checkout@v4\n      # Setup dotnet, please use a global.json to ensure the right SDK is used!\n      - name: Setup .NET\n        uses: actions/setup-dotnet@v3\n      # Restore the local tools\n      - name: Restore tools\n        run: dotnet tool restore\n      # Build the code for the API documentation\n      - name: Build code\n        run: dotnet build -c Release YourSolution.sln\n      # Generate the documentation files\n      - name: Generate the documentation\u0027\n        run: dotnet fsdocs build --properties Configuration=Release\n      # Upload the static files\n      - name: Upload documentation\n        uses: actions/upload-pages-artifact@v2\n        with:\n          path: ./output\n  \n  # GitHub Actions recommends deploying in a separate job.\n  deploy:\n    runs-on: ubuntu-latest\n    needs: build\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v2\n\n\u26A0\uFE0F Careful yaml is indentation sensitive!\nNext steps\nMission accomplished, right? If everything went well, you should have a published website at this point!\nHere are some next steps you could consider:\nUse fsx file in your documentation\nCreate documentation using Literate Scripts. A typical flow here is that you load your locate project binary into a script and create examples using the latest code:\n#r \u0026quot;../src/Project1/bin/Debug/net6.0/Project1.dll\u0026quot;\n\nopen Project1\n\n// Actual consumption of your project!\nlet result = SomeType.SomeMethod(\u0026quot;foo\u0026quot;)\n\nWhen using the --strict flag in dotnet fsdocs build, your documentation generation will fail if your script contains errors.\nThis is useful to ensure your documentation is always in sync with your latest public API!\nAutomatically update to newer versions of fsdocs-tool\nUsing Dependabot you can easily receive new PR\u0027s with updates to your dotnet dependencies.\nCreate a .github/dependabot.yml file with:\nversion: 2\nupdates:\n  # Update to newer version of GitHub Actions\n  - package-ecosystem: \u0022github-actions\u0022\n    directory: \u0022/\u0022\n    schedule:\n      interval: \u0022weekly\u0022\n\n  # Update to newer NuGet dependencies\n  - package-ecosystem: \u0022nuget\u0022\n    directory: \u0022/\u0022\n    schedule:\n      interval: \u0022daily\u0022\n\nThis will automatically create a new PR when there is an update to the fsdocs tool.\n\u26A0\uFE0F P\uFE0Flease be very careful, if you have followed along, we don\u0027t have any GitHub Actions right now that run against pull requests!\nIt is recommended to have an Action that builds your documentation against any incoming changes.\nYou typically want to lint code, run unit tests and perform other useful checks as well!\nExample Action, .github/workflows/ci.yml:\nname: CI\n\non: [pull_request]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v3\n    - name: Setup .NET Core\n      uses: actions/setup-dotnet@v3\n    - name: Restore tools\n      run: dotnet tool restore\n    - name: Build\n      run: dotnet build YourSolution.sln\n    - name: Documentation\n      run: dotnet fsdocs build\n\n\u26A0\uFE0F Also, never trust any update to fsdocs blindly, always check the release notes to see if there are any breaking changes.\n","headings":["Getting Started","From zero to hero: deploying to GitHub Pages","Install the local tool","Create the docs folder","Generating API documentation","Adding the missing properties","Ignore generated files","Ship it!","Next steps","Use fsx file in your documentation","Automatically update to newer versions of fsdocs-tool"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/literate.html","title":"Literate Scripts\n","content":"\n\u0026emsp;\n\u0026emsp;\n\nLiterate Scripts\nThe following example shows most of the features that can be used in a literate\nF# script file with .fsx extension. Most of the features should be quite self-explanatory:\n(**\n# First-level heading\nSome more documentation using \u0060Markdown\u0060.\n*)\n\nlet helloWorld() = printfn \u0026quot;Hello world!\u0026quot;\n\n(**\n## Second-level heading\nWith some more documentation\n*)\n\nlet numbers = [ 0 .. 99 ]\n(*** include-value: numbers ***)\n\nList.sum numbers\n(*** include-it ***)\n\nThe F# script files are processed as follows:\n\n\nA multi-line comment starting with (** and ending with *) is\nturned into text and is processed using the F# Markdown processor\n(which supports standard Markdown commands).\n\n\nA single-line comment starting with (*** and ending with ***)\nis treated as a special command. The command can consist of\nkey, key: value or key=value pairs.\n\n\n\n\n\nLiterate Command\nDescription\n\n\n\n\n(** ... *)\nMarkdown\n\n\n(*** condition: prepare ***)\nUtilise a code snippet when analyzing for tooltips or executing for outputs\n\n\n(*** condition: ipynb ***)\nInclude a code snippet when making a .ipynb notebook\n\n\n(*** condition: tex ***)\nInclude a code snippet when making a .tex output\n\n\n(*** condition: html ***)\nInclude a code snippet when making HTML output\n\n\n(*** hide ***)\nHide the subsequent snippet\n\n\n(*** raw ***)\nThe subsequent code is treated as raw text\n\n\n\n\nNaming and including snippets\nThe command define defines a named snippet (such as final-sample) and removes the command together with\nthe following F# code block from the main document. The snippet can then\nbe referred to in \u0027include\u0027. This makes it\npossible to write documents without the ordering requirements of the\nF# language.\n\n\n\nLiterate Command\nDescription\n\n\n\n\n(*** define: snippet-name ***)\nDefine a named snippet\n\n\n(*** include: snippet-name ***)\nInclude the code of the named snippet\n\n\n\n\nNaming and including outputs\n\n\n\nLiterate Command\nDescription\n\n\n\n\n(*** define-output: output-name ***)\nDefine a name for the outputs of the preceding snippet\n\n\n(*** include-output ***)\nThe console output of the preceding snippet\n\n\n(*** include-output: output-name ***)\nThe console output of the snippet (named with define-output)\n\n\n(*** include-fsi-output ***)\nThe F# Interactive output of the preceding snippet\n\n\n(*** include-fsi-output: output-name ***)\nThe F# Interactive output of the snippet (named with define-output)\n\n\n(*** include-fsi-merged-output ***)\nThe merge of console output and F# Interactive output of the preceding snippet\n\n\n(*** include-fsi-merged-output: output-name ***)\nThe merge of console output and F# Interactive output of the snippet (named with define-output)\n\n\n(*** include-it ***)\nThe formatted result of the preceding snippet\n\n\n(*** include-it: output-name ***)\nThe formatted result of the snippet (named with define-output)\n\n\n(*** include-it-raw ***)\nThe unformatted result of the preceding snippet\n\n\n(*** include-it-raw: output-name ***)\nThe unformatted result of the snippet (named with define-output)\n\n\n(*** include-value: value-name ***)\nThe formatted value, an F# identifier name\n\n\n\n\nHiding code snippets\nThe command hide specifies that the following F# code block (until the next comment or command) should be\nomitted from the output.\nEvaluating and formatting results\nThe commands to evaluate and format results are explained in evaluation.\nYou must build your documentation with evaluation turned on using --eval.\nSubstitutions\nSubstitutions are applied to content, see content.\nLiterate Markdown Documents\nFor files with .md extension, the entire file is a Markdown document, which may\ncontain F# code snippets (but also other code snippets). As usual, snippets are\nindented with four spaces. In addition, the snippets can be annotated with special\ncommands. Some of them are demonstrated in the following example:\n# First-level heading\n\n    [hide]\n    let print s = printfn \u0022%s\u0022 s\n\nSome more documentation using \u0060Markdown\u0060.\n\n    [module=Hello]\n    let helloWorld() = print \u0022Hello world!\u0022\n\n## Second-level heading\nWith some more documentation\n\n    [lang=csharp]\n    Console.WriteLine(\u0022Hello world!\u0022);\n\nWhen processing the document, all F# snippets are copied to a separate file that\nis type-checked using the F# compiler (to obtain colours and tooltips).\nThe commands are written on the first line of the named snippet, wrapped in [...]:\n\n\nThe hide command specifies that the F# snippet should not be included in the\nfinal document. This can be used to include code that is needed to type-check\nthe code, but is not visible to the reader.\n\n\nThe module=Foo command can be used to specify F# module where the snippet\nis placed. Use this command if you need multiple versions of the same snippet\nor if you need to separate code from different snippets.\n\n\nThe lang=foo command specifies the language of the named snippet. If the language\nis other than fsharp, the snippet is copied to the output as \u0026lt;pre\u0026gt; HTML\ntag without any processing.\n\n\nLaTeX in Literate Scripts and Markdown Documents\nLiterate Scripts may contain LaTeX sections in Markdown using these forms:\n\nSingle line latex starting with $$.\nA block delimited by \\begin{equation}...\\end{equation} or \\begin{align}...\\end{align}.\n\nAn indented paragraph starting with $$$.  This is F#-literate-specific and corresponds to\n\\begin{equation}...\\end{equation}.\n\n\nFor example\n$$\\frac{x}{y}$$\n\n\\begin{equation}\n   \\frac{d}{dx} \\left. \\left( x \\left( \\left. \\frac{d}{dy} x y \\; \\right|_{y=3} \\right) \\right) \\right|_{x=2}\n\\end{equation}\n\nBecomes\n\\[\\frac{x}{y}\\]\n\\[   \\frac{d}{dx} \\left. \\left( x \\left( \\left. \\frac{d}{dy} x y \\; \\right|_{y=3} \\right) \\right) \\right|_{x=2}\\]\nThe LaTeX will also be used in HTML and iPython notebook outputs.\nMaking literate scripts work for different outputs\nLiterate scripts and markdown can be turned into LaTex, Python Notebooks and F# scripts.\nA header may be needed to get the code to load, a typical example is this:\n    (*** condition: prepare ***)\n    #nowarn \u0022211\u0022\n    #I \u0022../src/FSharp.Formatting/bin/Release/netstandard2.1\u0022\n    #r \u0022FSharp.Formatting.Common.dll\u0022\n    #r \u0022FSharp.Formatting.Markdown.dll\u0022\n    #r \u0022FSharp.Formatting.CodeFormat.dll\u0022\n    #r \u0022FSharp.Formatting.Literate.dll\u0022\n    (*** condition: fsx ***)\n#if FSX\n    #r \u0022nuget: FSharp.Formatting,1.0.0\u0022\n#endif // FSX\n    (*** condition: ipynb ***)\n#if IPYNB\n    #r \u0022nuget: FSharp.Formatting,1.0.0\u0022\n#endif // IPYNB\n\nProcessing literate files programmatically\nTo process files use the two static methods to turn single documents into HTML\nas follows using functionality from the Literate type:\nopen System.IO\nopen FSharp.Formatting.Literate\n\nlet source = __SOURCE_DIRECTORY__\nlet template = Path.Combine(source, \u0026quot;template.html\u0026quot;)\n\nlet script = Path.Combine(source, \u0026quot;../docs/script.fsx\u0026quot;)\n\nLiterate.ConvertScriptFile(script, template)\n\nlet doc = Path.Combine(source, \u0026quot;../docs/document.md\u0026quot;)\n\nLiterate.ConvertMarkdownFile(doc, template)\n\nThe following sample also uses the optional parameter parameters to specify additional\nkeywords that will be replaced in the template file (this matches the template-project.html\nfile which is included as a sample in the package):\n// Load the template \u0026amp; specify project information\nlet projTemplate = source \u002B \u0026quot;template-project.html\u0026quot;\n\nlet projInfo =\n    [ \u0026quot;fsdocs-authors\u0026quot;, \u0026quot;Tomas Petricek\u0026quot;\n      \u0026quot;fsdocs-source-link\u0026quot;, \u0026quot;https://github.com/fsprojects/FSharp.Formatting\u0026quot;\n      \u0026quot;fsdocs-collection-name\u0026quot;, \u0026quot;F# Formatting\u0026quot; ]\n\nThe methods used above (Literate.ConvertScriptFile, Literate.ConvertMarkdownFile)\nproduce HTML output by default, but they can be also used to produce LaTeX output. This is done\nby setting the output kind. The following\nexample shows how to call the methods to generate LaTeX documents:\nlet templateTex = Path.Combine(source, \u0026quot;template.tex\u0026quot;)\n\nlet scriptTex = Path.Combine(source, \u0026quot;../docs/script.fsx\u0026quot;)\n\nLiterate.ConvertScriptFile(scriptTex, templateTex, outputKind = OutputKind.Latex)\n\nlet docTex = Path.Combine(source, \u0026quot;../docs/document.md\u0026quot;)\n\nLiterate.ConvertMarkdownFile(docTex, templateTex, outputKind = OutputKind.Latex)\n\nThe methods used above (ConvertScriptFile, ConvertMarkdownFile)\ncan also produce iPython Notebook output. This is done\nby setting the named parameter format to OutputKind.Pynb:\n// Process script file, Markdown document and a directory\nlet scriptPynb = Path.Combine(source, \u0026quot;../docs/script.fsx\u0026quot;)\n\nLiterate.ConvertScriptFile(scriptPynb, outputKind = OutputKind.Pynb)\n\nlet docPynb = Path.Combine(source, \u0026quot;../docs/document.md\u0026quot;)\n\nLiterate.ConvertMarkdownFile(docPynb, outputKind = OutputKind.Pynb)\n\nAll of the three methods discussed in the previous two sections take a number of optional\nparameters that can be used to tweak how the formatting works\n","headings":["Literate Scripts","Naming and including snippets","Naming and including outputs","Hiding code snippets","Evaluating and formatting results","Substitutions","Literate Markdown Documents","LaTeX in Literate Scripts and Markdown Documents","Making literate scripts work for different outputs","Processing literate files programmatically"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/commandline.html","title":"Command line\n","content":"\nCommand line\nTo use F# Formatting tools via the command line, you can use the fsdocs dotnet tool.\ndotnet tool install fsdocs-tool\ndotnet fsdocs [command] [options]\n\nThe build command\nThis command processes a docs directory and generates API docs for projects in the solution according to the\nrules of API doc generation. The input accepted is described in content.\nfsdocs build\n\nThe command line options accepted are:\n\n\n\nCommand Line Option\nDescription\n\n\n\n\n--input\nInput directory of content (default: docs)\n\n\n--projects\nProject files to build API docs for outputs, defaults to all packable projects\n\n\n--output\nOutput Directory (default \u0027output\u0027 for \u0027build\u0027 and \u0027tmp/watch\u0027 for \u0027watch\u0027)\n\n\n--ignoreuncategorized\nDisable generation of the \u0027Other\u0027 category in the navigation bar for uncategorized docs\n\n\n--noapidocs\nDisable generation of API docs\n\n\n--ignoreprojects\nDisable project cracking\n\n\n--eval\nEvaluate F# fragments in scripts\n\n\n--saveimages\nSave images referenced in docs\n\n\n--nolinenumbers\nDon\u0027t add line numbers, the default is to add line numbers.\n\n\n--parameters\nAdditional substitution parameters for templates\n\n\n--nonpublic\nThe tool will also generate documentation for non-public members\n\n\n--nodefaultcontent\nDo not copy default content styles, javascript or use default templates\n\n\n--clean\nClean the output directory\n\n\n--help\nDisplay this help screen\n\n\n--version\nDisplay version information\n\n\n--properties\nProvide properties to dotnet msbuild, e.g. --properties Configuration=Release Version=3.4\n\n\n--fscoptions\nAdditional arguments passed down as otherflags to the F# compiler when the API is being generated.Note that these arguments are trimmed, this is to overcome a limitation in the command line argument processing.A typical use-case would be to pass an addition assembly reference.Example --fscoptions \u0022 -r:MyAssembly.dll\u0022\n\n\n--strict\nFail if docs are missing or can\u0027t be generated\n\n\n\n\nThe following command line options are also accepted but it is instead recommended you use\nsettings in your .fsproj project files:\n\n\n\nCommand Line Option\nDescription\n\n\n\n\n--sourcefolder\nSource folder at time of component build (\u0026lt;FsDocsSourceFolder\u0026gt;)\n\n\n--sourcerepo\nSource repository for github links (\u0026lt;FsDocsSourceRepository\u0026gt;)\n\n\n--mdcomments\nAssume comments in F# code are markdown (\u0026lt;UsesMarkdownComments\u0026gt;)\n\n\n\n\nThe command will report on any .fsproj files that it finds, telling you if it decides to skip a particular file and why.\nFor example, a project will be skipped if:\n\nThe project name contains \u0022.Tests\u0022 or \u0022test\u0022 (because it looks like a test project)\n\nThe project does not contain\n\u0026lt;GenerateDocumentationFile\u0026gt;true\u0026lt;/GenerateDocumentationFile\u0026gt;\n\n\n\nThe watch command\nThis command does the same as fsdocs build but in \u0022watch\u0022 mode, waiting for changes. Only the files in the input\ndirectory (e.g. docs) are watched. A browser will be launched automatically (unless --nolaunch is specified).\nYou will need to ensure that the input directory exists, and contains at least index.md, otherwise the browser will\nreport an error (e.g. \u0022Problem loading...\u0022, \u0022Connection was reset\u0022).\nfsdocs watch\n\nRestarting may be necesssary on changes to project files. The same parameters are accepted, plus these:\n\n\n\nCommand Line Option\nDescription\n\n\n\n\n--noserver\nDo not serve content when watching.\n\n\n--nolaunch\nDo not launch a browser window.\n\n\n--open\nURL extension to launch http://localhost:/%s.\n\n\n--port\nPort to serve content for http://localhost serving.\n\n\n\n\nSearchable docs\nWhen using the command-line tool a Fuse search index is automatically generated in index.json.\nA search box is included in the default template via an HTML Dialog element.\nTo add search to your own _template.html:\n\ninclude an HTML element with id search-btn\ninclude a dialog element\ninclude fsdocs-search.js script\n\n\u0026lt;button id=\u0022search-btn\u0022\u0026gt;Open search dialog\u0026lt;/button\u0026gt;\n\u0026lt;dialog\u0026gt;\n    \u0026lt;input type=\u0022search\u0022 placeholder=\u0022Search docs\u0022 /\u0026gt;\n    \u0026lt;div class=\u0022results\u0022\u0026gt;\n        \u0026lt;ul\u0026gt;\u0026lt;/ul\u0026gt;\n        \u0026lt;p class=\u0022empty\u0022\u0026gt;Type something to start searching.\u0026lt;/p\u0026gt;\n    \u0026lt;/div\u0026gt;\n\u0026lt;/dialog\u0026gt;\n\u0026lt;script type=\u0022module\u0022 src=\u0022{\u0060{root}}content/fsdocs-search.js\u0022\u0026gt;\u0026lt;/script\u0026gt;\n\n","headings":["Command line","The build command","The watch command","Searchable docs"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/upgrade.html","title":"Upgrading to fsdocs\n","content":"\nUpgrading to fsdocs\nHere are the typical steps to upgrade a repo based on ProjectScaffold to use fsdocs\n\n\nRun\ndotnet new tool\ndotnet tool install fsdocs-tool\n\n\nDelete all of docs\\tools particularly docs\\tool\\generate.fsx.  Keep a copy of any templates for reference as you\u0027ll have to copy some bits across to the new template.\nPut your docs directory so it reflects the final shape of the site. For example move the content of docs\\input\\* and docs\\files\\* directly to docs\\*\nFollow the notes in styling to start to style your site.\n\nRun\ndotnet fsdocs watch\n\nand edit and test your docs.\n\n\nIf using FAKE adjust build.fsx e.g.\nTarget.create \u0022GenerateDocs\u0022 (fun _ -\u0026gt;\n   Shell.cleanDir \u0022.fsdocs\u0022\n   DotNet.exec id \u0022fsdocs\u0022 \u0022build --clean\u0022 |\u0026gt; ignore\n)\n\nTarget.create \u0022ReleaseDocs\u0022 (fun _ -\u0026gt;\n    Git.Repository.clone \u0022\u0022 projectRepo \u0022temp/gh-pages\u0022\n    Git.Branches.checkoutBranch \u0022temp/gh-pages\u0022 \u0022gh-pages\u0022\n    Shell.copyRecursive \u0022output\u0022 \u0022temp/gh-pages\u0022 true |\u0026gt; printfn \u0022%A\u0022\n    Git.CommandHelper.runSimpleGitCommand \u0022temp/gh-pages\u0022 \u0022add .\u0022 |\u0026gt; printfn \u0022%s\u0022\n    let cmd = sprintf \u0022\u0022\u0022commit -a -m \u0022Update generated documentation for version %s\u0022\u0022\u0022 release.NugetVersion\n    Git.CommandHelper.runSimpleGitCommand \u0022temp/gh-pages\u0022 cmd |\u0026gt; printfn \u0022%s\u0022\n    Git.Branches.push \u0022temp/gh-pages\u0022\n)\n\n\n\nConsider creating docs\\_template.fsx and docs\\_template.ipynb to enable co-generation of F# scripts and F# notebooks.\nIf you add support for notebooks and scripts, consider adding mybinder links to each of your literate executable content pages. For example like this.\nAlso add load sections to make sure your notebooks and scripts contain the right content to load packages out of repo.  For example like this.\n\n\nSample commands:\ndotnet tool install fsdocs-tool --local\ngit add dotnet-tools.json   \ngit rm -fr docs/tools\ngit mv docs/input/* docs\ngit mv docs/files/* docs\n\n\u0026lt;manually download and fixup the _template.html\u0026gt;\n\ndotnet fsdocs watch\n\ntouch docs/_template.fsx\ntouch docs/_template.ipynb\ngit add docs/_template.fsx\ngit add docs/_template.ipynb\n\nHere is an example PR: https://github.com/fsprojects/FSharp.Control.AsyncSeq/pull/116\n","headings":["Upgrading to fsdocs"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/evaluation.html","title":"Embedding script output\n","content":"\n\u0026emsp;\n\u0026emsp;\n\nEmbedding script output\nFor literate F# scripts, you may embed the result of running the script as part of the literate output.\nThis is a feature of the functions discussed in literate programming and\nit is implemented using the F# Compiler service.\nIncluding Console Output\nTo include the Console output use include-output:\nlet test = 40 \u002B 2\n\nprintf \u0026quot;A result is: %d\u0026quot; test\n(*** include-output ***)\n\nThe script defines a variable test and then prints it. The console output is included\nin the output.\nTo include the a formatted value use include-it:\n[ 0 .. 99 ]\n\n(*** include-it ***)\n\nTo include the meta output of F# Interactive processing such as type signatures use (*** include-fsi-output ***):\nlet test = 40 \u002B 3\n\n(*** include-fsi-output ***)\n\nTo include both console output and F# Interactive output blended use (*** include-fsi-merged-output ***).\nlet test = 40 \u002B 4\n(*** include-fsi-merged-output ***)\n\nYou can use the same commands with a named snippet:\n(*** include-it: test ***)\n(*** include-fsi-output: test ***)\n(*** include-output: test ***)\n\nYou can use the include-value command to format a specific value:\nlet value1 = [ 0 .. 50 ]\nlet value2 = [ 51 .. 100 ]\n(*** include-value: value1 ***)\n\nUsing AddPrinter and AddHtmlPrinter\nYou can use fsi.AddPrinter, fsi.AddPrintTransformer and fsi.AddHtmlPrinter to extend the formatting of objects.\nEmitting Raw Text\nTo emit raw text in F# literate scripts use the following:\n(**\n\t(*** raw ***)\n\tSome raw text.\n*)\n\nwhich would emit\n\nSome raw text.\n\ndirectly into the document.\nF# Formatting as a Library:  Specifying the Evaluator and Formatting\nIf using F# Formatting as a library the embedding of F# output requires specifying an additional parameter to the\nparsing functions discussed in literate programming documentation.\nAssuming you have all the references in place, you can now create an instance of\nFsiEvaluator that represents a wrapper for F# interactive and pass it to all the\nfunctions that parse script files or process script files:\nopen FSharp.Formatting.Literate\nopen FSharp.Formatting.Literate.Evaluation\nopen FSharp.Formatting.Markdown\n\n// Sample literate content\nlet content =\n    \u0026quot;\u0026quot;\u0026quot;\nlet a = 10\n(*** include-value:a ***)\u0026quot;\u0026quot;\u0026quot;\n\n// Create evaluator and parse script\nlet fsi = FsiEvaluator()\n\nlet doc = Literate.ParseScriptString(content, fsiEvaluator = fsi)\n\nLiterate.ToHtml(doc)\n\nWhen the fsiEvaluator parameter is specified, the script is evaluated and so you\ncan use additional commands such as include-value. When the evaluator is not specified,\nit is not created automatically, so the functionality is not available (this way,\nyou won\u0027t accidentally run unexpected code!)\nIf you specify the fsiEvaluator parameter, but don\u0027t want a specific snippet to be evaluated\n(because it might throw an exception, for example), you can use the (*** do-not-eval ***)\ncommand.\nThe constructor of FsiEvaluator takes command line parameters for fsi.exe that can\nbe used to specify, for example, defined symbols and other attributes for F# Interactive.\nYou can also subscribe to the EvaluationFailed event which is fired whenever the evaluation\nof an expression fails. You can use that to do tests that verify that all of the code in your\ndocumentation executes without errors.\nF# Formatting as a Library: Custom formatting functions\nAs mentioned earlier, values are formatted using a simple \u0022%A\u0022 formatter by default.\nHowever, you can specify a formatting function that provides nicer formatting for values\nof certain types. For example, let\u0027s say that we would want to format F# lists such as\n[1; 2; 3] as HTML ordered lists \u0026lt;ol\u0026gt;.\nThis can be done by calling FsiEvaluator.RegisterTransformation on the FsiEvaluator instance:\n// Create evaluator \u0026amp; register simple formatter for lists\nlet fsiEvaluator = FsiEvaluator()\n\nfsiEvaluator.RegisterTransformation(fun (o, ty, _executionCount) -\u0026gt;\n    // If the type of value is an F# list, format it nicely\n    if ty.IsGenericType\n       \u0026amp;\u0026amp; ty.GetGenericTypeDefinition() = typedefof\u0026lt;list\u0026lt;_\u0026gt;\u0026gt; then\n        let items =\n            // Get items as objects and create a paragraph for each item\n            [ for it in Seq.cast\u0026lt;obj\u0026gt; (unbox o) -\u0026gt; [ Paragraph([ Literal(it.ToString(), None) ], None) ] ]\n        // Return option value (success) with ordered list\n        Some [ ListBlock(MarkdownListKind.Ordered, items, None) ]\n    else\n        None)\n\nThe function is called with two arguments - o is the value to be formatted, and ty\nis the static type of the value (as inferred by the F# compiler). The sample checks\nthat the type of the value is a list (containing values of any type), and then it\ncasts all values in the list to obj (for simplicity). Then, we generate Markdown\nblocks representing an ordered list. This means that the code will work for both\nLaTeX and HTML formatting - but if you only need one, you can simply produce HTML and\nembed it in InlineHtmlBlock.\nTo use the new FsiEvaluator, we can use the same style as earlier. This time, we format\na simple list containing strings:\nlet listy =\n    \u0026quot;\u0026quot;\u0026quot;\n### Formatting demo\nlet test = [\u0026quot;one\u0026quot;;\u0026quot;two\u0026quot;;\u0026quot;three\u0026quot;]\n(*** include-value:test ***)\u0026quot;\u0026quot;\u0026quot;\n\nlet docOl = Literate.ParseScriptString(listy, fsiEvaluator = fsiEvaluator)\n\nLiterate.ToHtml(docOl)\n\nThe resulting HTML formatting of the document contains the snippet that defines test,\nfollowed by a nicely formatted ordered list:\n\nFormatting demo\n\n1: \n\n\n\nlet test = [\u0026quot;one\u0026quot;;\u0026quot;two\u0026quot;;\u0026quot;three\u0026quot;]\n\n\n\n\none\ntwo\nthree\n\n\n","headings":["Embedding script output","Including Console Output","Using AddPrinter and AddHtmlPrinter","Emitting Raw Text","F# Formatting as a Library:  Specifying the Evaluator and Formatting","F# Formatting as a Library: Custom formatting functions"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/styling.html","title":"Customization and Styling\n","content":"\nCustomization and Styling\nWhen using fsdocs, there are six levels of extra content development and styling.\n\n\nDon\u0027t do any styling or documentation customization and simply write content. This is by far the simplest option to\nmaintain.\n\n\nAdd content such as an docs/index.md to customize the front-page content for your generated docs.\nYou can also add content such as docs/reference/fslib.md to give a bespoke landing page\nfor one of your namespaces, e.g. here assumed to be namespace FsLib. This will override any\ngenerated content.\n\nCustomize via Styling Parameters\nCustomize via CSS\nCustomize via a new template\nCustomize by generating your own site using your own code\n\nBy default fsdocs does no styling customization and uses the following defaults. These are the settings used to build\nthis site.\n\n\nUses the default template\nin docs/_template.html\n\n\nUses the default styles\nin docs/content/fsdocs-default.css.\n\n\nUses no custom styles\nin docs/content/fsdocs-custom.css.\n\nUses no styling parameters except those extracted from the project files.\n\nFor your project, you don\u0027t need any of these files. However, you can add them if you wish, though if\nyou adjust them there is no guarantee that your template will continue to work with future versions of F# Formatting.\nCustomizing via Styling Parameters\nThe following content parameters are particularly related to visual styling:\n\n\n\nSubstitution name\nValue (if not overriden by --parameters)\n\n\n\n\nfsdocs-authors\n\u0026lt;Authors\u0026gt;\n\n\nfsdocs-license-link\n\u0026lt;FsDocsLicenseLink\u0026gt;\n\n\nfsdocs-logo-src\n\u0026lt;FsDocsLogoSource\u0026gt;\n\n\nfsdocs-favicon-src\n\u0026lt;FsDocsFaviconSource\u0026gt;\n\n\nfsdocs-logo-link\n\u0026lt;FsDocsLogoLink\u0026gt;\n\n\nfsdocs-release-notes-link\n\u0026lt;FsDocsReleaseNotesLink\u0026gt; else \u0026lt;PackageProjectUrl\u0026gt;/blob/master/RELEASE_NOTES.md\n\n\nfsdocs-repository-link\n\u0026lt;RepositoryUrl\u0026gt;\n\n\nfsdocs-theme\n\u0026lt;FsDocsTheme\u0026gt;, must currently be default\n\n\n\n\nThese basic entry-level styling parameters can be set in the project file or Directory.Build.props.\nFor example:\n\u0026lt;PropertyGroup\u0026gt;\n    \u0026lt;!-- Example ultra-simple styling and generation settings for FsDocs default template--\u0026gt;\n    \u0026lt;PackageLicenseUrl\u0026gt;https://github.com/foo/bar/blob/master/License.txt\u0026lt;/PackageLicenseUrl\u0026gt;\n    \u0026lt;PackageProjectUrl\u0026gt;https://foo.github.io/bar/\u0026lt;/PackageProjectUrl\u0026gt;\n    \u0026lt;RepositoryUrl\u0026gt;https://github.com/foo/bar/\u0026lt;/RepositoryUrl\u0026gt;\n    \u0026lt;FsDocsLogoLink\u0026gt;https://fsharp.org\u0026lt;/FsDocsLogoLink\u0026gt;\n    \u0026lt;FsDocsLogoSource\u0026gt;img/logo.png\u0026lt;/FsDocsLogoSource\u0026gt;\n    \u0026lt;FsDocsFaviconSource\u0026gt;img/favicon.ico\u0026lt;/FsDocsFaviconSource\u0026gt;\n    \u0026lt;FsDocsLicenseLink\u0026gt;https://github.com/foo/bar/blob/master/License.txt\u0026lt;/FsDocsLicenseLink\u0026gt;\n    \u0026lt;FsDocsReleaseNotesLink\u0026gt;https://github.com/foo/bar/blob/master/release-notes.md\u0026lt;/FsDocsReleaseNotesLink\u0026gt;\n    \u0026lt;FsDocsWarnOnMissingDocs\u0026gt;true\u0026lt;/FsDocsWarnOnMissingDocs\u0026gt;\n    \u0026lt;FsDocsTheme\u0026gt;default\u0026lt;/FsDocsTheme\u0026gt;\n\u0026lt;/PropertyGroup\u0026gt;\n\nAs an example, here is a page with alternative styling.\nCustomizing via CSS\nYou can start styling by creating a file docs/content/fsdocs-theme.css and adding entries to it.\nIt is loaded by the standard template.\nCSS variables\nThe default template is heavily based\non CSS variables. These can easily be\noverride to customize the look and feel of the default theme.\nA full list of the overrideable variables can be\nfound here.\n:root {\n    --text-color: red;\n}\n\n[data-theme=dark] {\n    --text-color: darkred;\n}\n\nPlease be aware that the dark mode in the default theme is using the same variables.\nWhen you override a variable, it will also be used in dark mode unless redefined in a [data-theme=dark] CSS query.\nCSS classes\nThe API documentation uses a set of fixed CSS classes:\n\n\n\nCSS class\nCorresponding Content\n\n\n\n\n.fsdocs-tip\ngenerated tooltips\n\n\n.fsdocs-xmldoc\ngenerated xmldoc sections\n\n\n.fsdocs-member-list\ngenerated member lists (tables)\n\n\n.fsdocs-member-usage\nusage in generated member lists\n\n\n.fsdocs-member-tooltip\ntooltips in generated member lists\n\n\n.fsdocs-member-xmldoc\ndocumentation in generated member lists\n\n\n.fsdocs-entity-list\ngenerated entity lists\n\n\n.fsdocs-entity-name\ngenerated entity lists\n\n\n.fsdocs-entity-xmldoc\ndocumentation in generated entity lists\n\n\n.fsdocs-exception-list\ngenerated exception lists\n\n\n.fsdocs-summary\nthe \u0027summary\u0027 section of an XML doc\n\n\n.fsdocs-remarks\nthe \u0027remarks\u0027 section of an XML doc\n\n\n.fsdocs-params\nthe \u0027parameters\u0027 section of an XML doc\n\n\n.fsdocs-param\na \u0027parameter\u0027 section of an XML doc\n\n\n.fsdocs-param-name\na \u0027parameter\u0027 name of an XML doc\n\n\n.fsdocs-returns\nthe \u0027returns\u0027 section of an XML doc\n\n\n.fsdocs-example\nthe \u0027example\u0027 section of an XML doc\n\n\n.fsdocs-note\nthe \u0027notes\u0027 section of an XML doc\n\n\n.fsdocs-para\na paragraph of an XML doc\n\n\n\n\nSome generated elements are given specific HTML ids:\n\n\n\nHTML element selector\nContent\n\n\n\n\nheader\nThe navigation-bar\n\n\n#fsdocs-main-menu\nThe main menu on the left side\n\n\n#content\nThe generated content\n\n\n#fsdocs-page-menu\nThe sub menu on the right side\n\n\ndialog\nThe search dialog\n\n\ndialog input[type=search]\nThe search box\n\n\n#fsdocs-logo\nThe logo\n\n\n\n\nIf you write a new theme by CSS styling please contribute it back to FSharp.Formatting.\nCustomizing via a new template\nYou can do advanced styling by creating a new template. Add a file docs/_template.html, likely starting\nwith the existing default template.\n\nNOTE: To enable hot reload during development with fsdocs watch in a custom _template.html file,\nmake sure to add the single line {{fsdocs-watch-script}}  to your \u0026lt;head\u0026gt; tag.\nNOTE: There is no guarantee that your template will continue to work with future versions of F# Formatting.\nIf you do develop a good template please consider contributing it back to F# Formatting.\n\nCustomizing menu items by template\nYou can add advanced styling to the sidebar generated menu items by creating a new template for it.\nfsdoc will look for menu templates in the --input folder, which defaults to the docs folder.\nTo customize the generated menu-item headers, use file _menu_template.html with starting template:\n\u0026lt;li class=\u0022nav-header\u0022\u0026gt;\n    {{fsdocs-menu-header-content}}\n\u0026lt;/li\u0026gt;\n{{fsdocs-menu-items}}\n\nSimilarly, to customize the individual menu item list, use file _menu-item_template.html with the starting template:\n\u0026lt;li class=\u0022nav-item\u0022\u0026gt;\u0026lt;a href=\u0022{{fsdocs-menu-item-link}}\u0022 class=\u0022nav-link\u0022\u0026gt;{{fsdocs-menu-item-content}}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\n\nDo note that files must be added before running, or won\u0027t be generated.\nIn case you want to get a unique identifier for a header or menu item, you can use {{fsdocs-menu-header-id}}\nand {{fsdocs-menu-item-id}}, respectively.\nInjecting additional html into the default template\nOccasionally, you may find the need to make small customizations to the default template, such as adding a Google\nAnalytics snippet or including additional style or script tags. To address this scenario, you can create two\nfiles: _head.html and/or _body.html.\nThe content within these files will serve as replacements for the {{fsdocs-head-extra}} and {{fsdocs-body-extra}}\nplaceholders, which are utilized in the default template.\nCustomizing by generating your own site using your own code\nThe FSharp.Formatting.ApiDocs namespace includes a GenerateModel that captures\nthe results of documentation preparation in ApiDocsModel and allows you to\ngenerate your own site using your own code.\n\nNOTE: The ApiDocsModel API is undergoing change and improvement, and there is no guarantee that your bespoke site\ngeneration will continue to work\nwith future versions of F# Formatting.\nNOTE: The ApiDocsModel currently includes some generated HTML with some specific style tags.\nIn the long term these may be removed from the design of that component.\n\n","headings":["Customization and Styling","Customizing via Styling Parameters","Customizing via CSS","CSS variables","CSS classes","Customizing via a new template","Customizing menu items by template","Injecting additional html into the default template","Customizing by generating your own site using your own code"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/index.html","title":"F# Formatting: Documentation Tools for F# Code\n","content":"F# Formatting: Documentation Tools for F# Code\nFSharp.Formatting is a set of libraries and tools for processing F# script files, markdown and for\ngenerating API documentation. F# Formatting package is used by this project and many other repositories.\nTo use the tool, install and use the fsdocs tool in a typical F# project with\nF# project files plus markdown and script content in the docs directory:\ndotnet tool install fsdocs-tool\ndotnet fsdocs build \ndotnet fsdocs watch\n\nTo use the tool, explore the following topics:\n\nAuthoring Content - explains the content expected in the docs directory for the fsdocs tool.\nUsing the Command line tool - explains how to use the fsdocs tool.\n\nGenerating API documentation - how to generate HTML documentation\nfrom \u0022XML comments\u0022 in your .NET libraries. The tool handles comments written in\nMarkdown too.\n\nStyling - explains some options for styling the output of fsdocs.\n\nUsing literate programming - explains how to generate documentation\nfor your projects or to write nicely formatted F# blog posts.\n\n\nEmbedding F# outputs in literate programming - provides more details on literate programming and\nexplains how to embed results of a literate script file in the generated output. This way,\nyou can easily format the results of running your code!\n\n\nUsing FSharp.Formatting as a library\nF# Formatting is also available on NuGet as a set of libraries.\n\n\nMarkdown parser - explains the F# Markdown\nprocessor that is available in this library with some basic examples of\ndocument processing.\n\n\nF# code formatting - more details about the F# code\nformatter and how to use it to obtain information about F# source files.\n\n\nMore information\nThe documentation for this library is generated automatically using the tools\nbuilt here. If you spot a typo, please submit a pull request! The source Markdown and F# script files are\navailable in the docs folder on GitHub.\nThe project is hosted on GitHub where you can\nreport issues, fork the project and submit pull requests.\nSee the  License file in the GitHub repository.\n","headings":["F# Formatting: Documentation Tools for F# Code","Using FSharp.Formatting as a library","More information"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/sidebyside/sidemarkdown.html","title":"Markdown Content","content":"\nExample: Using Markdown Content\nThis file demonstrates how to write Markdown document with\nembedded F# snippets that can be transformed into nice HTML\nusing the literate.fsx script from the F# Formatting\npackage.\nIn this case, the document itself is a valid Markdown and\nyou can use standard Markdown features to format the text:\n\nHere is an example of an unordered list and...\nText formatting including bold and emphasis\n\nFor more information, see the Markdown reference.\nWriting F# code\nIn standard Markdown, you can include code snippets by\nwriting a block indented by four spaces and the code\nsnippet will be turned into a \u0026lt;pre\u0026gt; element. If you do\nthe same using the Literate F# tool, the code is turned into\na nicely formatted F# snippet:\n/// The Hello World of functional languages!\nlet rec factorial x = \n  if x = 0 then 1 \n  else x * (factorial (x - 1))\n\nlet f10 = factorial 10\n\nHiding code\nIf you want to include some code in the source code,\nbut omit it from the output, you can use the hide\ncommand. You can also use module=... to specify that\nthe snippet should be placed in a separate module\n(e.g. to avoid duplicate definitions).\nThe value will be defined in the F# code that is\nprocessed and so you can use it from other (visible)\ncode and get correct tooltips:\nlet answer = Hidden.answer\n\nIncluding other snippets\nWhen writing literate programs as Markdown documents,\nyou can also include snippets in other languages.\nThese will not be colorized and processed as F#\ncode samples:\nConsole.WriteLine(\u0022Hello world!\u0022);\n\nThis snippet is turned into a pre element with the\nlang attribute set to csharp.\n","headings":["Example: Using Markdown Content","Writing F# code","Hiding code","Including other snippets"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/sidebyside/sidescript.html","title":"Literate Script","content":"\nExample: Using Literate Script Content\nThis file demonstrates how to write literate F# script\nfiles (*.fsx) that can be transformed into nice HTML\nusing the literate.fsx script from the F# Formatting\npackage.\nAs you can see, a comment starting with a double asterisk\nis treated as part of the document and is transformed\nusing Markdown, which means that you can use:\n\nUnordered or ordered lists\nText formatting including bold and emphasis\n\nAnd numerous other Markdown features.\nWriting F# code\nCode that is not inside the comment will be formatted as\na sample snippet.\n/// The Hello World of functional languages!\nlet rec factorial x =\n    if x = 0 then 1 else x * (factorial (x - 1))\n\nlet f10 = factorial 10\n\nHiding code\nIf you want to include some code in the source code,\nbut omit it from the output, you can use the hide\ncommand.\nThe value will be defined in the F# code and so you\ncan use it from other (visible) code and get the correct\ntooltips:\nlet answer = hidden\n\nMoving code around\nSometimes, it is useful to first explain some code that\nhas to be located at the end of the snippet (perhaps\nbecause it uses some definitions discussed in the middle).\nThis can be done using include and define commands.\nThe following snippet gets the correct tooltips, even though\nit uses laterFunction:\nlet sample = laterFunction () |\u0026gt; printfn \u0026quot;Got: %s\u0026quot;\n\nThen, we can explain how laterFunction is defined:\nlet laterFunction () = \u0026quot;Not very difficult, is it?\u0026quot;\n\nThis example covers pretty much all features that are\ncurrently implemented in literate.fsx, but feel free\nto fork the project on GitHub and add more\nfeatures or report bugs!\n","headings":["Example: Using Literate Script Content","Writing F# code","Hiding code","Moving code around"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/sidebyside/sideextensions.html","title":"Markdown LaTeX","content":"\nExample: Using the Markdown Extensions for LaTeX\n\nTo use LaTex extension, you need to add javascript\nlink to MathJax in\nyour template or inside a _head.html file.\n\u0026lt;script id=\u0022MathJax-script\u0022 async src=\u0022https://cdn.jsdelivr.net/npm/mathjax@3.0.1/es5/tex-mml-chtml.js\u0022\u0026gt;\u0026lt;/script\u0026gt;\n\nTo use inline LaTex, eclose LaTex code with $:\n\\(k_{n\u002B1} = n^2 \u002B k_n^2 - k_{n-1}\\). Alternatively,\nyou can also use $$.\nTo use block LaTex, start a new paragraph, with\nthe first line marked as $$$ (no close $$$):\n\\[A_{m,n} =\n \\begin{pmatrix}\n  a_{1,1} \u0026amp; a_{1,2} \u0026amp; \\cdots \u0026amp; a_{1,n} \\\\\n  a_{2,1} \u0026amp; a_{2,2} \u0026amp; \\cdots \u0026amp; a_{2,n} \\\\\n  \\vdots  \u0026amp; \\vdots  \u0026amp; \\ddots \u0026amp; \\vdots  \\\\\n  a_{m,1} \u0026amp; a_{m,2} \u0026amp; \\cdots \u0026amp; a_{m,n}\n \\end{pmatrix}\\]\nUse LaTex escape rule:\n\nEscape $ in inline mode: \\(\\$\\), \\(\\$var\\)\nOther escapes: \\(\\\u0026amp; \\% \\$ \\# \\_ \\{ \\}\\)\n\nUsing : \\(x \u0026gt; 1\\), \\(y \u0026lt; 1\\), \\(x \u0026gt;= 1\\),\n\\(y \u0026lt;= 1\\), \\(x = 1\\)\n\n\\(\u0026lt;p\u0026gt;something\u0026lt;/p\u0026gt;\\)\n\n","headings":["Example: Using the Markdown Extensions for LaTeX"],"type":"content"},{"uri":"https://fsprojects.github.io/FSharp.Formatting/templates/leftside/styling.html","title":"Example: Styling for Right-Side Navigation Bar\n","content":"\nExample: Styling for Right-Side Navigation Bar\n\n:root {\n    --body-grid-template-columns: minmax(0, 1fr) var(--main-menu-width);\n    --body-grid-template-columns-xl: minmax(0, 1fr) var(--main-menu-width) var(--page-menu-width);\n    --main-menu-grid-column: 2;\n    --main-grid-column: 1;\n}\n\nThe sidebar can be moved to the right by overwriting the following CSS variables in your fsdocs-theme.css file:\n:root {\n    --body-grid-template-columns: minmax(0, 1fr) var(--main-menu-width);\n    --body-grid-template-columns-xl: minmax(0, 1fr) var(--main-menu-width) var(--page-menu-width);\n    --main-menu-grid-column: 2;\n    --main-grid-column: 1;\n}\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n","headings":["Example: Styling for Right-Side Navigation Bar"],"type":"content"}]